{"version":3,"sources":["serviceWorker.js","helpers/chartjs.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","common/validators.js","components/SearchInput/SearchInput.js","components/StatusBullet/StatusBullet.js","components/RouteWithLayout/RouteWithLayout.js","layouts/Main/components/Footer/Footer.js","layouts/Main/components/Sidebar/components/Profile/Profile.js","layouts/Main/components/Sidebar/components/SidebarNav/SidebarNav.js","layouts/Main/components/Sidebar/Sidebar.js","layouts/Main/components/Sidebar/components/UpgradePlan/UpgradePlan.js","layouts/Main/components/Topbar/Topbar.js","layouts/Main/Main.js","layouts/Minimal/components/Topbar/Topbar.js","layouts/Minimal/Minimal.js","views/Dashboard/components/monitor/Monitor.js","views/Dashboard/components/LatestRegisterUsers/data.js","views/Dashboard/components/LatestRegisterUsers/LatestRegisterUsers.js","views/Dashboard/components/LatestFacility/data.js","views/Dashboard/components/LatestFacility/LatestFacility.js","views/Dashboard/components/LatestAssesment/chart.js","views/Dashboard/components/LatestAssesment/LatestAssesment.js","views/Dashboard/components/TasksProgress/TasksProgress.js","views/Dashboard/components/TotalFacility/TotalFacility.js","views/Dashboard/components/TotalUsers/TotalUsers.js","views/Dashboard/components/UsersByDevice/UsersByDevice.js","views/Dashboard/Dashboard.js","views/NotFound/NotFound.js","api/index.js","views/UsersList/UsersListTable.js","actions/users.js","actions/types.js","views/UsersList/UserToolBar.js","views/UsersList/UsersList.js","views/QuestionList/QuestionsListTable.js","actions/questions.js","views/QuestionList/QuestionsToolBar.js","views/QuestionList/QuestionsList.js","views/Facilities/FacilitiesListTable.js","actions/facilities.js","views/Facilities/AddFacility.js","views/Facilities/FacilitiesList.js","views/Doctors/DoctorsListTable.js","actions/doctors.js","views/Doctors/AddDoctor.js","views/Doctors/DoctorsList.js","views/HealthTips/ActionModal/ModalDelete.js","actions/healthtips.js","views/HealthTips/ActionModal/ModalEdit.js","views/HealthTips/HealthTipsListTable.js","views/HealthTips/AddHealthTips.js","views/HealthTips/HealthTipsList.js","views/HealthTipsTypes/ActionModal/ModalDelete.js","views/HealthTipsTypes/ActionModal/ModalEdit.js","views/HealthTipsTypes/HealthTipsTypeListTable.js","views/HealthTipsTypes/AddHealthType.js","views/HealthTipsTypes/HealthTipsTypeList.js","history.js","Routes.js","reducers/questionsReducer.js","reducers/facilitiesReducer.js","reducers/usersReducer.js","reducers/doctorReducer.js","reducers/healthtipsReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","height","width","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","white","black","primary","contrastText","dark","colors","indigo","main","light","secondary","blue","success","green","info","warning","orange","error","red","text","blueGrey","link","background","default","paper","icon","divider","grey","h1","color","palette","fontWeight","fontSize","letterSpacing","lineHeight","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","textTransform","MuiButton","contained","boxShadow","MuiIconButton","root","MuiPaper","elevation1","MuiTableCell","typography","MuiTableHead","MuiTypography","gutterBottom","marginBottom","theme","createMuiTheme","overrides","zIndex","appBar","drawer","checked","value","message","useStyles","makeStyles","borderRadius","alignItems","padding","spacing","display","flexBasis","marginRight","input","flexGrow","SearchInput","props","className","onChange","style","rest","classes","Paper","clsx","Input","disableUnderline","flexShrink","sm","md","lg","neutral","danger","StatusBullet","size","defaultProps","RouteWithLayout","Layout","layout","Component","component","render","matchProps","Footer","Typography","variant","Link","href","target","flexDirection","minHeight","avatar","name","marginTop","item","paddingTop","paddingBottom","justifyContent","fontWeightMedium","active","CustomRouterLink","forwardRef","ref","SidebarNav","pages","List","map","page","ListItem","disableGutters","key","title","Button","activeClassName","to","media","textAlign","content","actions","breakpoints","up","margin","nav","Sidebar","open","onClose","Drawer","anchor","Divider","signOutButton","marginLeft","Topbar","onSidebarOpen","useState","notifications","AppBar","Toolbar","alt","src","Hidden","mdDown","IconButton","Badge","badgeContent","length","lgUp","onClick","shiftContent","paddingLeft","Main","children","useTheme","isDesktop","useMediaQuery","defaultMatches","openSidebar","setOpenSidebar","shouldOpenSidebar","position","Minimal","difference","differenceIcon","differenceValue","Budget","Card","CardContent","Grid","container","justify","Avatar","id","uuid","amount","customer","createdAt","status","inner","minWidth","statusContainer","statusColors","delivered","pending","refunded","LatestOrders","mockData","orders","CardHeader","action","Table","TableHead","TableRow","TableCell","sortDirection","Tooltip","enterDelay","TableSortLabel","direction","TableBody","order","hover","moment","format","CardActions","imageUrl","updatedAt","subtract","image","LatestProducts","products","subtitle","product","ListItemAvatar","ListItemText","fromNow","edge","data","labels","datasets","label","responsive","maintainAspectRatio","animation","legend","tooltips","enabled","mode","intersect","titleFontColor","bodyFontColor","footerFontColor","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","chartContainer","LatestSales","progress","TasksProgress","LinearProgress","TotalProfit","TotalUsers","stats","device","deviceIcon","UsersByDevice","hoverBorderColor","cutoutPercentage","devices","Dashboard","xl","xs","maxWidth","NotFound","url","UsersListTable","ListUsers","useSelector","state","listOfUsers","regusers","dispatch","useDispatch","loading","setLoading","useEffect","onSuccess","onError","axios","get","baseUrl","then","response","type","payload","console","log","catch","fetchAllRegisterUsers","columns","field","filtering","isLoading","row","country","getCountryId","res","imei","created","address","lng","lad","others","pathname","getpatientlists","cursor","fontStyle","aria-label","headerStyle","exportButton","spacer","importButton","searchInput","UsersToolbar","Users","UserToolBar","QuestionsListTable","questionsList","questions","list","fetchAllQuestions","Id","question","checkstatusanswermode","option","placeholder","Questions","QuestionsToolBar","FacilitiesListTable","facilitiesList","facilities","fetchAllFacilities","contact","email","DialogTitle","withStyles","closeButton","other","disableTypography","DialogContent","MuiDialogContent","AddFacility","React","setOpen","setData","a","result","fetchData","handleClose","values","setValues","handleChange","event","Dialog","aria-labelledby","fullWidth","dividers","autoComplete","noValidate","TextField","required","select","SelectProps","native","helperText","Facilities","DoctorsListTable","doctorsList","doctors","fetchAllDoctors","surname","firstname","conatct1","contact1","contact2","lastname","whatsapp","Doctors","AlertDialog","history","useHistory","msg","push","aria-describedby","DialogContentText","tips","DialogActions","delete","toast","deleteHealthTips","autoFocus","connect","updateHealthTips","put","onSubmit","e","preventDefault","healthtiptype","imagepath","language","defaultValue","multiline","accept","multiple","htmlFor","Spinner","healthtipsList","healthtips","collectmodal","setcollectmodal","open2","setOpen2","fetchAllFHealthTips","actionButtons","border","heigth","aria-hidden","onSelect","detail","ModalEdit","createHealthTips","post","autoClose","hideProgressBar","styel","paddingRight","HealthTipsList","HealthTipsListTable","deleteHealthTipsType","updateHealthTipsType","typename","typeid","textField","healthtipstype","types","fetchAllHealthTipsType","createHealthType","createBrowserHistory","Routes","exact","from","DashboardView","MainLayout","path","userView","facilitiesView","questionsView","doctorsView","healthtipsView","healthtipstypeView","NotFoundView","MinimalLayout","initialState","questionsReducer","facilitiesReducer","usersReducer","doctorsReducer","healthtipsReducer","combineReducers","middleware","thunk","store","__REDUX_DEVTOOLS_EXTENSION__","createStore","rootReducer","compose","applyMiddleware","browserHistory","Chart","helpers","extend","elements","Rectangle","prototype","chartjs","validate","validators","App","ThemeProvider","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sMAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,qGC2KS,OACbC,KA5LF,WAAiB,IAKXC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAXIC,EAAQC,KAAKC,OAAbF,IACFG,EAAKF,KAAKG,MACVC,EAAgBF,EAAhBE,YAaAC,EAAiBL,KAAKC,OAAOK,OAAOC,QAApCF,aA+BN,GA9BIA,EAAe,IACjBA,EAAe,GAGW,qBAAjBA,IACTA,EAAe,GAGZH,EAAGM,YAWNjB,EAAOW,EAAGO,KACVjB,EAAQU,EAAGQ,EACXjB,EAAMS,EAAGS,EAAIT,EAAGU,OAAS,EACzBlB,EAASQ,EAAGS,EAAIT,EAAGU,OAAS,EAC5BjB,EAAQH,EAAQD,EAAO,GAAK,EAC5BK,EAAQ,EACRC,EAAgBK,EAAGL,eAAiB,SAfpCN,EAAOW,EAAGQ,EAAIR,EAAGW,MAAQ,EACzBrB,EAAQU,EAAGQ,EAAIR,EAAGW,MAAQ,EAC1BpB,EAAMS,EAAGS,EAEThB,EAAQ,EACRC,GAFAF,EAASQ,EAAGO,MAEKhB,EAAM,GAAK,EAC5BI,EAAgBK,EAAGL,eAAiB,UAclCO,EAAa,CAEf,IAAMU,EAAUC,KAAKC,IAAID,KAAKE,IAAI1B,EAAOC,GAAQuB,KAAKE,IAAIxB,EAAMC,IAE1DwB,GADNd,EAAcA,EAAcU,EAAUA,EAAUV,GACf,EAE3Be,EACJ5B,GAA0B,SAAlBM,EAA2BqB,EAAavB,EAAQ,GACpDyB,EACJ5B,GAA2B,UAAlBK,GAA6BqB,EAAavB,EAAQ,GACvD0B,EAAY5B,GAAyB,QAAlBI,EAA0BqB,EAAatB,EAAQ,GAClE0B,EACJ5B,GAA4B,WAAlBG,GAA8BqB,EAAatB,EAAQ,GAE3DuB,IAAeC,IACjB3B,EAAM4B,EACN3B,EAAS4B,GAGPD,IAAcC,IAChB/B,EAAO4B,EACP3B,EAAQ4B,GAIZrB,EAAIwB,YACJxB,EAAIyB,UAAYtB,EAAGuB,gBACnB1B,EAAI2B,YAAcxB,EAAGyB,YACrB5B,EAAI6B,UAAYxB,EAKhB,IAAMyB,EAAU,CAAC,CAACtC,EAAMG,GAAS,CAACH,EAAME,GAAM,CAACD,EAAOC,GAAM,CAACD,EAAOE,IAIhEoC,EADY,CAAC,SAAU,OAAQ,MAAO,SAChBC,QAAQlC,EAAe,GAKjD,SAASmC,EAASC,GAChB,OAAOJ,GAASC,EAAcG,GAAS,IALpB,IAAjBH,IACFA,EAAc,GAQhB,IAAII,EAASF,EAAS,GACtBjC,EAAIoC,OAAOD,EAAO,GAAIA,EAAO,IAE7B,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAC7BF,EAASF,EAASI,GAClB,IAAIC,EAAeD,EAAI,EACF,IAAjBC,IACFA,EAAe,GAGjB,IAAMxB,EAAQgB,EAAQ,GAAG,GAAKA,EAAQ,GAAG,GACnCjB,EAASiB,EAAQ,GAAG,GAAKA,EAAQ,GAAG,GACpCnB,EAAImB,EAAQ,GAAG,GACflB,EAAIkB,EAAQ,GAAG,GAWrB,IATA/B,EAASO,GAEIU,KAAKE,IAAIL,GAAU,IAC9Bd,EAASiB,KAAKuB,MAAMvB,KAAKE,IAAIL,GAAU,IAErCd,EAASiB,KAAKE,IAAIJ,GAAS,IAC7Bf,EAASiB,KAAKuB,MAAMvB,KAAKE,IAAIJ,GAAS,IAGpCD,EAAS,EAAG,CAEd,IAAM2B,EAAM7B,EACN8B,EAAM9B,EAAIG,EACV4B,EAAM9B,EAAIC,EACV8B,EAAM/B,EAAIC,EAEV+B,EAAMjC,EACNkC,EAAMlC,EAAIG,EACVgC,EAAMlC,EACNmC,EAAMnC,EAGZZ,EAAIoC,OAAOQ,EAAM7C,EAAQ+C,GACzB9C,EAAIgD,OAAOH,EAAM9C,EAAQgD,GACzB/C,EAAIiD,iBAAiBJ,EAAKE,EAAKF,EAAKE,EAAMhD,GAC1CC,EAAIgD,OAAOP,EAAKE,EAAM5C,GACtBC,EAAIiD,iBAAiBR,EAAKE,EAAKF,EAAM1C,EAAQ4C,GAC7C3C,EAAIgD,OAAOR,EAAMzC,EAAQ2C,GACzB1C,EAAIiD,iBAAiBT,EAAKE,EAAKF,EAAKE,EAAM3C,GAC1CC,EAAIgD,OAAOJ,EAAKE,EAAM/C,GACtBC,EAAIiD,iBAAiBL,EAAKE,EAAKF,EAAM7C,EAAQ+C,QACxC,GAAIhC,EAAQ,EAAG,CAEpB,IAAM0B,EAAM7B,EAAIG,EACV2B,EAAM9B,EACN+B,EAAM9B,EACN+B,EAAM/B,EAENgC,EAAMjC,EAAIG,EACV+B,EAAMlC,EACNmC,EAAMlC,EAAIC,EACVkC,EAAMnC,EAAIC,EAGhBb,EAAIoC,OAAOQ,EAAM7C,EAAQ+C,GACzB9C,EAAIgD,OAAOH,EAAM9C,EAAQgD,GACzB/C,EAAIiD,iBAAiBJ,EAAKE,EAAKF,EAAKE,EAAMhD,GAC1CC,EAAIgD,OAAOP,EAAKE,EAAM5C,GACtBC,EAAIiD,iBAAiBR,EAAKE,EAAKF,EAAM1C,EAAQ4C,GAC7C3C,EAAIgD,OAAOR,EAAMzC,EAAQ2C,GACzB1C,EAAIiD,iBAAiBT,EAAKE,EAAKF,EAAKE,EAAM3C,GAC1CC,EAAIgD,OAAOJ,EAAKE,EAAM/C,GACtBC,EAAIiD,iBAAiBL,EAAKE,EAAKF,EAAM7C,EAAQ+C,QAG7C9C,EAAIoC,OAAOzB,EAAIZ,EAAQa,GACvBZ,EAAIgD,OAAOrC,EAAIG,EAAQf,EAAQa,GAC/BZ,EAAIiD,iBAAiBtC,EAAIG,EAAOF,EAAGD,EAAIG,EAAOF,EAAIb,GAClDC,EAAIgD,OAAOrC,EAAIG,EAAOF,EAAIC,EAASd,GACnCC,EAAIiD,iBACFtC,EAAIG,EACJF,EAAIC,EACJF,EAAIG,EAAQf,EACZa,EAAIC,GAENb,EAAIgD,OAAOrC,EAAIZ,EAAQa,EAAIC,GAC3Bb,EAAIiD,iBAAiBtC,EAAGC,EAAIC,EAAQF,EAAGC,EAAIC,EAASd,GACpDC,EAAIgD,OAAOrC,EAAGC,EAAIb,GAClBC,EAAIiD,iBAAiBtC,EAAGC,EAAGD,EAAIZ,EAAQa,GAI3CZ,EAAIkD,OACA7C,GACFL,EAAImD,W,iBCvLFC,EAAQ,UAGC,GACbC,MAHY,UAIZD,QACAE,QAAS,CACPC,aAAcH,EACdI,KAAMC,SAAOC,OAAO,KACpBC,KAAMF,SAAOC,OAAO,KACpBE,MAAOH,SAAOC,OAAO,MAEvBG,UAAW,CACTN,aAAcH,EACdI,KAAMC,SAAOK,KAAK,KAClBH,KAAMF,SAAOK,KAAP,KACNF,MAAOH,SAAOK,KAAP,MAETC,QAAS,CACPR,aAAcH,EACdI,KAAMC,SAAOO,MAAM,KACnBL,KAAMF,SAAOO,MAAM,KACnBJ,MAAOH,SAAOO,MAAM,MAEtBC,KAAM,CACJV,aAAcH,EACdI,KAAMC,SAAOK,KAAK,KAClBH,KAAMF,SAAOK,KAAK,KAClBF,MAAOH,SAAOK,KAAK,MAErBI,QAAS,CACPX,aAAcH,EACdI,KAAMC,SAAOU,OAAO,KACpBR,KAAMF,SAAOU,OAAO,KACpBP,MAAOH,SAAOU,OAAO,MAEvBC,MAAO,CACLb,aAAcH,EACdI,KAAMC,SAAOY,IAAI,KACjBV,KAAMF,SAAOY,IAAI,KACjBT,MAAOH,SAAOY,IAAI,MAEpBC,KAAM,CACJhB,QAASG,SAAOc,SAAS,KACzBV,UAAWJ,SAAOc,SAAS,KAC3BC,KAAMf,SAAOK,KAAK,MAEpBW,WAAY,CACVC,QAAS,UACTC,MAAOvB,GAETwB,KAAMnB,SAAOc,SAAS,KACtBM,QAASpB,SAAOqB,KAAK,MCpDR,GACbC,GAAI,CACFC,MAAOC,EAAQX,KAAKhB,QACpB4B,WAAY,IACZC,SAAU,OACVC,cAAe,UACfC,WAAY,QAEdC,GAAI,CACFN,MAAOC,EAAQX,KAAKhB,QACpB4B,WAAY,IACZC,SAAU,OACVC,cAAe,UACfC,WAAY,QAEdE,GAAI,CACFP,MAAOC,EAAQX,KAAKhB,QACpB4B,WAAY,IACZC,SAAU,OACVC,cAAe,UACfC,WAAY,QAEdG,GAAI,CACFR,MAAOC,EAAQX,KAAKhB,QACpB4B,WAAY,IACZC,SAAU,OACVC,cAAe,UACfC,WAAY,QAEdI,GAAI,CACFT,MAAOC,EAAQX,KAAKhB,QACpB4B,WAAY,IACZC,SAAU,OACVC,cAAe,UACfC,WAAY,QAEdK,GAAI,CACFV,MAAOC,EAAQX,KAAKhB,QACpB4B,WAAY,IACZC,SAAU,OACVC,cAAe,UACfC,WAAY,QAEdM,UAAW,CACTX,MAAOC,EAAQX,KAAKhB,QACpB6B,SAAU,OACVC,cAAe,UACfC,WAAY,QAEdO,UAAW,CACTZ,MAAOC,EAAQX,KAAKT,UACpBqB,WAAY,IACZC,SAAU,OACVC,cAAe,UACfC,WAAY,QAEdQ,MAAO,CACLb,MAAOC,EAAQX,KAAKhB,QACpB6B,SAAU,OACVC,cAAe,UACfC,WAAY,QAEdS,MAAO,CACLd,MAAOC,EAAQX,KAAKT,UACpBsB,SAAU,OACVC,cAAe,UACfC,WAAY,QAEdU,OAAQ,CACNf,MAAOC,EAAQX,KAAKhB,QACpB6B,SAAU,QAEZa,QAAS,CACPhB,MAAOC,EAAQX,KAAKT,UACpBsB,SAAU,OACVC,cAAe,SACfC,WAAY,QAEdY,SAAU,CACRjB,MAAOC,EAAQX,KAAKT,UACpBsB,SAAU,OACVD,WAAY,IACZE,cAAe,SACfC,WAAY,OACZa,cAAe,cC/EJ,GACbC,UCRa,CACbC,UAAW,CACTC,UACE,8FACF3E,gBAAiB,YDKnB4E,cEPa,CACbC,KAAM,CACJvB,MAAOC,EAAQL,KACf,UAAW,CACTlD,gBAAiB,yBFIrB8E,SGVa,CACbC,WAAY,CACVJ,UAAW,mEHSbK,aIRa,CACbH,KAAK,2BACAI,EAAWd,OADZ,IAEFtE,aAAa,aAAD,OAAe0D,EAAQJ,YJMrC+B,aKVa,CACbL,KAAM,CACJ7E,gBAAiB+B,SAAOqB,KAAK,MLS/B+B,cMba,CACbC,aAAc,CACZC,aAAc,KCcHC,EAVDC,YAAe,CAC3BhC,UACA0B,aACAO,YACAC,OAAQ,CACNC,OAAQ,KACRC,OAAQ,QCNG,G,cAAA,CACbC,QAPc,SAACC,EAAO/G,GACtB,IAAc,IAAV+G,EACF,OAAO/G,EAAQgH,SAAW,qB,oECKxBC,EAAYC,aAAW,SAAAV,GAAK,MAAK,CACrCT,KAAM,CACJoB,aAAc,MACdC,WAAY,SACZC,QAASb,EAAMc,QAAQ,GACvBC,QAAS,OACTC,UAAW,KAEbpD,KAAM,CACJqD,YAAajB,EAAMc,QAAQ,GAC3B9C,MAAOgC,EAAM/B,QAAQX,KAAKT,WAE5BqE,MAAO,CACLC,SAAU,EACVhD,SAAU,OACVE,WAAY,OACZD,cAAe,eAgCJgD,EA5BK,SAAAC,GAAU,IACpBC,EAAwCD,EAAxCC,UAAWC,EAA6BF,EAA7BE,SAAUC,EAAmBH,EAAnBG,MAAUC,EADZ,YACqBJ,EADrB,kCAGrBK,EAAUjB,IAEhB,OACE,kBAACkB,EAAA,EAAD,iBACMF,EADN,CAEEH,UAAWM,YAAKF,EAAQnC,KAAM+B,GAC9BE,MAAOA,IAEP,kBAAC,IAAD,CAAYF,UAAWI,EAAQ9D,OAC/B,kBAACiE,EAAA,EAAD,iBACMJ,EADN,CAEEH,UAAWI,EAAQR,MACnBY,kBAAgB,EAChBP,SAAUA,O,QCtCZd,EAAYC,aAAW,SAAAV,GAAK,MAAK,CACrCT,KAAM,CACJwB,QAAS,eACTJ,aAAc,MACdQ,SAAU,EACVY,WAAY,GAEdC,GAAI,CACFnI,OAAQmG,EAAMc,QAAQ,GACtBhH,MAAOkG,EAAMc,QAAQ,IAEvBmB,GAAI,CACFpI,OAAQmG,EAAMc,QAAQ,GACtBhH,MAAOkG,EAAMc,QAAQ,IAEvBoB,GAAI,CACFrI,OAAQmG,EAAMc,QAAQ,GACtBhH,MAAOkG,EAAMc,QAAQ,IAEvBqB,QAAS,CACPzH,gBAAiBsF,EAAM/B,QAAQkE,SAEjC7F,QAAS,CACP5B,gBAAiBsF,EAAM/B,QAAQ3B,QAAQK,MAEzCM,KAAM,CACJvC,gBAAiBsF,EAAM/B,QAAQhB,KAAKN,MAEtCO,QAAS,CACPxC,gBAAiBsF,EAAM/B,QAAQf,QAAQP,MAEzCyF,OAAQ,CACN1H,gBAAiBsF,EAAM/B,QAAQb,MAAMT,MAEvCI,QAAS,CACPrC,gBAAiBsF,EAAM/B,QAAQlB,QAAQJ,UAIrC0F,EAAe,SAAAhB,GAAU,IAAD,EACpBC,EAAoCD,EAApCC,UAAWgB,EAAyBjB,EAAzBiB,KAAMtE,EAAmBqD,EAAnBrD,MAAUyD,EADP,YACgBJ,EADhB,8BAGtBK,EAAUjB,IAEhB,OACE,0CACMgB,EADN,CAEEH,UAAWM,aAAI,mBAEVF,EAAQnC,MAAO,GAFL,cAGVmC,EAAQY,GAAQA,GAHN,cAIVZ,EAAQ1D,GAASA,GAJP,GAMbsD,OAmBRe,EAAaE,aAAe,CAC1BD,KAAM,KACNtE,MAAO,WAGMqE,QCzDAG,EArBS,SAAAnB,GAAU,IAChBoB,EAA0CpB,EAAlDqB,OAA2BC,EAAuBtB,EAAlCuB,UAAyBnB,EADlB,YAC2BJ,EAD3B,wBAG/B,OACE,kBAAC,IAAD,iBACMI,EADN,CAEEoB,OAAQ,SAAAC,GAAU,OAChB,kBAACL,EAAD,KACE,kBAACE,EAAcG,S,2CCNnBrC,EAAYC,aAAW,SAAAV,GAAK,MAAK,CACrCT,KAAM,CACJsB,QAASb,EAAMc,QAAQ,QAoCZiC,EAhCA,SAAA1B,GAAU,IACfC,EAAuBD,EAAvBC,UAAcG,EADA,YACSJ,EADT,eAGhBK,EAAUjB,IAEhB,OACE,yCACMgB,EADN,CAEEH,UAAWM,YAAKF,EAAQnC,KAAM+B,KAE9B,kBAAC0B,EAAA,EAAD,CAAYC,QAAQ,SAApB,OACS,IACP,kBAACC,EAAA,EAAD,CACEN,UAAU,IACVO,KAAK,IACLC,OAAO,UAHT,YAFF,UAWA,kBAACJ,EAAA,EAAD,CAAYC,QAAQ,WAApB,2D,8GC1BYvC,aAAW,SAAAV,GAAK,MAAK,CACrCT,KAAM,CACJwB,QAAS,OACTsC,cAAe,SACfzC,WAAY,SACZ0C,UAAW,eAEbC,OAAQ,CACNzJ,MAAO,GACPD,OAAQ,IAEV2J,KAAM,CACJC,UAAWzD,EAAMc,QAAQ,Q,4BCVvBL,GAAYC,aAAW,SAAAV,GAAK,MAAK,CACrCT,KAAM,GACNmE,KAAM,CACJ3C,QAAS,OACT4C,WAAY,EACZC,cAAe,GAEjB7E,OAAQ,CACNf,MAAOvB,SAAOc,SAAS,KACvBsD,QAAS,WACTgD,eAAgB,aAChB3E,cAAe,OACfd,cAAe,EACftE,MAAO,OACPoE,WAAY8B,EAAML,WAAWmE,kBAE/BlG,KAAM,CACJI,MAAOgC,EAAM/B,QAAQL,KACrB9D,MAAO,GACPD,OAAQ,GACRkH,QAAS,OACTH,WAAY,SACZK,YAAajB,EAAMc,QAAQ,IAE7BiD,OAAQ,CACN/F,MAAOgC,EAAM/B,QAAQ3B,QAAQK,KAC7BuB,WAAY8B,EAAML,WAAWmE,iBAC7B,UAAW,CACT9F,MAAOgC,EAAM/B,QAAQ3B,QAAQK,WAK7BqH,GAAmBC,sBAAW,SAAC5C,EAAO6C,GAAR,OAClC,yBACEA,IAAKA,EACL1C,MAAO,CAAEL,SAAU,IAEnB,kBAAC,IAAeE,OAwCL8C,GApCI,SAAA9C,GAAU,IACnB+C,EAA8B/C,EAA9B+C,MAAO9C,EAAuBD,EAAvBC,UAAcG,EADH,YACYJ,EADZ,uBAGpBK,EAAUjB,KAEhB,OACE,kBAAC4D,GAAA,EAAD,iBACM5C,EADN,CAEEH,UAAWM,YAAKF,EAAQnC,KAAM+B,KAE7B8C,EAAME,KAAI,SAAAC,GAAI,OACb,kBAACC,GAAA,EAAD,CACElD,UAAWI,EAAQgC,KACnBe,gBAAc,EACdC,IAAKH,EAAKI,OAEV,kBAACC,GAAA,EAAD,CACEC,gBAAiBnD,EAAQqC,OACzBzC,UAAWI,EAAQ3C,OACnB6D,UAAWoB,GACXc,GAAIP,EAAKpB,MAET,yBAAK7B,UAAWI,EAAQ9D,MAAO2G,EAAK3G,MACnC2G,EAAKI,aC5DZlE,ICRYC,aAAW,SAAAV,GAAK,MAAK,CACrCT,KAAM,CACJ7E,gBAAiB+B,SAAOqB,KAAK,KAE/BiH,MAAO,CACLpB,WAAY3D,EAAMc,QAAQ,GAC1BjH,OAAQ,GACRmL,UAAW,SACX,UAAW,CACTnL,OAAQ,OACRC,MAAO,SAGXmL,QAAS,CACPpE,QAASb,EAAMc,QAAQ,EAAG,IAE5BoE,QAAS,CACPrE,QAASb,EAAMc,QAAQ,EAAG,GAC1BC,QAAS,OACT8C,eAAgB,cDXFnD,aAAW,SAAAV,GAAK,MAAK,CACrCK,OAAO,aACLvG,MAAO,KACNkG,EAAMmF,YAAYC,GAAG,MAAQ,CAC5B3B,UAAW,GACX5J,OAAQ,sBAGZ0F,KAAM,CACJ7E,gBAAiBsF,EAAM/B,QAAQ7B,MAC/B2E,QAAS,OACTsC,cAAe,SACfxJ,OAAQ,OACRgH,QAASb,EAAMc,QAAQ,IAEzBjD,QAAS,CACPwH,OAAQrF,EAAMc,QAAQ,EAAG,IAE3BwE,IAAK,CACHvF,aAAcC,EAAMc,QAAQ,SA2EjByE,GAvEC,SAAAlE,GAAU,IAChBmE,EAA+CnE,EAA/CmE,KAAMvC,EAAyC5B,EAAzC4B,QAASwC,EAAgCpE,EAAhCoE,QAASnE,EAAuBD,EAAvBC,UAAcG,EADvB,YACgCJ,EADhC,0CAGjBK,EAAUjB,KAEV2D,EAAQ,CACZ,CACEO,MAAO,YACPxB,KAAM,aACNvF,KAAM,kBAAC,IAAD,OAER,CACE+G,MAAO,kBACPxB,KAAM,QACNvF,KAAM,kBAAC,KAAD,OAER,CACE+G,MAAO,cACPxB,KAAM,cACNvF,KAAM,kBAAC,KAAD,OAER,CACE+G,MAAO,aACPxB,KAAM,cACNvF,KAAM,kBAAC,KAAD,OAER,CACE+G,MAAO,sBACPxB,KAAM,aACNvF,KAAM,kBAAC,KAAD,OAER,CACE+G,MAAO,qBACPxB,KAAM,WACNvF,KAAM,kBAAC,KAAD,QAMV,OACE,kBAAC8H,EAAA,EAAD,CACEC,OAAO,OACPjE,QAAS,CAAE/D,MAAO+D,EAAQrB,QAC1BoF,QAASA,EACTD,KAAMA,EACNvC,QAASA,GAET,yCACMxB,EADN,CAEEH,UAAWM,YAAKF,EAAQnC,KAAM+B,KAG9B,kBAACsE,EAAA,EAAD,CAAStE,UAAWI,EAAQ7D,UAC5B,kBAAC,GAAD,CACEyD,UAAWI,EAAQ4D,IACnBlB,MAAOA,O,iHEnFX3D,GAAYC,aAAW,SAAAV,GAAK,MAAK,CACrCT,KAAM,CACJF,UAAW,QAEb8B,SAAU,CACRA,SAAU,GAEZ0E,cAAe,CACbC,WAAY9F,EAAMc,QAAQ,QA6DfiF,GAzDA,SAAA1E,GAAU,IACfC,EAAsCD,EAAtCC,UAAW0E,EAA2B3E,EAA3B2E,cAAkBvE,EADf,YACwBJ,EADxB,+BAGhBK,EAAUjB,KAHM,EAKEwF,mBAAS,IAA1BC,EALe,oBAOtB,OACE,kBAACC,GAAA,EAAD,iBACM1E,EADN,CAEEH,UAAWM,YAAKF,EAAQnC,KAAM+B,KAE9B,kBAAC8E,GAAA,EAAD,KACE,kBAAC,IAAD,CAAYtB,GAAG,KACb,yBACEuB,IAAI,OACJC,IAAI,gCACJxM,MAAM,OACND,OAAO,UAGX,yBAAKyH,UAAWI,EAAQP,WACxB,kBAACoF,GAAA,EAAD,CAAQC,QAAM,GACZ,kBAACC,GAAA,EAAD,CAAYzI,MAAM,WAChB,kBAAC0I,GAAA,EAAD,CACEC,aAAcT,EAAcU,OAC5B5I,MAAM,UACNiF,QAAQ,OAER,kBAAC,KAAD,QAGJ,kBAACwD,GAAA,EAAD,CACEnF,UAAWI,EAAQmE,cACnB7H,MAAM,WAEN,kBAAC,KAAD,QAGJ,kBAACuI,GAAA,EAAD,CAAQM,MAAI,GACV,kBAACJ,GAAA,EAAD,CACEzI,MAAM,UACN8I,QAASd,GAET,kBAAC,KAAD,WC1DNvF,GAAYC,aAAW,SAAAV,GAAK,MAAK,CACrCT,KAAK,aACHoE,WAAY,GACZ9J,OAAQ,QACPmG,EAAMmF,YAAYC,GAAG,MAAQ,CAC5BzB,WAAY,KAGhBoD,aAAc,CACZC,YAAa,KAEf/B,QAAS,CACPpL,OAAQ,YAkDGoN,GA9CF,SAAA5F,GAAU,IAAD,EACZ6F,EAAa7F,EAAb6F,SAEFxF,EAAUjB,KACVT,EAAQmH,cACRC,EAAYC,YAAcrH,EAAMmF,YAAYC,GAAG,MAAO,CAC1DkC,gBAAgB,IANE,EASkBrB,oBAAS,GAT3B,mBASbsB,EATa,KASAC,EATA,KAmBdC,IAAoBL,GAAmBG,EAE7C,OACE,yBACEjG,UAAWM,aAAI,mBACZF,EAAQnC,MAAO,GADH,cAEZmC,EAAQqF,aAAeK,GAFX,KAKf,kBAAC,GAAD,CAAQpB,cAjBc,WACxBwB,GAAe,MAiBb,kBAAC,GAAD,CACE/B,QAfqB,WACzB+B,GAAe,IAeXhC,KAAMiC,EACNxE,QAASmE,EAAY,aAAe,cAEtC,0BAAM9F,UAAWI,EAAQuD,SACtBiC,EACD,kBAAC,EAAD,SCrDFzG,GAAYC,aAAW,iBAAO,CAClCnB,KAAM,CACJF,UAAW,YAgCA0G,GA5BA,SAAA1E,GAAU,IACfC,EAAuBD,EAAvBC,UAAcG,EADA,YACSJ,EADT,eAGhBK,EAAUjB,KAEhB,OACE,kBAAC0F,GAAA,EAAD,iBACM1E,EADN,CAEEH,UAAWM,YAAKF,EAAQnC,KAAM+B,GAC9BtD,MAAM,UACN0J,SAAS,UAET,kBAACtB,GAAA,EAAD,KACE,kBAAC,IAAD,CAAYtB,GAAG,KACb,yBACEuB,IAAI,OACJC,IAAI,sCCvBV7F,GAAYC,aAAW,iBAAO,CAClCnB,KAAM,CACJoE,WAAY,GACZ9J,OAAQ,QAEVoL,QAAS,CACPpL,OAAQ,YAsBG8N,GAlBC,SAAAtG,GAAU,IAChB6F,EAAa7F,EAAb6F,SAEFxF,EAAUjB,KAEhB,OACE,yBAAKa,UAAWI,EAAQnC,MACtB,kBAAC,GAAD,MACA,0BAAM+B,UAAWI,EAAQuD,SAAUiC,K,mDCjBnCzG,GAAYC,aAAW,SAAAV,GAAK,MAAK,CACrCT,KAAM,CACJ1F,OAAQ,QAEVoL,QAAS,CACPrE,WAAY,SACZG,QAAS,QAEX4D,MAAO,CACLzG,WAAY,KAEdqF,OAAQ,CACN7I,gBAAiBsF,EAAM/B,QAAQb,MAAMT,KACrC9C,OAAQ,GACRC,MAAO,IAET8D,KAAM,CACJ/D,OAAQ,GACRC,MAAO,IAET8N,WAAY,CACVnE,UAAWzD,EAAMc,QAAQ,GACzBC,QAAS,OACTH,WAAY,UAEdiH,eAAgB,CACd7J,MAAOgC,EAAM/B,QAAQb,MAAMZ,MAE7BsL,gBAAiB,CACf9J,MAAOgC,EAAM/B,QAAQb,MAAMZ,KAC3ByE,YAAajB,EAAMc,QAAQ,QAsDhBiH,GAlDA,SAAA1G,GAAU,IACfC,EAAuBD,EAAvBC,UAAcG,EADA,YACSJ,EADT,eAGhBK,EAAUjB,KAEhB,OACE,kBAACuH,GAAA,EAAD,iBACMvG,EADN,CAEEH,UAAWM,YAAKF,EAAQnC,KAAM+B,KAE9B,kBAAC2G,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,WAAS,EACTC,QAAQ,iBAER,kBAACF,GAAA,EAAD,CAAMxE,MAAI,GACR,kBAACV,EAAA,EAAD,CACE1B,UAAWI,EAAQiD,MACnB3G,MAAM,gBACN8B,cAAY,EACZmD,QAAQ,SAJV,aAQA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,MAApB,UAEF,kBAACiF,GAAA,EAAD,CAAMxE,MAAI,GACR,kBAAC2E,GAAA,EAAD,CAAQ/G,UAAWI,EAAQ6B,QACzB,kBAAC,KAAD,CAAWjC,UAAWI,EAAQ9D,UAIpC,yBAAK0D,UAAWI,EAAQkG,YAEtB,kBAAC5E,EAAA,EAAD,CACE1B,UAAWI,EAAQ1C,QACnBiE,QAAQ,WAFV,wB,4KCzEK,IACb,CACEqF,GAAIC,OACJrE,IAAK,UACLsE,OAAQ,KACRC,SAAU,CACRjF,KAAM,qBAERkF,UAAW,WACXC,OAAQ,WAEV,CACEL,GAAIC,OACJrE,IAAK,UACLsE,OAAQ,KACRC,SAAU,CACRjF,KAAM,UAERkF,UAAW,WACXC,OAAQ,aAEV,CACEL,GAAIC,OACJrE,IAAK,UACLsE,OAAQ,MACRC,SAAU,CACRjF,KAAM,oBAERkF,UAAW,SACXC,OAAQ,YAEV,CACEL,GAAIC,OACJrE,IAAK,UACLsE,OAAQ,MACRC,SAAU,CACRjF,KAAM,eAERkF,UAAW,WACXC,OAAQ,WAEV,CACEL,GAAIC,OACJrE,IAAK,UACLsE,OAAQ,MACRC,SAAU,CACRjF,KAAM,oBAERkF,UAAW,WACXC,OAAQ,aAEV,CACEL,GAAIC,OACJrE,IAAK,UACLsE,OAAQ,MACRC,SAAU,CACRjF,KAAM,gBAERkF,UAAW,WACXC,OAAQ,cCnCNlI,GAAYC,aAAW,SAAAV,GAAK,MAAK,CACrCT,KAAM,GACN0F,QAAS,CACPpE,QAAS,GAEX+H,MAAO,CACLC,SAAU,KAEZC,gBAAiB,CACf/H,QAAS,OACTH,WAAY,UAEd+H,OAAQ,CACN1H,YAAajB,EAAMc,QAAQ,IAE7BoE,QAAS,CACPrB,eAAgB,gBAIdkF,GAAe,CACnBC,UAAW,UACXC,QAAS,OACTC,SAAU,UAkGGC,GA/FM,SAAA9H,GAAU,IACrBC,EAAuBD,EAAvBC,UAAcG,EADM,YACGJ,EADH,eAGtBK,EAAUjB,KAHY,EAKXwF,mBAASmD,IAAnBC,EALqB,oBAO5B,OACE,kBAACrB,GAAA,EAAD,iBACMvG,EADN,CAEEH,UAAWM,YAAKF,EAAQnC,KAAM+B,KAE9B,kBAACgI,GAAA,EAAD,CACEC,OACE,kBAAC3E,GAAA,EAAD,CACE5G,MAAM,UACNsE,KAAK,QACLW,QAAQ,YAHV,aAQF0B,MAAM,4BAER,kBAACiB,EAAA,EAAD,MACA,kBAACqC,GAAA,EAAD,CAAa3G,UAAWI,EAAQuD,SAC9B,kBAAC,KAAD,KACE,yBAAK3D,UAAWI,EAAQkH,OACtB,kBAACY,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,kBACA,kBAACA,GAAA,EAAD,iBACA,kBAACA,GAAA,EAAD,CAAWC,cAAc,QACvB,kBAACC,GAAA,EAAD,CACEC,WAAY,IACZnF,MAAM,QAEN,kBAACoF,GAAA,EAAD,CACEhG,QAAM,EACNiG,UAAU,QAFZ,UAQJ,kBAACL,GAAA,EAAD,iBAGJ,kBAACM,GAAA,EAAD,KACGZ,EAAO/E,KAAI,SAAA4F,GAAK,OACf,kBAACR,GAAA,EAAD,CACES,OAAK,EACLzF,IAAKwF,EAAM5B,IAEX,kBAACqB,GAAA,EAAD,KAAYO,EAAMhG,KAClB,kBAACyF,GAAA,EAAD,KAAYO,EAAMzB,SAASjF,MAC3B,kBAACmG,GAAA,EAAD,KACGS,KAAOF,EAAMxB,WAAW2B,OAAO,eAElC,kBAACV,GAAA,EAAD,KACE,yBAAKrI,UAAWI,EAAQoH,iBACtB,kBAAC,EAAD,CACExH,UAAWI,EAAQiH,OACnB3K,MAAO+K,GAAamB,EAAMvB,QAC1BrG,KAAK,OAEN4H,EAAMvB,kBAUzB,kBAAC/C,EAAA,EAAD,MACA,kBAAC0E,GAAA,EAAD,CAAahJ,UAAWI,EAAQwD,SAC9B,kBAACN,GAAA,EAAD,CACE5G,MAAM,UACNsE,KAAK,QACLW,QAAQ,QAHV,YAKW,kBAAC,KAAD,U,yCCrIJ,IACb,CACEqF,GAAIC,OACJ/E,KAAM,UACN+G,SAAU,iCACVC,UAAWJ,OAASK,SAAS,EAAG,UAElC,CACEnC,GAAIC,OACJ/E,KAAM,qBACN+G,SAAU,iCACVC,UAAWJ,OAASK,SAAS,EAAG,UAElC,CACEnC,GAAIC,OACJ/E,KAAM,QACN+G,SAAU,iCACVC,UAAWJ,OAASK,SAAS,EAAG,UAElC,CACEnC,GAAIC,OACJ/E,KAAM,OACN+G,SAAU,iCACVC,UAAWJ,OAASK,SAAS,EAAG,UAElC,CACEnC,GAAIC,OACJ/E,KAAM,SACN+G,SAAU,iCACVC,UAAWJ,OAASK,SAAS,EAAG,WCV9BhK,GAAYC,aAAW,iBAAO,CAClCnB,KAAM,CACJ1F,OAAQ,QAEVoL,QAAS,CACPpE,QAAS,GAEX6J,MAAO,CACL7Q,OAAQ,GACRC,MAAO,IAEToL,QAAS,CACPrB,eAAgB,gBAmEL8G,GA/DQ,SAAAtJ,GAAU,IACvBC,EAAuBD,EAAvBC,UAAcG,EADQ,YACCJ,EADD,eAGxBK,EAAUjB,KAHc,EAKXwF,mBAASmD,IAArBwB,EALuB,oBAO9B,OACE,kBAAC5C,GAAA,EAAD,iBACMvG,EADN,CAEEH,UAAWM,YAAKF,EAAQnC,KAAM+B,KAE9B,kBAACgI,GAAA,EAAD,CACEuB,SAAQ,UAAKD,EAAShE,OAAd,aACRjC,MAAM,sBAER,kBAACiB,EAAA,EAAD,MACA,kBAACqC,GAAA,EAAD,CAAa3G,UAAWI,EAAQuD,SAC9B,kBAACZ,GAAA,EAAD,KACGuG,EAAStG,KAAI,SAACwG,EAASzP,GAAV,OACZ,kBAACmJ,GAAA,EAAD,CACE3G,QAASxC,EAAIuP,EAAShE,OAAS,EAC/BlC,IAAKoG,EAAQxC,IAEb,kBAACyC,GAAA,EAAD,KACE,yBACE1E,IAAI,UACJ/E,UAAWI,EAAQgJ,MACnBpE,IAAKwE,EAAQP,YAGjB,kBAACS,GAAA,EAAD,CACE1O,QAASwO,EAAQtH,KACjB3G,UAAS,kBAAaiO,EAAQN,UAAUS,aAE1C,kBAACxE,GAAA,EAAD,CACEyE,KAAK,MACL5I,KAAK,SAEL,kBAAC,KAAD,aAMV,kBAACsD,EAAA,EAAD,MACA,kBAAC0E,GAAA,EAAD,CAAahJ,UAAWI,EAAQwD,SAC9B,kBAACN,GAAA,EAAD,CACE5G,MAAM,UACNsE,KAAK,QACLW,QAAQ,QAHV,YAKW,kBAAC,KAAD,U,qBCxFNkI,GAAO,CAClBC,OAAQ,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,SACtDC,SAAU,CACR,CACEC,MAAO,YACP5Q,gBAAiBuD,EAAQ3B,QAAQK,KACjCwO,KAAM,CAAC,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,KAEhC,CACEG,MAAO,YACP5Q,gBAAiBuD,EAAQkE,QACzBgJ,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,OAKxB3R,GAAU,CACrB+R,YAAY,EACZC,qBAAqB,EACrBC,WAAW,EACXC,OAAQ,CAAE3K,SAAS,GACnBzH,aAAc,GACdqS,SAAU,CACRC,SAAS,EACTC,KAAM,QACNC,WAAW,EACXzS,YAAa,EACbuB,YAAaqD,EAAQJ,QACrBnD,gBAAiBuD,EAAQ7B,MACzB2P,eAAgB9N,EAAQX,KAAKhB,QAC7B0P,cAAe/N,EAAQX,KAAKT,UAC5BoP,gBAAiBhO,EAAQX,KAAKT,WAEhC6F,OAAQ,CAAE7B,QAAS,GACnBqL,OAAQ,CACNC,MAAO,CACL,CACEC,aAAc,GACdC,gBAAiB,GACjBC,cAAe,GACfC,mBAAoB,GACpBC,MAAO,CACLC,UAAWxO,EAAQX,KAAKT,WAE1B6P,UAAW,CACT3L,SAAS,EACT4L,YAAY,KAIlBC,MAAO,CACL,CACEJ,MAAO,CACLC,UAAWxO,EAAQX,KAAKT,UACxBgQ,aAAa,EACb5S,IAAK,GAEPyS,UAAW,CACTI,WAAY,CAAC,GACbC,iBAAkB,CAAC,GACnB/O,MAAOC,EAAQJ,QACf8O,YAAY,EACZK,mBAAoB,CAAC,GACrBC,yBAA0B,CAAC,GAC3BC,cAAejP,EAAQJ,aChD3B4C,GAAYC,aAAW,iBAAO,CAClCnB,KAAM,GACN4N,eAAgB,CACdtT,OAAQ,IACR6N,SAAU,YAEZxC,QAAS,CACPrB,eAAgB,gBAoDLuJ,GAhDK,SAAA/L,GAAU,IACpBC,EAAuBD,EAAvBC,UAAcG,EADK,YACIJ,EADJ,eAGrBK,EAAUjB,KAEhB,OACE,kBAACuH,GAAA,EAAD,iBACMvG,EADN,CAEEH,UAAWM,YAAKF,EAAQnC,KAAM+B,KAE9B,kBAACgI,GAAA,EAAD,CACEC,OACE,kBAAC3E,GAAA,EAAD,CACEtC,KAAK,QACLW,QAAQ,QAFV,eAIc,kBAAC,KAAD,OAGhB0B,MAAM,2BAER,kBAACiB,EAAA,EAAD,MACA,kBAACqC,GAAA,EAAD,KACE,yBAAK3G,UAAWI,EAAQyL,gBACtB,kBAAC,IAAD,CACEhC,KAAMA,GACN3R,QAASA,OAIf,kBAACoM,EAAA,EAAD,MACA,kBAAC0E,GAAA,EAAD,CAAahJ,UAAWI,EAAQwD,SAC9B,kBAACN,GAAA,EAAD,CACE5G,MAAM,UACNsE,KAAK,QACLW,QAAQ,QAHV,YAKW,kBAAC,KAAD,U,+BCpDbxC,GAAYC,aAAW,SAAAV,GAAK,MAAK,CACrCT,KAAM,CACJ1F,OAAQ,QAEVoL,QAAS,CACPrE,WAAY,SACZG,QAAS,QAEX4D,MAAO,CACLzG,WAAY,KAEdqF,OAAQ,CACN7I,gBAAiBsF,EAAM/B,QAAQ3B,QAAQK,KACvCqB,MAAOgC,EAAM/B,QAAQ3B,QAAQC,aAC7B1C,OAAQ,GACRC,MAAO,IAET8D,KAAM,CACJ/D,OAAQ,GACRC,MAAO,IAETuT,SAAU,CACR5J,UAAWzD,EAAMc,QAAQ,QAkDdwM,GA9CO,SAAAjM,GAAU,IACtBC,EAAuBD,EAAvBC,UAAcG,EADO,YACEJ,EADF,eAGvBK,EAAUjB,KAEhB,OACE,kBAACuH,GAAA,EAAD,iBACMvG,EADN,CAEEH,UAAWM,YAAKF,EAAQnC,KAAM+B,KAE9B,kBAAC2G,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,WAAS,EACTC,QAAQ,iBAER,kBAACF,GAAA,EAAD,CAAMxE,MAAI,GACR,kBAACV,EAAA,EAAD,CACE1B,UAAWI,EAAQiD,MACnB3G,MAAM,gBACN8B,cAAY,EACZmD,QAAQ,SAJV,kBAQA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,MAApB,UAEF,kBAACiF,GAAA,EAAD,CAAMxE,MAAI,GACR,kBAAC2E,GAAA,EAAD,CAAQ/G,UAAWI,EAAQ6B,QACzB,kBAAC,KAAD,CAAiBjC,UAAWI,EAAQ9D,UAI1C,kBAAC2P,GAAA,EAAD,CACEjM,UAAWI,EAAQ2L,SACnB9M,MAAO,KACP0C,QAAQ,mB,qBCpEZxC,GAAYC,aAAW,SAAAV,GAAK,MAAK,CACrCT,KAAM,CACJ1F,OAAQ,OACRa,gBAAiBsF,EAAM/B,QAAQ3B,QAAQK,KACvCqB,MAAOgC,EAAM/B,QAAQ3B,QAAQC,cAE/B0I,QAAS,CACPrE,WAAY,SACZG,QAAS,QAEX4D,MAAO,CACLzG,WAAY,KAEdqF,OAAQ,CACN7I,gBAAiBsF,EAAM/B,QAAQ7B,MAC/B4B,MAAOgC,EAAM/B,QAAQ3B,QAAQK,KAC7B9C,OAAQ,GACRC,MAAO,IAET8D,KAAM,CACJ/D,OAAQ,GACRC,MAAO,QAkDI0T,GA9CK,SAAAnM,GAAU,IACpBC,EAAuBD,EAAvBC,UAAcG,EADK,YACIJ,EADJ,eAGrBK,EAAUjB,KAEhB,OACE,kBAACuH,GAAA,EAAD,iBACMvG,EADN,CAEEH,UAAWM,YAAKF,EAAQnC,KAAM+B,KAE9B,kBAAC2G,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,WAAS,EACTC,QAAQ,iBAER,kBAACF,GAAA,EAAD,CAAMxE,MAAI,GACR,kBAACV,EAAA,EAAD,CACE1B,UAAWI,EAAQiD,MACnB3G,MAAM,UACN8B,cAAY,EACZmD,QAAQ,SAJV,oBAQA,kBAACD,EAAA,EAAD,CACEhF,MAAM,UACNiF,QAAQ,MAFV,OAOF,kBAACiF,GAAA,EAAD,CAAMxE,MAAI,GACR,kBAAC2E,GAAA,EAAD,CAAQ/G,UAAWI,EAAQ6B,QACzB,kBAAC,KAAD,CAAiBjC,UAAWI,EAAQ9D,a,qBCzD5C6C,GAAYC,aAAW,SAAAV,GAAK,MAAK,CACrCT,KAAM,CACJ1F,OAAQ,QAEVoL,QAAS,CACPrE,WAAY,SACZG,QAAS,QAEX4D,MAAO,CACLzG,WAAY,KAEdqF,OAAQ,CACN7I,gBAAiBsF,EAAM/B,QAAQlB,QAAQJ,KACvC9C,OAAQ,GACRC,MAAO,IAET8D,KAAM,CACJ/D,OAAQ,GACRC,MAAO,IAET8N,WAAY,CACVnE,UAAWzD,EAAMc,QAAQ,GACzBC,QAAS,OACTH,WAAY,UAEdiH,eAAgB,CACd7J,MAAOgC,EAAM/B,QAAQlB,QAAQP,MAE/BsL,gBAAiB,CACf9J,MAAOgC,EAAM/B,QAAQlB,QAAQP,KAC7ByE,YAAajB,EAAMc,QAAQ,QAsDhB2M,GAlDI,SAAApM,GAAU,IACnBC,EAAuBD,EAAvBC,UAAcG,EADI,YACKJ,EADL,eAGpBK,EAAUjB,KAEhB,OACE,kBAACuH,GAAA,EAAD,iBACMvG,EADN,CAEEH,UAAWM,YAAKF,EAAQnC,KAAM+B,KAE9B,kBAAC2G,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,WAAS,EACTC,QAAQ,iBAER,kBAACF,GAAA,EAAD,CAAMxE,MAAI,GACR,kBAACV,EAAA,EAAD,CACE1B,UAAWI,EAAQiD,MACnB3G,MAAM,gBACN8B,cAAY,EACZmD,QAAQ,SAJV,eAQA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,MAApB,UAEF,kBAACiF,GAAA,EAAD,CAAMxE,MAAI,GACR,kBAAC2E,GAAA,EAAD,CAAQ/G,UAAWI,EAAQ6B,QACzB,kBAAC,KAAD,CAAYjC,UAAWI,EAAQ9D,UAIrC,yBAAK0D,UAAWI,EAAQkG,YAEtB,kBAAC5E,EAAA,EAAD,CACE1B,UAAWI,EAAQ1C,QACnBiE,QAAQ,WAFV,wB,oFC1DJxC,GAAYC,aAAW,SAAAV,GAAK,MAAK,CACrCT,KAAM,CACJ1F,OAAQ,QAEVsT,eAAgB,CACdzF,SAAU,WACV7N,OAAQ,SAEV6T,MAAO,CACLjK,UAAWzD,EAAMc,QAAQ,GACzBC,QAAS,OACT8C,eAAgB,UAElB8J,OAAQ,CACN3I,UAAW,SACXnE,QAASb,EAAMc,QAAQ,IAEzB8M,WAAY,CACV5P,MAAOgC,EAAM/B,QAAQL,UAqHViQ,GAjHO,SAAAxM,GAAU,IACtBC,EAAuBD,EAAvBC,UAAcG,EADO,YACEJ,EADF,eAGvBK,EAAUjB,KACVT,EAAQmH,cAERgE,EAAO,CACXE,SAAU,CACR,CACEF,KAAM,CAAC,GAAI,GAAI,IACfzQ,gBAAiB,CACfsF,EAAM/B,QAAQ3B,QAAQK,KACtBqD,EAAM/B,QAAQb,MAAMT,KACpBqD,EAAM/B,QAAQf,QAAQP,MAExBtD,YAAa,EACbuB,YAAaoF,EAAM/B,QAAQ7B,MAC3B0R,iBAAkB9N,EAAM/B,QAAQ7B,QAGpCgP,OAAQ,CAAC,UAAW,SAAU,WAG1B5R,EAAU,CACdkS,OAAQ,CACN3K,SAAS,GAEXwK,YAAY,EACZC,qBAAqB,EACrBC,WAAW,EACXsC,iBAAkB,GAClBrL,OAAQ,CAAE7B,QAAS,GACnB8K,SAAU,CACRC,SAAS,EACTC,KAAM,QACNC,WAAW,EACXzS,YAAa,EACbuB,YAAaoF,EAAM/B,QAAQJ,QAC3BnD,gBAAiBsF,EAAM/B,QAAQ7B,MAC/B2P,eAAgB/L,EAAM/B,QAAQX,KAAKhB,QACnC0P,cAAehM,EAAM/B,QAAQX,KAAKT,UAClCoP,gBAAiBjM,EAAM/B,QAAQX,KAAKT,YAIlCmR,EAAU,CACd,CACErJ,MAAO,UACPpE,MAAO,KACP3C,KAAM,kBAAC,KAAD,MACNI,MAAOgC,EAAM/B,QAAQ3B,QAAQK,MAE/B,CACEgI,MAAO,SACPpE,MAAO,KACP3C,KAAM,kBAAC,KAAD,MACNI,MAAOgC,EAAM/B,QAAQb,MAAMT,MAE7B,CACEgI,MAAO,SACPpE,MAAO,KACP3C,KAAM,kBAAC,KAAD,MACNI,MAAOgC,EAAM/B,QAAQf,QAAQP,OAIjC,OACE,kBAACqL,GAAA,EAAD,iBACMvG,EADN,CAEEH,UAAWM,YAAKF,EAAQnC,KAAM+B,KAE9B,kBAACgI,GAAA,EAAD,CACEC,OACE,kBAAC9C,GAAA,EAAD,CAAYnE,KAAK,SACf,kBAAC,KAAD,OAGJqC,MAAM,oBAER,kBAACiB,EAAA,EAAD,MACA,kBAACqC,GAAA,EAAD,KACE,yBAAK3G,UAAWI,EAAQyL,gBACtB,kBAAC,IAAD,CACEhC,KAAMA,EACN3R,QAASA,KAGb,yBAAK8H,UAAWI,EAAQgM,OACrBM,EAAQ1J,KAAI,SAAAqJ,GAAM,OACjB,yBACErM,UAAWI,EAAQiM,OACnBjJ,IAAKiJ,EAAOhJ,OAEZ,0BAAMrD,UAAWI,EAAQkM,YAAaD,EAAO/P,MAC7C,kBAACoF,EAAA,EAAD,CAAYC,QAAQ,SAAS0K,EAAOhJ,OACpC,kBAAC3B,EAAA,EAAD,CACExB,MAAO,CAAExD,MAAO2P,EAAO3P,OACvBiF,QAAQ,MAEP0K,EAAOpN,MAJV,aCxHRE,GAAYC,aAAW,SAAAV,GAAK,MAAK,CACrCT,KAAM,CACJsB,QAASb,EAAMc,QAAQ,QA0FZmN,GAtFG,WAChB,IAAMvM,EAAUjB,KAEhB,OACE,yBAAKa,UAAWI,EAAQnC,MACtB,kBAAC2I,GAAA,EAAD,CACEC,WAAS,EACTrH,QAAS,GAET,kBAACoH,GAAA,EAAD,CACExE,MAAI,EACJxB,GAAI,EACJF,GAAI,EACJkM,GAAI,EACJC,GAAI,IAEJ,kBAAC,GAAD,OAEF,kBAACjG,GAAA,EAAD,CACExE,MAAI,EACJxB,GAAI,EACJF,GAAI,EACJkM,GAAI,EACJC,GAAI,IAEJ,kBAAC,GAAD,OAEF,kBAACjG,GAAA,EAAD,CACExE,MAAI,EACJxB,GAAI,EACJF,GAAI,EACJkM,GAAI,EACJC,GAAI,IAEJ,kBAAC,GAAD,OAEF,kBAACjG,GAAA,EAAD,CACExE,MAAI,EACJxB,GAAI,EACJF,GAAI,EACJkM,GAAI,EACJC,GAAI,IAEJ,kBAAC,GAAD,OAEF,kBAACjG,GAAA,EAAD,CACExE,MAAI,EACJxB,GAAI,EACJD,GAAI,GACJiM,GAAI,EACJC,GAAI,IAEJ,kBAAC,GAAD,OAEF,kBAACjG,GAAA,EAAD,CACExE,MAAI,EACJxB,GAAI,EACJD,GAAI,EACJiM,GAAI,EACJC,GAAI,IAEJ,kBAAC,GAAD,OAEF,kBAACjG,GAAA,EAAD,CACExE,MAAI,EACJxB,GAAI,EACJD,GAAI,EACJiM,GAAI,EACJC,GAAI,IAEJ,kBAAC,GAAD,OAEF,kBAACjG,GAAA,EAAD,CACExE,MAAI,EACJxB,GAAI,EACJD,GAAI,GACJiM,GAAI,EACJC,GAAI,IAEJ,kBAAC,GAAD,UChGJ1N,GAAYC,aAAW,SAAAV,GAAK,MAAK,CACrCT,KAAM,CACJsB,QAASb,EAAMc,QAAQ,IAEzBmE,QAAS,CACPtB,WAAY,IACZqB,UAAW,UAEb0F,MAAO,CACLjH,UAAW,GACX1C,QAAS,eACTqN,SAAU,OACVtU,MAAO,SAuCIuU,GAnCE,WACf,IAAM3M,EAAUjB,KAEhB,OACE,yBAAKa,UAAWI,EAAQnC,MACtB,kBAAC2I,GAAA,EAAD,CACEC,WAAS,EACTC,QAAQ,SACRtH,QAAS,GAET,kBAACoH,GAAA,EAAD,CACExE,MAAI,EACJxB,GAAI,EACJiM,GAAI,IAEJ,yBAAK7M,UAAWI,EAAQuD,SACtB,kBAACjC,EAAA,EAAD,CAAYC,QAAQ,MAApB,qDAGA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,aAApB,4GAIA,yBACEoD,IAAI,oBACJ/E,UAAWI,EAAQgJ,MACnBpE,IAAI,gD,iDC9CLgI,GAAM,2C,qBCwHJC,GA5GQ,WACrB,IAAMC,EAAYC,cAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAYC,YACnDC,EAAWC,eAFU,EAGG7I,oBAAS,GAHZ,mBAGpB8I,EAHoB,KAGXC,EAHW,KAyB3B,OAnBAC,qBAAU,WACND,EAAW,QAObH,ECTiC,SAACK,EAAWC,GAAZ,OAAwB,SAAAN,GAE3DO,KACGC,IADH,UACUC,GADV,gBAEGC,MAAK,SAAAC,GACJX,EAAS,CACPY,KCPgC,2BDQhCC,QAASF,EAASrE,OAEpBwE,QAAQC,IAAIJ,EAASrE,MACrB+D,OAEDW,OAAM,SAAAzS,GACL+R,IACAQ,QAAQC,IAAIxS,ODLL0S,EANW,WAChBd,GAAW,MAEG,WACdA,GAAW,SAGd,CAACH,IAYE,kBAAC,KAAD,KACE,6BACA,kBAAC,KAAD,CACFlK,MAAM,yBACNoL,QAAS,CACP,CAAEpL,MAAO,MAAOqL,MAAO,MACvB,CACErL,MAAO,UACPqL,MAAO,WAGT,CACErL,MAAO,QACPqL,MAAO,OACPC,WAAW,GAEb,CACEtL,MAAO,UACPqL,MAAO,UACPC,WAAW,GAEb,CACEtL,MAAO,uBACPqL,MAAO,UACPC,WAAW,GAEb,CACEtL,MAAO,SACPqL,MAAO,SACPC,WAAW,GAEb,CACEtL,MAAO,SACPqL,MAAO,UACPC,WAAW,IAGfC,UAAWnB,EACX5D,KAAMqD,EAAUlK,KAAI,SAAC6L,GAAD,MAAU,CAC5B7H,GAAI6H,EAAI7H,GACR8H,SAlDaC,EAkDOF,EAAIC,aAjD7BhB,KAAMC,IAAIf,GAAI,WAAW+B,GACzBd,MAAK,SAAAe,GAEJ,OADAX,QAAQC,IAAIU,EAAInF,KAAK3H,MACd8M,EAAInF,KAAK3H,SA+CZ+M,KAAMJ,EAAII,KACVC,QAASL,EAAIK,QACbC,QAASN,EAAIO,IAAMP,EAAIQ,IACvBC,OAAQ,KAER1L,QAAS,kBAAC,IAAD,CAAMJ,GAAK,CACN+L,SAAU,IACVnC,MAAO,CAAEoC,gBAAgB,CAACX,SAE1B3O,MAAO,CAAEuP,OAAQ,UAAW/S,MAAO,OACnCgT,UAAW,SACT,kBAACnH,GAAA,EAAD,CAASlF,MAAM,gBACb,kBAAC8B,GAAA,EAAD,CAAYwK,aAAW,gBACvB,kBAAC,KAAD,CAAgBjT,MAAM,gBAhEhD,IAAqBqS,KAsEf7W,QAAS,CAEP0X,YAAa,CACXxW,gBAAiB,UACjBsD,MAAO,OACPqH,OAAQ,QAEV4K,WAAW,EACXkB,cAAc,QGrGlB1Q,GAAYC,aAAW,SAAAV,GAAK,MAAK,CACrCT,KAAM,GACN4Q,IAAK,CACHtW,OAAQ,OACRkH,QAAS,OACTH,WAAY,SACZ6C,UAAWzD,EAAMc,QAAQ,IAE3BsQ,OAAQ,CACNjQ,SAAU,GAEZkQ,aAAc,CACZpQ,YAAajB,EAAMc,QAAQ,IAE7BqQ,aAAc,CACZlQ,YAAajB,EAAMc,QAAQ,IAE7BwQ,YAAa,CACXrQ,YAAajB,EAAMc,QAAQ,QAgChByQ,GA5BM,SAAAlQ,GAAU,IACrBC,EAAuBD,EAAvBC,UAAcG,EADM,YACGJ,EADH,eAGtBK,EAAUjB,KAEhB,OACE,yCACMgB,EADN,CAEEH,UAAWM,YAAKF,EAAQnC,KAAM+B,KAE9B,yBAAKA,UAAWI,EAAQyO,KACtB,0BAAM7O,UAAWI,EAAQ0P,SACzB,kBAACxM,GAAA,EAAD,CACE5G,MAAM,UACNiF,QAAQ,aAFV,mBAOF,yBAAK3B,UAAWI,EAAQyO,QCzCxB1P,GAAYC,aAAW,SAAAV,GAAK,MAAK,CACrCT,KAAM,CACJsB,QAASb,EAAMc,QAAQ,IAEzBmE,QAAS,CACPxB,UAAWzD,EAAMc,QAAQ,QAkBd0Q,GAdD,WACZ,IAAM9P,EAAUjB,KAGhB,OACE,yBAAKa,UAAWI,EAAQnC,MACtB,kBAACkS,GAAD,MACA,yBAAKnQ,UAAWI,EAAQuD,SACtB,kBAAC,GAAD,SCqFOyM,GAlGY,WACzB,IAAMC,EAAgBlD,cAAY,SAAAC,GAAK,OAAIA,EAAMkD,UAAUC,QACrDhD,EAAWC,eAFc,EAGD7I,mBAAS,IAHR,mBAGxB8I,EAHwB,KAGfC,EAHe,KA2B/B,OAbAC,qBAAU,WACND,EAAW,QAObH,ECf6B,SAACK,EAAWC,GAAZ,OAAwB,SAAAN,GAEvDO,KACGC,IADH,UACUC,GADV,cAEGC,MAAK,SAAAC,GACJX,EAAS,CACPY,KJT2B,sBIU3BC,QAASF,EAASrE,OAEpBwE,QAAQC,IAAIJ,GACZN,OAEDW,OAAM,SAAAzS,GACL+R,IACAQ,QAAQC,IAAIxS,ODCL0U,EANW,WAChB9C,GAAW,MAEG,WACdA,GAAW,SAGd,CAACH,IAME,kBAAC,KAAD,KACE,6BACA,kBAAC,KAAD,CACFlK,MAAM,uBACNoL,QAAS,CACP,CAAEpL,MAAO,MAAOqL,MAAO,MACvB,CACErL,MAAO,WACPqL,MAAO,YAGT,CACErL,MAAO,iBACPqL,MAAO,OACPC,WAAW,GAEb,CACEtL,MAAO,SACPqL,MAAO,SACPC,WAAW,GAEb,CACEtL,MAAO,SACPqL,MAAO,UACPC,WAAW,IAGfC,UAAWnB,EACX5D,KAAMwG,EAAcrN,KAAI,SAAC6L,GAAD,MAAU,CAChC4B,GAAI5B,EAAI7H,GACR0J,SAAU7B,EAAI6B,SACdvC,KAAMU,EAAI8B,sBACVC,OAAQ/B,EAAI3W,QAAQoN,OAEpB1B,QAAS,kBAAC,IAAD,CAAMJ,GAAK,CACN+L,SAAU,kBACVnC,MAAO,CAAEoC,gBAAgB,CAACX,SAE1B3O,MAAO,CAAEuP,OAAQ,UAAW/S,MAAO,OACnCgT,UAAW,SACT,kBAACnH,GAAA,EAAD,CAASlF,MAAM,gBACb,kBAAC8B,GAAA,EAAD,CAAYwK,aAAW,gBACvB,kBAAC,KAAD,CAAgBjT,MAAM,mBAM1CxE,QAAS,CAEP0X,YAAa,CACXxW,gBAAiB,UACjBsD,MAAO,OACPqH,OAAQ,QAEV4K,WAAW,EACXkB,cAAc,QExFlB1Q,GAAYC,aAAW,SAAAV,GAAK,MAAK,CACrCT,KAAM,GACN4Q,IAAK,CACHtW,OAAQ,OACRkH,QAAS,OACTH,WAAY,SACZ6C,UAAWzD,EAAMc,QAAQ,IAE3BsQ,OAAQ,CACNjQ,SAAU,GAEZkQ,aAAc,CACZpQ,YAAajB,EAAMc,QAAQ,IAE7BqQ,aAAc,CACZlQ,YAAajB,EAAMc,QAAQ,IAE7BwQ,YAAa,CACXrQ,YAAajB,EAAMc,QAAQ,QAmChByQ,GA/BM,SAAAlQ,GAAU,IACrBC,EAAuBD,EAAvBC,UAAcG,EADM,YACGJ,EADH,eAGtBK,EAAUjB,KAEhB,OACE,yCACMgB,EADN,CAEEH,UAAWM,YAAKF,EAAQnC,KAAM+B,KAE9B,yBAAKA,UAAWI,EAAQyO,KACtB,0BAAM7O,UAAWI,EAAQ0P,SACzB,kBAACxM,GAAA,EAAD,CACE5G,MAAM,UACNiF,QAAQ,aAFV,iBAOF,yBAAK3B,UAAWI,EAAQyO,KACtB,kBAAC,EAAD,CACE7O,UAAWI,EAAQ4P,YACnBa,YAAY,mBC7ChB1R,GAAYC,aAAW,SAAAV,GAAK,MAAK,CACrCT,KAAM,CACJsB,QAASb,EAAMc,QAAQ,IAEzBmE,QAAS,CACPxB,UAAWzD,EAAMc,QAAQ,QAkBdsR,GAdG,WAChB,IAAM1Q,EAAUjB,KAGhB,OACE,yBAAKa,UAAWI,EAAQnC,MACtB,kBAAC8S,GAAD,MACA,yBAAK/Q,UAAWI,EAAQuD,SACtB,kBAAC,GAAD,SCwFOqN,GArGa,WAC1B,IAAMC,EAAiB9D,cAAY,SAAAC,GAAK,OAAIA,EAAM8D,WAAWX,QACvDhD,EAAWC,eAFe,EAGF7I,oBAAS,GAHP,mBAGzB8I,EAHyB,KAGhBC,EAHgB,KAkBhC,OAdDW,QAAQC,IAAI2C,GACXtD,qBAAU,WACND,EAAW,QAObH,ECN8B,SAACK,EAAWC,GAAZ,OAAwB,SAAAN,GAExDO,KACGC,IADH,UACUC,GADV,cAEGC,MAAK,SAAAC,GACJX,EAAS,CACPY,KRR4B,uBQS5BC,QAASF,EAASrE,OAEpBwE,QAAQC,IAAIJ,GACZN,OAEDW,OAAM,SAAAzS,GACL+R,IACAQ,QAAQC,IAAIxS,ODRLqV,EANW,WAChBzD,GAAW,MAEG,WACdA,GAAW,SAGd,CAACH,IAME,kBAAC,KAAD,KACE,6BACA,kBAAC,KAAD,CACFlK,MAAM,wBACNoL,QAAS,CACP,CAAEpL,MAAO,MAAOqL,MAAO,MACvB,CACErL,MAAO,UACPqL,MAAO,WAGT,CACErL,MAAO,iBACPqL,MAAO,UACPC,WAAW,GAEb,CACEtL,MAAO,QACPqL,MAAO,QACPC,WAAW,GAEb,CACEtL,MAAO,UACPqL,MAAO,UACPC,WAAW,GAEb,CACEtL,MAAO,SACPqL,MAAO,SACPC,WAAW,GAEb,CACEtL,MAAO,SACPqL,MAAO,UACPC,WAAW,IAGfC,UAAWnB,EACX5D,KAAMoH,EAAejO,KAAI,SAAC6L,GAAD,MAAU,CACjC4B,GAAI5B,EAAI7H,GACR8H,QAASD,EAAI3M,KACbkP,QAASvC,EAAIuC,QACbC,MAAO,KACPlC,QAAS,KACTG,OAAQ,KAER1L,QAAS,kBAAC,IAAD,CAAMJ,GAAK,CACN+L,SAAU,IACVnC,MAAO,CAAEoC,gBAAgB,CAACX,SAE1B3O,MAAO,CAAEuP,OAAQ,UAAW/S,MAAO,OACnCgT,UAAW,SACT,kBAACnH,GAAA,EAAD,CAASlF,MAAM,gBACb,kBAAC8B,GAAA,EAAD,CAAYwK,aAAW,gBACvB,kBAAC,KAAD,CAAgBjT,MAAM,mBAM1CxE,QAAS,CAEP0X,YAAa,CACXxW,gBAAiB,UACjBsD,MAAO,OACPqH,OAAQ,QAEV4K,WAAW,EACXkB,cAAc,Q,kGE9DlB1Q,GAAYC,aAAW,SAAAV,GAAK,MAAK,CACnCT,KAAM,GACN4Q,IAAK,CACHtW,OAAQ,OACRkH,QAAS,OACTH,WAAY,SACZ6C,UAAWzD,EAAMc,QAAQ,IAE3BsQ,OAAQ,CACNjQ,SAAU,GAGZD,MAAO,CACHH,QAAS,YAIX6R,GAAcC,cA/BL,SAAC7S,GAAD,MAAY,CACzBT,KAAM,CACJ8F,OAAQ,EACRxE,QAASb,EAAMc,QAAQ,IAEzBgS,YAAa,CACXpL,SAAU,WACVjP,MAAOuH,EAAMc,QAAQ,GACrBpI,IAAKsH,EAAMc,QAAQ,GACnB9C,MAAOgC,EAAM/B,QAAQH,KAAK,SAsBV+U,EAAmB,SAACxR,GAAW,IACzC6F,EAAyC7F,EAAzC6F,SAAUxF,EAA+BL,EAA/BK,QAAS+D,EAAsBpE,EAAtBoE,QAAYsN,EADS,YACC1R,EADD,kCAEhD,OACE,kBAAC,KAAD,eAAgB2R,mBAAiB,EAAC1R,UAAWI,EAAQnC,MAAUwT,GAC7D,kBAAC/P,EAAA,EAAD,CAAYC,QAAQ,MAAMiE,GACzBzB,EACC,kBAACgB,GAAA,EAAD,CAAYwK,aAAW,QAAQ3P,UAAWI,EAAQoR,YAAahM,QAASrB,GACtE,kBAAC,KAAD,OAEA,SAKJwN,GAAgBJ,cAAW,SAAC7S,GAAD,MAAY,CAC3CT,KAAM,CACJsB,QAASb,EAAMc,QAAQ,OAFL+R,CAIlBK,MAGW,SAASC,GAAY9R,GAClC,IAAMK,EAAUjB,KADyB,EAEjB2S,IAAMnN,UAAS,GAFE,mBAElCT,EAFkC,KAE5B6N,EAF4B,OAGjBpN,mBAAS,IAHQ,mBAGlCkF,EAHkC,KAG5BmI,EAH4B,KAKzCrE,qBAAU,YACO,yCAAG,6BAAAsE,EAAA,sEACKnE,KACnBd,GAAI,aAFU,OACVkF,EADU,OAIhBF,EAAQE,EAAOrI,MAJC,2CAAH,qDAOfsI,MAIF,IAGMC,EAAc,WAClBL,GAAQ,IArB+B,EAyBbpN,mBAAS,IAzBI,mBAyBlC0N,EAzBkC,KAyB1BC,EAzB0B,KA2BnCC,EAAe,SAAAC,GACnBF,EAAU,2BACLD,GADI,kBAENG,EAAM1Q,OAAOI,KAAOsQ,EAAM1Q,OAAO7C,UAMtC,OACE,6BAEE,yBAAKe,UAAWI,EAAQyO,KACtB,0BAAM7O,UAAWI,EAAQ0P,SAEzB,kBAACxM,GAAA,EAAD,CACE5G,MAAM,UACNiF,QAAQ,YACR6D,QA5BgB,WACtBuM,GAAQ,KAwBJ,iBAQF,kBAACU,GAAA,EAAD,CAAQtO,QAASiO,EAAaM,kBAAgB,0BAA0BxO,KAAMA,EACxEyO,UAAU,QACV7F,SAAS,MAEb,kBAAC,GAAD,CAAa9F,GAAG,0BAA0B7C,QAASiO,GAAnD,gBAGA,kBAAC,GAAD,CAAeQ,UAAQ,GACvB,kBAAClM,GAAA,EAAD,KACI,0BACImM,aAAa,MACbC,YAAU,GAGV,kBAACnM,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CACIC,WAAS,EACTrH,QAAS,GAET,kBAACoH,GAAA,EAAD,CACJxE,MAAI,EACJzB,GAAI,EACJkM,GAAI,IAEJ,kBAACkG,GAAA,EAAD,CACIJ,WAAS,EACT3I,MAAM,iBACNjG,OAAO,QACP7B,KAAK,UACLjC,SAAUsS,EACVS,UAAQ,EACRC,QAAM,EAENC,YAAa,CAAEC,QAAQ,GACvBlU,MAAOoT,EAAOjF,MACdzL,QAAQ,YAER,iCACCkI,EAAK7G,KAAI,SAAA4N,GAAM,OAChB,4BACIxN,IAAKwN,EAAO5J,GACZ/H,MAAO2R,EAAO5J,IAEb4J,EAAO1O,WAKhB,kBAAC0E,GAAA,EAAD,CACIxE,MAAI,EACJzB,GAAI,EACJkM,GAAI,IAER,kBAACkG,GAAA,EAAD,CACIJ,WAAS,EACTS,WAAW,oCACXpJ,MAAM,iBACNjG,OAAO,QACP7B,KAAK,UACLjC,SAAUsS,EACVS,UAAQ,EACR/T,MAAOoT,EAAOjB,QACdzP,QAAQ,cAGZ,kBAACiF,GAAA,EAAD,CACAxE,MAAI,EACJzB,GAAI,EACJkM,GAAI,IAEJ,kBAACkG,GAAA,EAAD,CACIJ,WAAS,EACT3I,MAAM,UACNoJ,WAAW,WACXrP,OAAO,QACP7B,KAAK,UACLjC,SAAUsS,EACVS,UAAQ,EACR/T,MAAOoT,EAAOlD,QACdxN,QAAQ,cAGZ,kBAACiF,GAAA,EAAD,CACAxE,MAAI,EACJzB,GAAI,EACJkM,GAAI,IAEJ,kBAACkG,GAAA,EAAD,CACIJ,WAAS,EACT3I,MAAM,gBACNoJ,WAAW,WACXrP,OAAO,QACP7B,KAAK,QACLjC,SAAUsS,EACVS,UAAQ,EACR/T,MAAOoT,EAAOhB,MACd1P,QAAQ,gBAMZ,kBAAC2C,EAAA,EAAD,MACA,kBAAC0E,GAAA,EAAD,KACI,kBAAC1F,GAAA,EAAD,CACI5G,MAAM,UACNiF,QAAQ,aAFZ,cC9NpB,IAAMxC,GAAYC,aAAW,SAAAV,GAAK,MAAK,CACrCT,KAAM,CACJsB,QAASb,EAAMc,QAAQ,IAEzBmE,QAAS,CACPxB,UAAWzD,EAAMc,QAAQ,QAkBd6T,GAdI,WACjB,IAAMjT,EAAUjB,KAGhB,OACE,yBAAKa,UAAWI,EAAQnC,MACtB,kBAAC4T,GAAD,MACA,yBAAK7R,UAAWI,EAAQuD,SACtB,kBAAC,GAAD,SCwEO2P,GArFU,WACvB,IAAMC,EAAcpG,cAAY,SAAAC,GAAK,OAAIA,EAAMoG,QAAQjD,QACjDhD,EAAWC,eAFY,EAGC7I,oBAAS,GAHV,mBAGtB8I,EAHsB,KAGbC,EAHa,KAkB7B,OAdDW,QAAQC,IAAIiF,GACX5F,qBAAU,WACND,EAAW,QAObH,ECN2B,SAACK,EAAWC,GAAZ,OAAwB,SAAAN,GAErDO,KACGC,IADH,UACUC,GADV,YAEGC,MAAK,SAAAC,GACJX,EAAS,CACPY,KZNyB,oBYOzBC,QAASF,EAASrE,OAEpBwE,QAAQC,IAAIJ,GACZN,OAEDW,OAAM,SAAAzS,GACL+R,IACAQ,QAAQC,IAAIxS,ODRL2X,EANW,WAChB/F,GAAW,MAEG,WACdA,GAAW,SAGd,CAACH,IAME,kBAAC,KAAD,KACE,6BACA,kBAAC,KAAD,CACFlK,MAAM,kBACNoL,QAAS,CACP,CAAEpL,MAAO,MAAOqL,MAAO,MACvB,CACErL,MAAO,OACPqL,MAAO,QAGT,CACErL,MAAO,WACPqL,MAAO,UACPC,WAAW,GAEb,CACEtL,MAAO,iBACPqL,MAAO,WACPC,WAAW,IAIfC,UAAWnB,EACX5D,KAAM0J,EAAYvQ,KAAI,SAAC6L,GAAD,MAAU,CAC9B4B,GAAI5B,EAAI7H,GACR9E,KAAM2M,EAAI6E,QAAU7E,EAAI8E,UACxBC,SAAU/E,EAAIgF,SACdC,SAAUjF,EAAIiF,SAEdlQ,QAAS,kBAAC,IAAD,CAAMJ,GAAK,CACN+L,SAAU,IACVnC,MAAO,CAAEoC,gBAAgB,CAACX,SAE1B3O,MAAO,CAAEuP,OAAQ,UAAW/S,MAAO,OACnCgT,UAAW,SACT,kBAACnH,GAAA,EAAD,CAASlF,MAAM,gBACb,kBAAC8B,GAAA,EAAD,CAAYwK,aAAW,gBACvB,kBAAC,KAAD,CAAgBjT,MAAM,mBAM1CxE,QAAS,CAEP0X,YAAa,CACXxW,gBAAiB,UACjBsD,MAAO,OACPqH,OAAQ,QAEV4K,WAAW,EACXkB,cAAc,QE9ClB1Q,GAAYC,aAAW,SAAAV,GAAK,MAAK,CACnCT,KAAM,GACN4Q,IAAK,CACHtW,OAAQ,OACRkH,QAAS,OACTH,WAAY,SACZ6C,UAAWzD,EAAMc,QAAQ,IAE3BsQ,OAAQ,CACNjQ,SAAU,GAGZD,MAAO,CACHH,QAAS,YAIX6R,GAAcC,cA/BL,SAAC7S,GAAD,MAAY,CACzBT,KAAM,CACJ8F,OAAQ,EACRxE,QAASb,EAAMc,QAAQ,IAEzBgS,YAAa,CACXpL,SAAU,WACVjP,MAAOuH,EAAMc,QAAQ,GACrBpI,IAAKsH,EAAMc,QAAQ,GACnB9C,MAAOgC,EAAM/B,QAAQH,KAAK,SAsBV+U,EAAmB,SAACxR,GAAW,IACzC6F,EAAyC7F,EAAzC6F,SAAUxF,EAA+BL,EAA/BK,QAAS+D,EAAsBpE,EAAtBoE,QAAYsN,EADS,YACC1R,EADD,kCAEhD,OACE,kBAAC,KAAD,eAAgB2R,mBAAiB,EAAC1R,UAAWI,EAAQnC,MAAUwT,GAC7D,kBAAC/P,EAAA,EAAD,CAAYC,QAAQ,MAAMiE,GACzBzB,EACC,kBAACgB,GAAA,EAAD,CAAYwK,aAAW,QAAQ3P,UAAWI,EAAQoR,YAAahM,QAASrB,GACtE,kBAAC,KAAD,OAEA,SAKJwN,GAAgBJ,cAAW,SAAC7S,GAAD,MAAY,CAC3CT,KAAM,CACJsB,QAASb,EAAMc,QAAQ,OAFL+R,CAIlBK,MAGW,SAASC,GAAY9R,GAClC,IAAMK,EAAUjB,KADyB,EAEjB2S,IAAMnN,UAAS,GAFE,mBAElCT,EAFkC,KAE5B6N,EAF4B,OAGjBpN,mBAAS,IAHQ,mBAGlCkF,EAHkC,KAG5BmI,EAH4B,KAKzCrE,qBAAU,YACO,yCAAG,6BAAAsE,EAAA,sEACKnE,KACnBd,GAAI,aAFU,OACVkF,EADU,OAIhBF,EAAQE,EAAOrI,MAJC,2CAAH,qDAOfsI,MAIF,IAGMC,EAAc,WAClBL,GAAQ,IArB+B,EAyBbpN,mBAAS,IAzBI,mBAyBlC0N,EAzBkC,KAyB1BC,EAzB0B,KA2BnCC,EAAe,SAAAC,GACnBF,EAAU,2BACLD,GADI,kBAENG,EAAM1Q,OAAOI,KAAOsQ,EAAM1Q,OAAO7C,UAMtC,OACE,6BAEE,yBAAKe,UAAWI,EAAQyO,KACtB,0BAAM7O,UAAWI,EAAQ0P,SACzB,kBAACxM,GAAA,EAAD,CACE5G,MAAM,UACNiF,QAAQ,YACR6D,QA3BgB,WACtBuM,GAAQ,KAuBJ,eAQF,kBAACU,GAAA,EAAD,CAAQtO,QAASiO,EAAaM,kBAAgB,0BAA0BxO,KAAMA,EACxEyO,UAAU,QACV7F,SAAS,MAEb,kBAAC,GAAD,CAAa9F,GAAG,0BAA0B7C,QAASiO,GAAnD,cAGA,kBAAC,GAAD,CAAeQ,UAAQ,GACvB,kBAAClM,GAAA,EAAD,KACI,0BACImM,aAAa,MACbC,YAAU,GAGV,kBAACnM,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CACIC,WAAS,EACTrH,QAAS,GAEb,kBAACoH,GAAA,EAAD,CACIxE,MAAI,EACJzB,GAAI,EACJkM,GAAI,IAER,kBAACkG,GAAA,EAAD,CACIJ,WAAS,EACTS,WAAW,aACXpJ,MAAM,aACNjG,OAAO,QACP7B,KAAK,YACLjC,SAAUsS,EACVS,UAAQ,EACR/T,MAAOoT,EAAOsB,UACdhS,QAAQ,cAGZ,kBAACiF,GAAA,EAAD,CACIxE,MAAI,EACJzB,GAAI,EACJkM,GAAI,IAER,kBAACkG,GAAA,EAAD,CACIJ,WAAS,EACTS,WAAW,YACXpJ,MAAM,YACNjG,OAAO,QACP7B,KAAK,WACLjC,SAAUsS,EACVS,UAAQ,EACR/T,MAAOoT,EAAO0B,SACdpS,QAAQ,cAGZ,kBAACiF,GAAA,EAAD,CACAxE,MAAI,EACJzB,GAAI,EACJkM,GAAI,IAEJ,kBAACkG,GAAA,EAAD,CACIJ,WAAS,EACT3I,MAAM,iBACNjG,OAAO,QACP7B,KAAK,UACLjC,SAAUsS,EACVS,UAAQ,EACRC,QAAM,EAENC,YAAa,CAAEC,QAAQ,GACvBlU,MAAOoT,EAAOjF,MACdzL,QAAQ,YAER,iCACCkI,EAAK7G,KAAI,SAAA4N,GAAM,OAChB,4BACIxN,IAAKwN,EAAO5J,GACZ/H,MAAO2R,EAAO5J,IAEb4J,EAAO1O,WAKhB,kBAAC0E,GAAA,EAAD,CACIxE,MAAI,EACJzB,GAAI,EACJkM,GAAI,IAER,kBAACkG,GAAA,EAAD,CACIJ,WAAS,EACTS,WAAW,oCACXpJ,MAAM,iBACNjG,OAAO,QACP7B,KAAK,UACLjC,SAAUsS,EACVS,UAAQ,EACR/T,MAAOoT,EAAOjB,QACdzP,QAAQ,cAGZ,kBAACiF,GAAA,EAAD,CACAxE,MAAI,EACJzB,GAAI,EACJkM,GAAI,IAEJ,kBAACkG,GAAA,EAAD,CACIJ,WAAS,EACT3I,MAAM,UACNoJ,WAAW,WACXrP,OAAO,QACP7B,KAAK,UACLjC,SAAUsS,EACVS,UAAQ,EACR/T,MAAOoT,EAAOlD,QACdxN,QAAQ,cAGZ,kBAACiF,GAAA,EAAD,CACAxE,MAAI,EACJzB,GAAI,EACJkM,GAAI,IAEJ,kBAACkG,GAAA,EAAD,CACIJ,WAAS,EACT3I,MAAM,gBACNoJ,WAAW,WACXrP,OAAO,QACP7B,KAAK,QACLjC,SAAUsS,EACVS,UAAQ,EACR/T,MAAOoT,EAAOhB,MACd1P,QAAQ,cAGZ,kBAACiF,GAAA,EAAD,CACIxE,MAAI,EACJzB,GAAI,EACJkM,GAAI,IAER,kBAACkG,GAAA,EAAD,CACIJ,WAAS,EACTS,WAAW,WACXpJ,MAAM,WACNjG,OAAO,QACP7B,KAAK,OACLjC,SAAUsS,EACVS,UAAQ,EACR/T,MAAOoT,EAAO0B,SACdpS,QAAQ,cAGZ,kBAACiF,GAAA,EAAD,CACIxE,MAAI,EACJzB,GAAI,EACJkM,GAAI,IAER,kBAACkG,GAAA,EAAD,CACIJ,WAAS,EACTS,WAAW,WACXpJ,MAAM,WACNjG,OAAO,QACP7B,KAAK,WACLjC,SAAUsS,EACVS,UAAQ,EACR/T,MAAOoT,EAAO2B,SACdrS,QAAQ,gBAKZ,kBAAC2C,EAAA,EAAD,MACA,kBAAC0E,GAAA,EAAD,KACI,kBAAC1F,GAAA,EAAD,CACI5G,MAAM,UACNiF,QAAQ,aAFZ,cChSpB,IAAMxC,GAAYC,aAAW,SAAAV,GAAK,MAAK,CACrCT,KAAM,CACJsB,QAASb,EAAMc,QAAQ,IAEzBmE,QAAS,CACPxB,UAAWzD,EAAMc,QAAQ,QAkBdyU,GAdC,WACd,IAAM7T,EAAUjB,KAGhB,OACE,yBAAKa,UAAWI,EAAQnC,MACtB,kBAAC,GAAD,MACA,yBAAK+B,UAAWI,EAAQuD,SACtB,kBAAC,GAAD,S,yDCXO,SAASuQ,GAAYnU,GAChC,IAAIoU,EAAUC,cACZ7G,EAAWC,eACV6G,EAAM,WACLtU,EAAMqS,cACN+B,EAAQG,KAAK,gBAGnB,OACE,6BACE,kBAAC7B,GAAA,EAAD,CACEvO,KAAMnE,EAAMmE,KACZC,QAASpE,EAAMqS,YACfM,kBAAgB,qBAChB6B,mBAAiB,4BAEjB,kBAACjD,GAAA,EAAD,CAAatK,GAAG,sBAAsB,qDACtC,kBAAC2K,GAAA,EAAD,KACE,kBAAC6C,GAAA,EAAD,CAAmBxN,GAAG,4BACnBjH,EAAM0U,KAAKpR,QAGhB,kBAACqR,GAAA,EAAD,KACE,kBAACpR,GAAA,EAAD,CAAQkC,QAAS,WACb+H,EC4FoB,SAACvG,EAAIqN,GAAL,OAAa,SAAA9G,GAC3Cc,QAAQC,IAAItH,GACd8G,KACG6G,OADH,UACa3G,GADb,qBACiChH,IAC9BiH,MAAK,SAAAC,GACJX,EAAS,CACPY,KhBjH0B,qBgBkH1BC,QAASF,EAASrE,OAEpB+K,KAAMnZ,QAAQ,oCACd4Y,OAED9F,OAAM,SAAAzS,GACL8Y,KAAM9Y,MAAM,0CACZuS,QAAQC,IAAIxS,GACZuY,QD3GiBQ,CAAiB9U,EAAM0U,KAAKzN,GAAIqN,KAEtC3X,MAAM,aAHb,OAMA,kBAAC4G,GAAA,EAAD,CAAQkC,QAASzF,EAAMqS,YAAa1V,MAAM,UAAUoY,WAAS,GAA7D,S,cEHJ3V,GAAYC,aAAW,SAAAV,GAAK,MAAK,CACnCT,KAAM,GACN4Q,IAAK,CACHtW,OAAQ,OACRkH,QAAS,OACTH,WAAY,SACZ6C,UAAWzD,EAAMc,QAAQ,IAE3BsQ,OAAQ,CACNjQ,SAAU,GAGZD,MAAO,CACHH,QAAS,YAIX6R,GAAcC,cA/BL,SAAC7S,GAAD,MAAY,CACzBT,KAAM,CACJ8F,OAAQ,EACRxE,QAASb,EAAMc,QAAQ,IAEzBgS,YAAa,CACXpL,SAAU,WACVjP,MAAOuH,EAAMc,QAAQ,GACrBpI,IAAKsH,EAAMc,QAAQ,GACnB9C,MAAOgC,EAAM/B,QAAQH,KAAK,SAsBV+U,EAAmB,SAACxR,GAAW,IACzC6F,EAAyC7F,EAAzC6F,SAAUxF,EAA+BL,EAA/BK,QAAS+D,EAAsBpE,EAAtBoE,QAAYsN,EADS,YACC1R,EADD,kCAEhD,OACE,kBAAC,KAAD,eAAgB2R,mBAAiB,EAAC1R,UAAWI,EAAQnC,MAAUwT,GAC7D,kBAAC/P,EAAA,EAAD,CAAYC,QAAQ,MAAMiE,GACzBzB,EACC,kBAACgB,GAAA,EAAD,CAAYwK,aAAW,QAAQ3P,UAAWI,EAAQoR,YAAahM,QAASrB,GACtE,kBAAC,KAAD,OAEA,SAKJwN,GAAgBJ,cAAW,SAAC7S,GAAD,MAAY,CAC3CT,KAAM,CACJsB,QAASb,EAAMc,QAAQ,OAFL+R,CAIlBK,MAwLWmD,gBAAQ,KAAM,CAAEC,iBDpJC,SAACnL,EAAK7C,EAAG4G,EAAWC,GAApB,OAAiC,SAAAN,GAC7Dc,QAAQC,IAAIzE,GACdiE,KACGmH,IADH,UACUjH,GADV,qBAC8BhH,GAAM6C,GACjCoE,MAAK,SAAAC,GACJX,EAAS,CACPY,KhB5F+B,0BgB6F/BC,QAASF,EAASrE,OAEpB+D,IACAgH,KAAMnZ,QAAQ,6CAEf8S,OAAM,SAAAzS,GACL+R,IACA+G,KAAM9Y,MAAM,0CACZuS,QAAQC,IAAIxS,SCqIHiZ,EArLO,SAAChV,GACrB,IAAMK,EAAUjB,KADc,EAEFwF,mBAAS,CAAE,MAAS,GACV,QAAW,GACX,UAAa,GACb,cAAgB,EAChB,SAAY,IANpB,mBAEvB0N,EAFuB,KAEfC,EAFe,OAQN3N,mBAAS,IARH,mBAQvBkF,EARuB,KAQjBmI,EARiB,OASArN,oBAAS,GATT,mBASvB8I,EATuB,KASdC,EATc,KAU9BC,qBAAU,YACO,yCAAG,6BAAAsE,EAAA,sEACKnE,KACnBd,GAAI,kBAFU,OACVkF,EADU,OAIhBF,EAAQE,EAAOrI,MAJC,2CAAH,qDAOfsI,KACC,IACH,IAAMI,EAAe,SAAAC,GACnBF,EAAU,2BACLD,GADI,kBAENG,EAAM1Q,OAAOI,KAAOsQ,EAAM1Q,OAAO7C,UAwBtC,OACE,6BAEE,kBAACwT,GAAA,EAAD,CAAQtO,QAASpE,EAAMqS,YAAaM,kBAAgB,0BAA0BxO,KAAMnE,EAAMmE,KACpFyO,UAAU,QACV7F,SAAS,MAEb,kBAAC,GAAD,CAAa9F,GAAG,0BAA0B7C,QAASpE,EAAMqS,aAAzD,sBAGA,kBAAC,GAAD,CAAeQ,UAAQ,GACvB,kBAAClM,GAAA,EAAD,KACI,0BACImM,aAAa,MACbC,YAAU,EACVoC,SAnCQ,SAAAC,GACpBA,EAAEC,iBASArV,EAAM0U,KAAKpR,MAAQgP,EAAOhP,QAAUtD,EAAM0U,KAAKpR,MAAQgP,EAAOhP,MAAQtD,EAAM0U,KAAKpR,MACjFtD,EAAM0U,KAAK9Q,QAAU0O,EAAO1O,UAAY5D,EAAM0U,KAAK9Q,QAAU0O,EAAOhP,MAAQtD,EAAM0U,KAAK9Q,QACvF5D,EAAM0U,KAAKY,cAAgBhD,EAAOgD,gBAAkBtV,EAAM0U,KAAKY,cAAgBhD,EAAOgD,cAAgBtV,EAAM0U,KAAKY,cACjHtV,EAAM0U,KAAKa,UAAYjD,EAAOiD,YAAcvV,EAAM0U,KAAKa,UAAYjD,EAAOiD,UAAWvV,EAAM0U,KAAKa,UAChGvV,EAAM0U,KAAKc,SAAWlD,EAAOkD,WAAaxV,EAAM0U,KAAKc,SAAWlD,EAAOkD,SAAUxV,EAAM0U,KAAKc,SAC5FxV,EAAMiV,iBAAiBjV,EAAM0U,KAAK1U,EAAM0U,KAAKzN,IAb7B,WACd0G,GAAW,GACX3N,EAAMqS,iBAEQ,WACd1E,GAAW,GACX3N,EAAMqS,mBA8BE,kBAACzL,GAAA,EAAD,KAEA,kBAACC,GAAA,EAAD,CACIC,WAAS,EACTrH,QAAS,GAEb,kBAACoH,GAAA,EAAD,CACIxE,MAAI,EACJzB,GAAI,GACJkM,GAAI,IAEJ,kBAACkG,GAAA,EAAD,CACIJ,WAAS,EAET3I,MAAM,QACNjG,OAAO,QACP7B,KAAK,QACLjC,SAAUsS,EACVS,UAAQ,EACRwC,aAAczV,EAAM0U,KAAKpR,MACzB1B,QAAQ,cAIZ,kBAACiF,GAAA,EAAD,CACAxE,MAAI,EACJzB,GAAI,GACJkM,GAAI,IAEJ,kBAACkG,GAAA,EAAD,CACIJ,WAAS,EACT3I,MAAM,cACNjG,OAAO,QACP7B,KAAK,gBACLjC,SAAUsS,EACVS,UAAQ,EACRC,QAAM,EAENC,YAAa,CAAEC,QAAQ,GACvBqC,aAAczV,EAAM0U,KAAKY,cACzB1T,QAAQ,YAER,qCACCkI,EAAK7G,KAAI,SAAA4N,GAAM,OACZ,4BACIxN,IAAKwN,EAAO5J,GACZ/H,MAAO2R,EAAO5J,IAEb4J,EAAO1O,WAKpB,kBAAC0E,GAAA,EAAD,CACAxE,MAAI,EACJzB,GAAI,GACJkM,GAAI,IAEJ,kBAACkG,GAAA,EAAD,CACIJ,WAAS,EACTS,WAAW,qCACXrP,OAAO,QACP7B,KAAK,UACLjC,SAAUsS,EACVS,UAAQ,EACRhM,GAAG,kBACHgD,MAAM,sBACN6G,YAAY,6BACZ4E,WAAS,EACT9T,QAAQ,SACR6T,aAAczV,EAAM0U,KAAK9Q,WAG7B,kBAACiD,GAAA,EAAD,CACAxE,MAAI,EACJzB,GAAI,EACJkM,GAAI,IAEH,2BACO6I,OAAO,UACP1V,UAAWI,EAAQR,MACnBoH,GAAG,YACH2O,UAAQ,EACRxH,KAAK,OACLlO,SAAUsS,EACViD,aAAczV,EAAM0U,KAAKa,YAE7B,2BAAOM,QAAQ,yBACX,kBAACtS,GAAA,EAAD,CAAQ3B,QAAQ,YAAYjF,MAAM,UAAU4E,UAAU,QAAtD,oBAQZ,kBAACgD,EAAA,EAAD,MACA,kBAAC0E,GAAA,EAAD,KACCyE,EAAU,kBAACoI,GAAA,EAAD,MAAc,GADzB,IAC6B,6BACzB,kBAACvS,GAAA,EAAD,CACI6K,KAAK,SACLzR,MAAM,UACNiF,QAAQ,aAHZ,mBC5GLqP,GAnHa,SAACjR,GAC3BsO,QAAQC,IAAIvO,GACZ,IAAM+V,EAAiB3I,cAAY,SAAAC,GAAK,OAAIA,EAAM2I,WAAWxF,QACvDhD,EAAWC,eAHoB,EAIP7I,oBAAS,GAJF,mBAI9B8I,EAJ8B,KAIrBC,EAJqB,OAKG/I,mBAAS,IALZ,mBAK9BqR,EAL8B,KAKhBC,EALgB,OAMbtR,oBAAS,GANI,mBAM9BT,EAN8B,KAMxB6N,EANwB,OAQXpN,oBAAS,GARE,mBAQ9BuR,EAR8B,KAQvBC,EARuB,KAUrC9H,QAAQC,IAAIwH,GACZnI,qBAAU,WACND,EAAW,QAObH,EFlB+B,SAACK,EAAWC,GAAZ,OAAwB,SAAAN,GAEzDO,KACGC,IADH,UACUC,GADV,eAEGC,MAAK,SAAAC,GACJX,EAAS,CACPY,KhBN4B,uBgBO5BC,QAASF,EAASrE,OAEpBwE,QAAQC,IAAIJ,GACZN,OAEDW,OAAM,SAAAzS,GACL+R,IACAQ,QAAQC,IAAIxS,OEILsa,EANW,WAChB1I,GAAW,MAEG,WACdA,GAAW,SAGd,CAACH,IAGN,IAWM8I,EAAgB,SAAClB,GAErB,OAEI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAYjV,MAAO,CAAE9G,gBAAgB,UAAWyD,SAAS,OAAQH,MAAM,OAAQ4Z,OAAO,oBAAqBjX,aAAa,MAAO7G,MAAM,OAAQ+d,OAAO,SAApJ,WACU,0BAAMC,eAAA,GAAN,WAEV,kBAAC,KAAD,CAAUtW,MAAO,CAAC2I,MAAM,SACtB,kBAAC,KAAD,CAAU4N,SAAU,kBApBZC,EAoB6BvB,EAnB/C9G,QAAQC,IAAIoI,GACZP,GAAS,QACTF,EAAgB,2BAAID,GAAiBU,IAHpB,IAACA,IAoBiC,kBAAC,KAAD,CAAaha,MAAM,UAAUsE,KAAK,SAAS,IAApF,SACA,kBAAC,KAAD,CAAUyV,SAAU,kBAhBVC,EAgB6BvB,EAfjDpD,GAAQ,QACRkE,EAAgB,2BAAID,GAAiBU,IAFlB,IAACA,IAgBiC,kBAAC,KAAD,CAAYha,MAAM,UAAUsE,KAAK,SAAS,IAArF,aAOV,OAEM,kBAAC,KAAD,KACE,6BACA,kBAAC,KAAD,CACFqC,MAAM,sBACNoL,QAAS,CACP,CAAEpL,MAAO,MAAOqL,MAAO,KAAKC,WAAW,GACvC,CACEtL,MAAO,QACPqL,MAAO,QACPC,WAAW,GAGb,CACEtL,MAAO,UACPqL,MAAO,UACPC,WAAW,GAEb,CACEtL,MAAO,OACPqL,MAAO,OACPC,WAAW,GAEb,CACEtL,MAAO,SACPqL,MAAO,UACPC,WAAW,IAGfC,UAAWnB,EACX5D,KAAMiM,EAAe9S,KAAI,SAAC6L,GAAD,MAAU,CACjC4B,GAAI5B,EAAI7H,GACR3D,MAAOwL,EAAIxL,MACXM,QAASkL,EAAIlL,QACbwK,KAA0B,IAApBU,EAAIwG,cAAoB,sBAAwB,YACtDzR,QAASyS,EAAcxH,OAGzB3W,QAAS,CAEP0X,YAAa,CACXxW,gBAAiB,UACjBsD,MAAO,OACPqH,OAAQ,QAEV4K,WAAW,EACXkB,cAAc,KAKlB,kBAAC,GAAD,CAAa3L,KAAMA,EAAMkO,YAhGT,WAAOL,GAAQ,IAgGoB0C,KAAMuB,IACzD,kBAACW,GAAD,CAAWzS,KAAMgS,EAAO9D,YA/FP,WAAO+D,GAAS,IA+FkB1B,KAAMuB,OChFzD7W,I,OAAYC,aAAW,SAAAV,GAAK,MAAK,CACnCT,KAAM,GACN4Q,IAAK,CACHtW,OAAQ,OACRkH,QAAS,OACTH,WAAY,SACZ6C,UAAWzD,EAAMc,QAAQ,IAE3BsQ,OAAQ,CACNjQ,SAAU,GAGZD,MAAO,CACHH,QAAS,aAIX6R,GAAcC,cA/BL,SAAC7S,GAAD,MAAY,CACzBT,KAAM,CACJ8F,OAAQ,EACRxE,QAASb,EAAMc,QAAQ,IAEzBgS,YAAa,CACXpL,SAAU,WACVjP,MAAOuH,EAAMc,QAAQ,GACrBpI,IAAKsH,EAAMc,QAAQ,GACnB9C,MAAOgC,EAAM/B,QAAQH,KAAK,SAsBV+U,EAAmB,SAACxR,GAAW,IACzC6F,EAAyC7F,EAAzC6F,SAAUxF,EAA+BL,EAA/BK,QAAS+D,EAAsBpE,EAAtBoE,QAAYsN,EADS,YACC1R,EADD,kCAEhD,OACE,kBAAC,KAAD,eAAgB2R,mBAAiB,EAAC1R,UAAWI,EAAQnC,MAAUwT,GAC7D,kBAAC/P,EAAA,EAAD,CAAYC,QAAQ,MAAMiE,GACzBzB,EACC,kBAACgB,GAAA,EAAD,CAAYwK,aAAW,QAAQ3P,UAAWI,EAAQoR,YAAahM,QAASrB,GACtE,kBAAC,KAAD,OAEA,SAKJwN,GAAgBJ,cAAW,SAAC7S,GAAD,MAAY,CAC3CT,KAAM,CACJsB,QAASb,EAAMc,QAAQ,OAFL+R,CAIlBK,MA4MWmD,gBAAQ,KAAM,CAAE6B,iBHjNG,SAAC/M,EAAK+D,EAAWC,GAAjB,OAA8B,SAAAN,GAC1Dc,QAAQC,IAAIzE,GACdiE,KACG+I,KADH,UACW7I,GADX,cACgCnE,GAC7BoE,MAAK,SAAAC,GACJX,EAAS,CACPY,KhBzDwB,qBgB0DxBC,QAASF,EAASrE,OAEpB+D,IACAgH,KAAMnZ,QAAQ,6CAEf8S,OAAM,SAAAzS,GACL+R,IACA+G,KAAM9Y,MAAM,0CACZuS,QAAQC,IAAIxS,SGkMLiZ,EAzMO,SAAChV,GACrB,IAAMK,EAAUjB,KADc,EAEN2S,IAAMnN,UAAS,GAFT,mBAEvBT,EAFuB,KAEjB6N,EAFiB,KAOxBK,EAAc,WAClBL,GAAQ,IARoB,EAWFpN,mBAAS,CAAE,MAAS,GACV,QAAW,GACX,UAAa,GACb,cAAiB,GACjB,SAAY,IAfpB,mBAWvB0N,EAXuB,KAWfC,EAXe,OAiBN3N,mBAAS,IAjBH,mBAiBvBkF,EAjBuB,KAiBjBmI,EAjBiB,OAkBArN,oBAAS,GAlBT,mBAkBvB8I,EAlBuB,KAkBdC,EAlBc,KAmB9BC,qBAAU,YACO,yCAAG,6BAAAsE,EAAA,sEACKnE,KACnBd,GAAI,kBAFU,OACVkF,EADU,OAIhBF,EAAQE,EAAOrI,MAJC,2CAAH,qDAOfsI,MAEF,IAAMI,EAAe,SAAAC,GACnBF,EAAU,2BACLD,GADI,kBAENG,EAAM1Q,OAAOI,KAAOsQ,EAAM1Q,OAAO7C,SAEpCoP,QAAQC,IAAI+D,IAmBd,OACE,6BACI,kBAAC,KAAD,CAAgByE,UAAW,IAAMC,iBAAe,IAClD,yBAAK/W,UAAWI,EAAQyO,KACxB,0BAAM7O,UAAWI,EAAQ0P,SACzB,kBAACxM,GAAA,EAAD,CAAQ5G,MAAM,UACViF,QAAQ,YAAYqV,MAAO,CAAEjT,OAAQ,QAASkT,aAAc,QACxD,kBAAC,IAAD,CAAMzT,GAAI,mBAAV,qBAEN,kBAACF,GAAA,EAAD,CACI5G,MAAM,UACNiF,QAAQ,YACR6D,QA7Dc,WACtBuM,GAAQ,KAyDJ,oBAQF,kBAACU,GAAA,EAAD,CAAQtO,QAASiO,EAAaM,kBAAgB,0BAA0BxO,KAAMA,EACxEyO,UAAU,QACV7F,SAAS,MAEb,kBAAC,GAAD,CAAa9F,GAAG,0BAA0B7C,QAASiO,GAAnD,mBAGA,kBAAC,GAAD,CAAeQ,UAAQ,GACvB,kBAAClM,GAAA,EAAD,KACI,0BACImM,aAAa,MACbC,YAAU,EACVoC,SA7CQ,SAAAC,GACpBA,EAAEC,iBACF/G,QAAQC,IAAI+D,GASVtS,EAAM6W,iBAAiBvE,GARP,WACd3E,GAAW,GACX0E,OAEc,WACd1E,GAAW,GACX0E,SAuCQ,kBAACzL,GAAA,EAAD,KAEA,kBAACC,GAAA,EAAD,CACIC,WAAS,EACTrH,QAAS,GAEb,kBAACoH,GAAA,EAAD,CACIxE,MAAI,EACJzB,GAAI,GACJkM,GAAI,IAEJ,kBAACkG,GAAA,EAAD,CACIJ,WAAS,EAET3I,MAAM,QACNjG,OAAO,QACP7B,KAAK,QACLjC,SAAUsS,EACVS,UAAQ,EACR/T,MAAOoT,EAAOhP,MACd1B,QAAQ,cAIZ,kBAACiF,GAAA,EAAD,CACAxE,MAAI,EACJzB,GAAI,GACJkM,GAAI,IAEJ,kBAACkG,GAAA,EAAD,CACIJ,WAAS,EACT3I,MAAM,cACNjG,OAAO,QACP7B,KAAK,gBACLjC,SAAUsS,EACVS,UAAQ,EACRC,QAAM,EAENC,YAAa,CAAEC,QAAQ,GACvBlU,MAAOoT,EAAOgD,cACd1T,QAAQ,YAER,qCACCkI,EAAK7G,KAAI,SAAA4N,GAAM,OACZ,4BACIxN,IAAKwN,EAAO5J,GACZ/H,MAAO2R,EAAO5J,IAEb4J,EAAO1O,WAKpB,kBAAC0E,GAAA,EAAD,CACAxE,MAAI,EACJzB,GAAI,GACJkM,GAAI,IAEJ,kBAACkG,GAAA,EAAD,CACIJ,WAAS,EACTS,WAAW,qCACXrP,OAAO,QACP7B,KAAK,UACLjC,SAAUsS,EACVS,UAAQ,EACRhM,GAAG,kBACHgD,MAAM,sBACN6G,YAAY,6BACZ4E,WAAS,EACT9T,QAAQ,SACR1C,MAAOoT,EAAO1O,WAGlB,kBAACiD,GAAA,EAAD,CACAxE,MAAI,EACJzB,GAAI,EACJkM,GAAI,IAEH,2BACO6I,OAAO,UACP1V,UAAWI,EAAQR,MACnBoH,GAAG,YACH2O,UAAQ,EACRxH,KAAK,OACLlO,SAAUsS,EACVtT,MAAOoT,EAAOiD,YAElB,2BAAOM,QAAQ,yBACX,kBAACtS,GAAA,EAAD,CAAQ3B,QAAQ,YAAYjF,MAAM,YAAY4E,UAAU,QAAxD,cAQZ,kBAACgD,EAAA,EAAD,MACA,kBAAC0E,GAAA,EAAD,KACCyE,EAAU,kBAACoI,GAAA,EAAD,MAAc,GADzB,IAC6B,6BACzB,kBAACvS,GAAA,EAAD,CACI6K,KAAK,SACLzR,MAAM,UACNiF,QAAQ,aAHZ,iBCjQdxC,GAAYC,aAAW,SAAAV,GAAK,MAAK,CACrCT,KAAM,CACJsB,QAASb,EAAMc,QAAQ,IAEzBmE,QAAS,CACPxB,UAAWzD,EAAMc,QAAQ,QAkBd0X,GAdQ,WACrB,IAAM9W,EAAUjB,KAGhB,OACE,yBAAKa,UAAWI,EAAQnC,MACrB,kBAAC,GAAD,MACD,yBAAK+B,UAAWI,EAAQuD,SACtB,kBAACwT,GAAD,SCXO,SAASjD,GAAYnU,GAChC,IAAIoU,EAAUC,cACZ7G,EAAWC,eACV6G,EAAM,WACNtU,EAAMqS,cACN+B,EAAQG,KAAK,oBAGlB,OACE,6BACE,kBAAC7B,GAAA,EAAD,CACEvO,KAAMnE,EAAMmE,KACZC,QAASpE,EAAMqS,YACfM,kBAAgB,qBAChB6B,mBAAiB,4BAEjB,kBAACjD,GAAA,EAAD,CAAatK,GAAG,sBAAsB,qDACtC,kBAAC2K,GAAA,EAAD,KACE,kBAAC6C,GAAA,EAAD,CAAmBxN,GAAG,4BACnBjH,EAAM0U,KAAKvS,OAGhB,kBAACwS,GAAA,EAAD,KACE,kBAACpR,GAAA,EAAD,CAAQkC,QAAS,WACb+H,EL+GsB,SAACvG,EAAIqN,GAAL,OAAa,SAAA9G,GAC7Cc,QAAQC,IAAItH,GACd8G,KACG6G,OADH,UACa3G,GADb,yBACqChH,IAClCiH,MAAK,SAAAC,GACJX,EAAS,CACPY,KhBpI0B,qBgBqI1BC,QAASF,EAASrE,OAEpB+K,KAAMnZ,QAAQ,yCACd4Y,OAED9F,OAAM,SAAAzS,GACL8Y,KAAM9Y,MAAM,0CACZuS,QAAQC,IAAIxS,GACZuY,QK9HiB+C,CAAqBrX,EAAM0U,KAAKzN,GAAIqN,KAE1C3X,MAAM,aAHb,OAMA,kBAAC4G,GAAA,EAAD,CAAQkC,QAASzF,EAAMqS,YAAa1V,MAAM,UAAUoY,WAAS,GAA7D,SCjBV,IAcM3V,GAAYC,aAAW,SAAAV,GAAK,MAAK,CACnCT,KAAM,GACN4Q,IAAK,CACHtW,OAAQ,OACRkH,QAAS,OACTH,WAAY,SACZ6C,UAAWzD,EAAMc,QAAQ,IAE3BsQ,OAAQ,CACNjQ,SAAU,GAGZD,MAAO,CACHH,QAAS,YAIX6R,GAAcC,cA/BL,SAAC7S,GAAD,MAAY,CACzBT,KAAM,CACJ8F,OAAQ,EACRxE,QAASb,EAAMc,QAAQ,IAEzBgS,YAAa,CACXpL,SAAU,WACVjP,MAAOuH,EAAMc,QAAQ,GACrBpI,IAAKsH,EAAMc,QAAQ,GACnB9C,MAAOgC,EAAM/B,QAAQH,KAAK,SAsBV+U,EAAmB,SAACxR,GAAW,IACzC6F,EAAyC7F,EAAzC6F,SAAUxF,EAA+BL,EAA/BK,QAAS+D,EAAsBpE,EAAtBoE,QAAYsN,EADS,YACC1R,EADD,kCAEhD,OACE,kBAAC,KAAD,eAAgB2R,mBAAiB,EAAC1R,UAAWI,EAAQnC,MAAUwT,GAC7D,kBAAC/P,EAAA,EAAD,CAAYC,QAAQ,MAAMiE,GACzBzB,EACC,kBAACgB,GAAA,EAAD,CAAYwK,aAAW,QAAQ3P,UAAWI,EAAQoR,YAAahM,QAASrB,GACtE,kBAAC,KAAD,OAEA,SAKJwN,GAAgBJ,cAAW,SAAC7S,GAAD,MAAY,CAC3CT,KAAM,CACJsB,QAASb,EAAMc,QAAQ,OAFL+R,CAIlBK,MAwGWmD,gBAAQ,KAAM,CAAEsC,qBNvFO,SAACxN,EAAK7C,EAAG4G,EAAWC,GAApB,OAAiC,SAAAN,GACnEc,QAAQC,IAAIzE,GACdiE,KACGmH,IADH,UACUjH,GADV,yBACkChH,GAAM6C,GACrCoE,MAAK,SAAAC,GACJX,EAAS,CACPY,KhBzE+B,0BgB0E/BC,QAASF,EAASrE,OAEpB+D,IACAgH,KAAMnZ,QAAQ,6CAEf8S,OAAM,SAAAzS,GACL+R,IACA+G,KAAM9Y,MAAM,0CACZuS,QAAQC,IAAIxS,SMwEHiZ,EArGS,SAAChV,GAEvB,IAAMuX,EAAUvX,EAAM0U,KAAO1U,EAAM0U,KAAO,GACpC8C,EAAQxX,EAAM0U,KAAO1U,EAAM0U,KAAKzN,GAAK,KACvCmN,EAAUC,cACRhU,EAAUjB,KALiB,EAMHwF,oBAAS,GANN,mBAM1B8I,EAN0B,KAMjBC,EANiB,OAQL/I,mBAAS,CAAC2S,aARL,mBAQ1BjF,EAR0B,KAQlBC,EARkB,KASjCjE,QAAQC,IAAI+D,GAiBZ,OACE,6BAEE,kBAACI,GAAA,EAAD,CAAQtO,QAASpE,EAAMqS,YAAaM,kBAAgB,0BAA0BxO,KAAMnE,EAAMmE,KACpFyO,UAAU,QACV7F,SAAS,MAEb,kBAAC,GAAD,CAAa9F,GAAG,0BAA0B7C,QAASpE,EAAMqS,aAAzD,yBAGA,kBAAC,GAAD,CAAeQ,UAAQ,GACvB,kBAAClM,GAAA,EAAD,KACI,0BACImM,aAAa,MACbC,YAAU,EACVoC,SA/BS,SAAAC,GACrBA,EAAEC,iBACF/G,QAAQC,IAAI+D,GAUVtS,EAAMsX,qBAAqBhF,EAAQkF,GATnB,WACd7J,GAAW,GACXyG,EAAQG,KAAK,eACbvU,EAAMqS,iBAEQ,WACd1E,GAAW,GACX3N,EAAMqS,mBAwBE,kBAACzL,GAAA,EAAD,KAEA,kBAACC,GAAA,EAAD,CACIC,WAAS,EACTrH,QAAS,GAGT,kBAACoH,GAAA,EAAD,CACAxE,MAAI,EACJzB,GAAI,GACJkM,GAAI,IAGH,kBAACkG,GAAA,EAAD,CACGJ,WAAS,EACT3L,GAAG,OACHhH,UAAWI,EAAQoX,UACnBhC,aAAczV,EAAM0U,KAAKvS,KAEzBjC,SAAU,SAAAkV,GAAC,OACP7C,EAAU,2BACLD,GADI,IAEPnQ,KAAMiT,EAAErT,OAAO7C,UAGrB0C,QAAQ,gBAShB,kBAAC2C,EAAA,EAAD,MACA,kBAAC0E,GAAA,EAAD,KACCyE,EAAU,kBAACoI,GAAA,EAAD,MAAc,GAErB,kBAACvS,GAAA,EAAD,CACI5G,MAAM,UACNiF,QAAQ,YACRwM,KAAK,UAHT,mBCrCL6C,GAzGa,SAACjR,GAE3B,IAAM0X,EAAiBtK,cAAY,SAAAC,GAAK,OAAIA,EAAM2I,WAAW2B,SACvDnK,EAAWC,eAHoB,EAIP7I,oBAAS,GAJF,mBAI9B8I,EAJ8B,KAIrBC,EAJqB,OAKG/I,mBAAS,IALZ,mBAK9BqR,EAL8B,KAKhBC,EALgB,OAMbtR,oBAAS,GANI,mBAM9BT,EAN8B,KAMxB6N,EANwB,OAQXpN,oBAAS,GARE,mBAQ9BuR,EAR8B,KAQvBC,EARuB,KAUrC9H,QAAQC,IAAImJ,GACZ9J,qBAAU,WACND,EAAW,QAObH,EPAkC,SAACK,EAAWC,GAAZ,OAAwB,SAAAN,GAE1DO,KACGC,IADH,UACUC,GADV,mBAEGC,MAAK,SAAAC,GACJX,EAAS,CACPY,KhBnB8B,2BgBoB9BC,QAASF,EAASrE,OAEpBwE,QAAQC,IAAIJ,GACZN,OAEDW,OAAM,SAAAzS,GACL+R,IACAQ,QAAQC,IAAIxS,OOdP6b,EANW,WAChBjK,GAAW,MAEG,WACdA,GAAW,SAGd,CAACH,IAGN,IAYM8I,EAAgB,SAAClB,GAErB,OAEI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAYjV,MAAO,CAAE9G,gBAAgB,UAAWyD,SAAS,OAAQH,MAAM,OAAQ4Z,OAAO,oBAAqBjX,aAAa,MAAO7G,MAAM,OAAQ+d,OAAO,SAApJ,WACU,0BAAMC,eAAA,GAAN,WAEV,kBAAC,KAAD,CAAUtW,MAAO,CAAC2I,MAAM,SACtB,kBAAC,KAAD,CAAU4N,SAAU,kBArBZC,EAqB6BvB,EApB/C9G,QAAQC,IAAIoI,GACZP,GAAS,QACTF,EAAgB,2BAAID,GAAiBU,IAHpB,IAACA,IAqBiC,kBAAC,KAAD,CAAaha,MAAM,UAAUsE,KAAK,SAAS,IAApF,SAEA,kBAAC,KAAD,CAAUyV,SAAU,kBAlBVC,EAkB6BvB,EAjBjD9G,QAAQC,IAAIoI,GACZ3E,GAAQ,QACRkE,EAAgB,2BAAID,GAAiBU,IAHlB,IAACA,IAkBiC,kBAAC,KAAD,CAAYha,MAAM,UAAUsE,KAAK,SAAS,IAArF,aAOV,OAEM,kBAAC,KAAD,KACE,6BACA,kBAAC,KAAD,CACFqC,MAAM,4BACNoL,QAAS,CACP,CAAEpL,MAAO,MAAOqL,MAAO,KAAKC,WAAW,GACvC,CACEtL,MAAO,QACPqL,MAAO,QACPC,WAAW,GAGb,CACEtL,MAAO,SACPqL,MAAO,UACPC,WAAW,IAGfC,UAAWnB,EACX5D,KAAM4N,EAAezU,KAAI,SAAC6L,GAAD,MAAU,CACjC4B,GAAI5B,EAAI7H,GACR3D,MAAOwL,EAAI3M,KACX0B,QAASyS,EAAcxH,OAGzB3W,QAAS,CAEP0X,YAAa,CACXxW,gBAAiB,UACjBsD,MAAO,OACPqH,OAAQ,QAEV4K,WAAW,EACXkB,cAAc,KAKlB,kBAAC,GAAD,CAAa3L,KAAMA,EAAMkO,YAtFT,WAAOL,GAAQ,IAsFoB0C,KAAMuB,IACzD,kBAAC,GAAD,CAAW9R,KAAMgS,EAAO9D,YArFP,WAAO+D,GAAS,IAqFkB1B,KAAMuB,OCvEzD7W,GAAYC,aAAW,SAAAV,GAAK,MAAK,CACnCT,KAAM,GACN4Q,IAAK,CACHtW,OAAQ,OACRkH,QAAS,OACTH,WAAY,SACZ6C,UAAWzD,EAAMc,QAAQ,IAE3BsQ,OAAQ,CACNjQ,SAAU,GAGZD,MAAO,CACHH,QAAS,YAIX6R,GAAcC,cA/BL,SAAC7S,GAAD,MAAY,CACzBT,KAAM,CACJ8F,OAAQ,EACRxE,QAASb,EAAMc,QAAQ,IAEzBgS,YAAa,CACXpL,SAAU,WACVjP,MAAOuH,EAAMc,QAAQ,GACrBpI,IAAKsH,EAAMc,QAAQ,GACnB9C,MAAOgC,EAAM/B,QAAQH,KAAK,SAsBV+U,EAAmB,SAACxR,GAAW,IACzC6F,EAAyC7F,EAAzC6F,SAAUxF,EAA+BL,EAA/BK,QAAS+D,EAAsBpE,EAAtBoE,QAAYsN,EADS,YACC1R,EADD,kCAEhD,OACE,kBAAC,KAAD,eAAgB2R,mBAAiB,EAAC1R,UAAWI,EAAQnC,MAAUwT,GAC7D,kBAAC/P,EAAA,EAAD,CAAYC,QAAQ,MAAMiE,GACzBzB,EACC,kBAACgB,GAAA,EAAD,CAAYwK,aAAW,QAAQ3P,UAAWI,EAAQoR,YAAahM,QAASrB,GACtE,kBAAC,KAAD,OAEA,SAKJwN,GAAgBJ,cAAW,SAAC7S,GAAD,MAAY,CAC3CT,KAAM,CACJsB,QAASb,EAAMc,QAAQ,OAFL+R,CAIlBK,MA0HWmD,gBAAQ,KAAM,CAAE6C,iBRhJC,SAAC/N,EAAK+D,EAAWC,GAAjB,OAA8B,SAAAN,GAE1DO,KACG+I,KADH,UACW7I,GADX,kBACoCnE,GACjCoE,MAAK,SAAAC,GACJX,EAAS,CACPY,KhBvCwB,qBgBwCxBC,QAASF,EAASrE,OAEpB+D,IACAgH,KAAMnZ,QAAQ,6CAEf8S,OAAM,SAAAzS,GACL+R,IACA+G,KAAM9Y,MAAM,gDQkILiZ,EAvHS,SAAChV,GAEvB,IAAIoU,EAAUC,cACRhU,EAAUjB,KAHiB,EAIT2S,IAAMnN,UAAS,GAJN,mBAI1BT,EAJ0B,KAIpB6N,EAJoB,OAKHpN,oBAAS,GALN,mBAK1B8I,EAL0B,KAKjBC,EALiB,KAS3B0E,EAAc,WAClBL,GAAQ,IAVuB,EAaLpN,mBAAS,CAACzC,KAAK,KAbV,mBAa1BmQ,EAb0B,KAalBC,EAbkB,KAiCjC,OACE,6BACA,kBAAC,KAAD,CAAgBwE,UAAW,IAAMC,iBAAe,IAC9C,yBAAK/W,UAAWI,EAAQyO,KACxB,0BAAM7O,UAAWI,EAAQ0P,SACzB,kBAACxM,GAAA,EAAD,CACI5G,MAAM,UACNiF,QAAQ,YACR6D,QAnCgB,WACtBuM,GAAQ,KA+BN,kBASA,kBAACU,GAAA,EAAD,CAAQtO,QAASiO,EAAaM,kBAAgB,0BAA0BxO,KAAMA,EACxEyO,UAAU,QACV7F,SAAS,MAEb,kBAAC,GAAD,CAAa9F,GAAG,0BAA0B7C,QAASiO,GAAnD,wBAGA,kBAAC,GAAD,CAAeQ,UAAQ,GACvB,kBAAClM,GAAA,EAAD,KACI,0BACImM,aAAa,MACbC,YAAU,EACVoC,SA5CS,SAAAC,GACrBA,EAAEC,iBACF/G,QAAQC,IAAI+D,GAYVtS,EAAM6X,iBAAiBvF,GAXP,WACd3E,GAAW,GACXyG,EAAQG,KAAK,eACblC,OAIc,WACd1E,GAAW,GACX0E,SAmCQ,kBAACzL,GAAA,EAAD,KAEA,kBAACC,GAAA,EAAD,CACIC,WAAS,EACTrH,QAAS,GAGT,kBAACoH,GAAA,EAAD,CACAxE,MAAI,EACJzB,GAAI,GACJkM,GAAI,IAGH,kBAACkG,GAAA,EAAD,CACGJ,WAAS,EACT3I,MAAM,cACNhD,GAAG,OACHhH,UAAWI,EAAQoX,UACnBpE,WAAW,cACXnT,SAAU,SAAAkV,GAAC,OACP7C,EAAU,2BACLD,GADI,IAEPnQ,KAAMiT,EAAErT,OAAO7C,UAGrB0C,QAAQ,WACRwM,KAAK,YAQb,kBAAC7J,EAAA,EAAD,MACA,kBAAC0E,GAAA,EAAD,KACCyE,EAAU,kBAACoI,GAAA,EAAD,MAAc,GAErB,kBAACvS,GAAA,EAAD,CACI5G,MAAM,UACNiF,QAAQ,YACRwM,KAAK,UAHT,iBC5KdhP,GAAYC,aAAW,SAAAV,GAAK,MAAK,CACrCT,KAAM,CACJsB,QAASb,EAAMc,QAAQ,IAEzBmE,QAAS,CACPxB,UAAWzD,EAAMc,QAAQ,QAmBd0X,GAfQ,WACrB,IAAM9W,EAAUjB,KAGhB,OACE,yBAAKa,UAAWI,EAAQnC,MACrB,kBAAC,GAAD,MAED,yBAAK+B,UAAWI,EAAQuD,SACtB,kBAAC,GAAD,SCpBOkU,IADQA,cACRA,eCgFAC,GAhEA,WAEb,OACE,kBAAC,IAAD,CAAe3D,QAASA,IACxB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE4D,OAAK,EACLC,KAAK,IACLxU,GAAG,eAEL,kBAAC,EAAD,CACElC,UAAW2W,GACXF,OAAK,EACL3W,OAAQ8W,GACRC,KAAK,eAEP,kBAAC,EAAD,CACE7W,UAAW8W,GACXL,OAAK,EACL3W,OAAQ8W,GACRC,KAAK,UAEP,kBAAC,EAAD,CACE7W,UAAW+W,GACXN,OAAK,EACL3W,OAAQ8W,GACRC,KAAK,gBAEP,kBAAC,EAAD,CACE7W,UAAWgX,GACXP,OAAK,EACL3W,OAAQ8W,GACRC,KAAK,eAEP,kBAAC,EAAD,CACE7W,UAAWiX,GACXR,OAAK,EACL3W,OAAQ8W,GACRC,KAAK,aAEP,kBAAC,EAAD,CACE7W,UAAWkX,GACXT,OAAK,EACL3W,OAAQ8W,GACRC,KAAK,gBAEP,kBAAC,EAAD,CACE7W,UAAWmX,GACXV,OAAK,EACL3W,OAAQ8W,GACRC,KAAK,oBAEP,kBAAC,EAAD,CACE7W,UAAWoX,GACXX,OAAK,EACL3W,OAAQuX,GACRR,KAAK,eAEP,kBAAC,IAAD,CAAU3U,GAAG,kB,mBC3EboV,GAAe,CACnBrI,KAAM,IAgBOsI,GAZU,WAAmC,IAAlCzL,EAAiC,uDAAzBwL,GAAc3Q,EAAW,uCACzD,OAAQA,EAAOkG,MACb,I5BK+B,sB4BJ7B,OAAO,2BAAKf,GAAZ,IAAmBmD,KAAMtI,EAAOmG,UAIlC,QACE,OAAOhB,ICbPwL,GAAe,CACnBrI,KAAM,IAgBOuI,GAZW,WAAmC,IAAlC1L,EAAiC,uDAAzBwL,GAAc3Q,EAAW,uCAC1D,OAAQA,EAAOkG,MACb,I7BMgC,uB6BL9B,OAAO,2BAAKf,GAAZ,IAAmBmD,KAAMtI,EAAOmG,UAIlC,QACE,OAAOhB,I,UCbPwL,GAAe,CACnBtL,SAAU,IAaGyL,GATM,WAAmC,IAAlC3L,EAAiC,uDAAzBwL,GAAc3Q,EAAW,uCACrD,OAAQA,EAAOkG,MACb,I9BOoC,2B8BNlC,OAAO,2BAAKf,GAAZ,IAAmBE,SAAS,aAAKrF,EAAOmG,WAC1C,QACE,OAAOhB,ICVPwL,GAAe,CACnBrI,KAAM,IAgBOyI,GAZQ,WAAmC,IAAlC5L,EAAiC,uDAAzBwL,GAAc3Q,EAAW,uCACvD,OAAQA,EAAOkG,MACb,I/BQ6B,oB+BP3B,OAAO,2BAAKf,GAAZ,IAAmBmD,KAAMtI,EAAOmG,UAIlC,QACE,OAAOhB,ICbPwL,GAAe,CACnBrI,KAAM,GACNmH,MAAM,IAkBOuB,GAdW,WAAmC,IAAlC7L,EAAiC,uDAAzBwL,GAAc3Q,EAAW,uCAC1D,OAAQA,EAAOkG,MACb,IhCQgC,uBgCP9B,OAAO,2BAAKf,GAAZ,IAAmBmD,KAAMtI,EAAOmG,UAChC,IhCUkC,2BgCThC,OAAO,2BAAKhB,GAAZ,IAAmBsK,MAAOzP,EAAOmG,UACjC,IhCS+B,0BgCR3B,OAAO,2BAAKhB,GAAWnF,EAAOmG,SAEtC,QACE,OAAOhB,ICTE8L,gBAAgB,CAC7B5I,UAAWuI,GACX3H,WAAY4H,GACZzL,YAAY0L,GACZvF,QAAQwF,GACRjD,WAAWkD,KCVPE,GAAa,CAACC,MAEdR,GAAe,GAiBNS,GAfDxiB,OAAOyiB,6BACjBC,aACEC,GACAZ,GACAa,aACEC,KAAe,WAAf,EAAmBP,IACnBtiB,OAAOyiB,iCAGXC,aACEC,GACAZ,GACAa,aAAQC,KAAe,WAAf,EAAmBP,MCH3BQ,GAAiB9B,cAEvB+B,IAAMC,QAAQC,OAAOF,IAAMG,SAASC,UAAUC,UAAW,CACvDhjB,KAAMijB,EAAQjjB,OAGhBkjB,IAASC,WAAT,2BACKD,IAASC,YACTA,G,IAGgBC,G,uKAEjB,OACE,kBAAC,KAAD,CAAUhB,MAAOA,IACjB,kBAACiB,EAAA,EAAD,CAAe5b,MAAOA,GACpB,kBAAC,IAAD,CAAQyV,QAASwF,IACf,kBAAC,GAAD,a,GANuBtY,aCtBjCkZ,IAAShZ,OAAO,kBAAC,GAAD,MAASiZ,SAASC,eAAe,S7E2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3M,MAAK,SAAA4M,GACjCA,EAAaC,kB","file":"static/js/main.f6f37a84.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// ChartJS extension rounded bar chart\n// https://codepen.io/jedtrow/full/ygRYgo\nfunction draw() {\n  const { ctx } = this._chart;\n  const vm = this._view;\n  let { borderWidth } = vm;\n\n  let left;\n  let right;\n  let top;\n  let bottom;\n  let signX;\n  let signY;\n  let borderSkipped;\n  let radius;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let { cornerRadius } = this._chart.config.options;\n  if (cornerRadius < 0) {\n    cornerRadius = 0;\n  }\n\n  if (typeof cornerRadius === 'undefined') {\n    cornerRadius = 0;\n  }\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    const halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    const borderLeft =\n      left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n    const borderRight =\n      right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n    const borderBottom =\n      bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (let i = 1; i < 4; i += 1) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    const width = corners[2][0] - corners[1][0];\n    const height = corners[0][1] - corners[1][1];\n    const x = corners[1][0];\n    const y = corners[1][1];\n\n    radius = cornerRadius;\n    // Fix radius being too large\n    if (radius > Math.abs(height) / 2) {\n      radius = Math.floor(Math.abs(height) / 2);\n    }\n    if (radius > Math.abs(width) / 2) {\n      radius = Math.floor(Math.abs(width) / 2);\n    }\n\n    if (height < 0) {\n      // Negative values in a standard bar chart\n      const xTl = x;\n      const xTr = x + width;\n      const yTl = y + height;\n      const yTr = y + height;\n\n      const xBl = x;\n      const xBr = x + width;\n      const yBl = y;\n      const yBr = y;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else if (width < 0) {\n      // Negative values in a horizontal bar chart\n      const xTl = x + width;\n      const xTr = x;\n      const yTl = y;\n      const yTr = y;\n\n      const xBl = x + width;\n      const xBr = x;\n      const yBl = y + height;\n      const yBr = y + height;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else {\n      // Positive Value\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius,\n        y + height\n      );\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n    }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n}\n\nexport default {\n  draw\n};\n","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","const checked = (value, options) => {\n  if (value !== true) {\n    return options.message || 'must be checked';\n  }\n};\n\nexport default {\n  checked\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    borderRadius: '4px',\n    alignItems: 'center',\n    padding: theme.spacing(1),\n    display: 'flex',\n    flexBasis: 420\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    color: theme.palette.text.secondary\n  },\n  input: {\n    flexGrow: 1,\n    fontSize: '14px',\n    lineHeight: '16px',\n    letterSpacing: '-0.05px'\n  }\n}));\n\nconst SearchInput = props => {\n  const { className, onChange, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Paper\n      {...rest}\n      className={clsx(classes.root, className)}\n      style={style}\n    >\n      <SearchIcon className={classes.icon} />\n      <Input\n        {...rest}\n        className={classes.input}\n        disableUnderline\n        onChange={onChange}\n      />\n    </Paper>\n  );\n};\n\nSearchInput.propTypes = {\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  style: PropTypes.object\n};\n\nexport default SearchInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-block',\n    borderRadius: '50%',\n    flexGrow: 0,\n    flexShrink: 0\n  },\n  sm: {\n    height: theme.spacing(1),\n    width: theme.spacing(1)\n  },\n  md: {\n    height: theme.spacing(2),\n    width: theme.spacing(2)\n  },\n  lg: {\n    height: theme.spacing(3),\n    width: theme.spacing(3)\n  },\n  neutral: {\n    backgroundColor: theme.palette.neutral\n  },\n  primary: {\n    backgroundColor: theme.palette.primary.main\n  },\n  info: {\n    backgroundColor: theme.palette.info.main\n  },\n  warning: {\n    backgroundColor: theme.palette.warning.main\n  },\n  danger: {\n    backgroundColor: theme.palette.error.main\n  },\n  success: {\n    backgroundColor: theme.palette.success.main\n  }\n}));\n\nconst StatusBullet = props => {\n  const { className, size, color, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <span\n      {...rest}\n      className={clsx(\n        {\n          [classes.root]: true,\n          [classes[size]]: size,\n          [classes[color]]: color\n        },\n        className\n      )}\n    />\n  );\n};\n\nStatusBullet.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'neutral',\n    'primary',\n    'info',\n    'success',\n    'warning',\n    'danger'\n  ]),\n  size: PropTypes.oneOf(['sm', 'md', 'lg'])\n};\n\nStatusBullet.defaultProps = {\n  size: 'md',\n  color: 'default'\n};\n\nexport default StatusBullet;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst RouteWithLayout = props => {\n  const { layout: Layout, component: Component, ...rest } = props;\n\n  return (\n    <Route\n      {...rest}\n      render={matchProps => (\n        <Layout>\n          <Component {...matchProps} />\n        </Layout>\n      )}\n    />\n  );\n};\n\nRouteWithLayout.propTypes = {\n  component: PropTypes.any.isRequired,\n  layout: PropTypes.any.isRequired,\n  path: PropTypes.string\n};\n\nexport default RouteWithLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Link } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  }\n}));\n\nconst Footer = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography variant=\"body1\">\n        &copy;{' '}\n        <Link\n          component=\"a\"\n          href=\"#\"\n          target=\"_blank\"\n        >\n         COVID 19\n        </Link>\n        . 2020\n      </Typography>\n      <Typography variant=\"caption\">\n        Created with love for the environment. By Pomade Team\n      </Typography>\n    </div>\n  );\n};\n\nFooter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    minHeight: 'fit-content'\n  },\n  avatar: {\n    width: 60,\n    height: 60\n  },\n  name: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nconst Profile = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const user = {\n    name: 'Shen Zhi',\n    avatar: '/images/avatars/avatar_11.png',\n    bio: 'Brain Director'\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Avatar\n        alt=\"Person\"\n        className={classes.avatar}\n        component={RouterLink}\n        src={user.avatar}\n        to=\"/settings\"\n      />\n      <Typography\n        className={classes.name}\n        variant=\"h4\"\n      >\n        {user.name}\n      </Typography>\n      <Typography variant=\"body2\">{user.bio}</Typography>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Profile;\n","/* eslint-disable react/no-multi-comp */\n/* eslint-disable react/display-name */\nimport React, { forwardRef } from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { List, ListItem, Button, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: colors.blueGrey[800],\n    padding: '10px 8px',\n    justifyContent: 'flex-start',\n    textTransform: 'none',\n    letterSpacing: 0,\n    width: '100%',\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  icon: {\n    color: theme.palette.icon,\n    width: 24,\n    height: 24,\n    display: 'flex',\n    alignItems: 'center',\n    marginRight: theme.spacing(1)\n  },\n  active: {\n    color: theme.palette.primary.main,\n    fontWeight: theme.typography.fontWeightMedium,\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst CustomRouterLink = forwardRef((props, ref) => (\n  <div\n    ref={ref}\n    style={{ flexGrow: 1 }}\n  >\n    <RouterLink {...props} />\n  </div>\n));\n\nconst SidebarNav = props => {\n  const { pages, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <List\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {pages.map(page => (\n        <ListItem\n          className={classes.item}\n          disableGutters\n          key={page.title}\n        >\n          <Button\n            activeClassName={classes.active}\n            className={classes.button}\n            component={CustomRouterLink}\n            to={page.href}\n          >\n            <div className={classes.icon}>{page.icon}</div>\n            {page.title}\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nSidebarNav.propTypes = {\n  className: PropTypes.string,\n  pages: PropTypes.array.isRequired\n};\n\nexport default SidebarNav;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Divider, Drawer } from '@material-ui/core';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\n\nimport SettingsIcon from '@material-ui/icons/Settings';\n\n\nimport { SidebarNav } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: 240,\n    [theme.breakpoints.up('lg')]: {\n      marginTop: 64,\n      height: 'calc(100% - 64px)'\n    }\n  },\n  root: {\n    backgroundColor: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    padding: theme.spacing(2)\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  nav: {\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst Sidebar = props => {\n  const { open, variant, onClose, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const pages = [\n    {\n      title: 'Dashboard',\n      href: '/dashboard',\n      icon: <DashboardIcon />\n    },\n    {\n      title: 'Registered User',\n      href: '/user',\n      icon: <PeopleIcon />\n    },\n    {\n      title: 'Health Tips',\n      href: '/healthtips',\n      icon: <TextFieldsIcon />\n    },\n    {\n      title: 'Facilities',\n      href: '/facilities',\n      icon: <TextFieldsIcon />\n    },\n    {\n      title: 'Question and Answer',\n      href: '/questions',\n      icon: <SettingsIcon />\n    },\n    {\n      title: 'Registered Doctors',\n      href: '/doctors',\n      icon: <PeopleIcon />\n    }\n\n  \n  ];\n\n  return (\n    <Drawer\n      anchor=\"left\"\n      classes={{ paper: classes.drawer }}\n      onClose={onClose}\n      open={open}\n      variant={variant}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n      \n        <Divider className={classes.divider} />\n        <SidebarNav\n          className={classes.nav}\n          pages={pages}\n        />\n        \n      </div>\n    </Drawer>\n  );\n};\n\nSidebar.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  variant: PropTypes.string.isRequired\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Button, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: colors.grey[50]\n  },\n  media: {\n    paddingTop: theme.spacing(2),\n    height: 80,\n    textAlign: 'center',\n    '& > img': {\n      height: '100%',\n      width: 'auto'\n    }\n  },\n  content: {\n    padding: theme.spacing(1, 2)\n  },\n  actions: {\n    padding: theme.spacing(1, 2),\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nconst UpgradePlan = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.media}>\n        <img\n          alt=\"Upgrade to PRO\"\n          src=\"/images/undraw_resume_folder_2_arse.svg\"\n        />\n      </div>\n      <div className={classes.content}>\n        <Typography\n          align=\"center\"\n          gutterBottom\n          variant=\"h6\"\n        >\n          Upgrade to PRO\n        </Typography>\n        <Typography\n          align=\"center\"\n          variant=\"body2\"\n        >\n          Upgrade to Devias Kit PRO and get even more components\n        </Typography>\n      </div>\n      <div className={classes.actions}>\n        <Button\n          color=\"primary\"\n          component=\"a\"\n          href=\"https://devias.io/products/devias-kit-pro\"\n          variant=\"contained\"\n        >\n          Upgrade\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nUpgradePlan.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UpgradePlan;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { AppBar, Toolbar, Badge, Hidden, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    boxShadow: 'none'\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  signOutButton: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nconst Topbar = props => {\n  const { className, onSidebarOpen, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [notifications] = useState([]);\n\n  return (\n    <AppBar\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <img\n            alt=\"Logo\"\n            src=\"/images/logos/liv-logo-05.png\"\n            width=\"80px\"\n            height=\"60px\"\n          />\n        </RouterLink>\n        <div className={classes.flexGrow} />\n        <Hidden mdDown>\n          <IconButton color=\"inherit\">\n            <Badge\n              badgeContent={notifications.length}\n              color=\"primary\"\n              variant=\"dot\"\n            >\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <IconButton\n            className={classes.signOutButton}\n            color=\"inherit\"\n          >\n            <InputIcon />\n          </IconButton>\n        </Hidden>\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            onClick={onSidebarOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopbar.propTypes = {\n  className: PropTypes.string,\n  onSidebarOpen: PropTypes.func\n};\n\nexport default Topbar;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { useMediaQuery } from '@material-ui/core';\n\nimport { Sidebar, Topbar, Footer } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: 56,\n    height: '100%',\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: 64\n    }\n  },\n  shiftContent: {\n    paddingLeft: 240\n  },\n  content: {\n    height: '100%'\n  }\n}));\n\nconst Main = props => {\n  const { children } = props;\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'), {\n    defaultMatches: true\n  });\n\n  const [openSidebar, setOpenSidebar] = useState(false);\n\n  const handleSidebarOpen = () => {\n    setOpenSidebar(true);\n  };\n\n  const handleSidebarClose = () => {\n    setOpenSidebar(false);\n  };\n\n  const shouldOpenSidebar = isDesktop ? true : openSidebar;\n\n  return (\n    <div\n      className={clsx({\n        [classes.root]: true,\n        [classes.shiftContent]: isDesktop\n      })}\n    >\n      <Topbar onSidebarOpen={handleSidebarOpen} />\n      <Sidebar\n        onClose={handleSidebarClose}\n        open={shouldOpenSidebar}\n        variant={isDesktop ? 'persistent' : 'temporary'}\n      />\n      <main className={classes.content}>\n        {children}\n        <Footer />\n      </main>\n    </div>\n  );\n};\n\nMain.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Main;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { AppBar, Toolbar } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    boxShadow: 'none'\n  }\n}));\n\nconst Topbar = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      {...rest}\n      className={clsx(classes.root, className)}\n      color=\"primary\"\n      position=\"fixed\"\n    >\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <img\n            alt=\"Logo\"\n            src=\"/images/logos/logo--white.svg\"\n          />\n        </RouterLink>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Topbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\n\nimport { Topbar } from './components';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    paddingTop: 64,\n    height: '100%'\n  },\n  content: {\n    height: '100%'\n  }\n}));\n\nconst Minimal = props => {\n  const { children } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Topbar />\n      <main className={classes.content}>{children}</main>\n    </div>\n  );\n};\n\nMinimal.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\n\nexport default Minimal;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport MoneyIcon from '@material-ui/icons/Money';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.error.main,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  },\n  difference: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  differenceIcon: {\n    color: theme.palette.error.dark\n  },\n  differenceValue: {\n    color: theme.palette.error.dark,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Budget = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n        >\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\"\n            >\n              Monitored\n            </Typography>\n            <Typography variant=\"h3\">2,000</Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <MoneyIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <div className={classes.difference}>\n         \n          <Typography\n            className={classes.caption}\n            variant=\"caption\"\n          >\n            Since last month\n          </Typography>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nBudget.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Budget;\n","import uuid from 'uuid/v1';\n\nexport default [\n  {\n    id: uuid(),\n    ref: 'CDD1049',\n    amount: 30.5,\n    customer: {\n      name: 'Ekaterina Tankova'\n    },\n    createdAt: 1555016400000,\n    status: 'pending'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1048',\n    amount: 25.1,\n    customer: {\n      name: 'Cao Yu'\n    },\n    createdAt: 1555016400000,\n    status: 'delivered'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1047',\n    amount: 10.99,\n    customer: {\n      name: 'Alexa Richardson'\n    },\n    createdAt: 1554930000000,\n    status: 'refunded'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1046',\n    amount: 96.43,\n    customer: {\n      name: 'Anje Keizer'\n    },\n    createdAt: 1554757200000,\n    status: 'pending'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1045',\n    amount: 32.54,\n    customer: {\n      name: 'Clarke Gillebert'\n    },\n    createdAt: 1554670800000,\n    status: 'delivered'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1044',\n    amount: 16.76,\n    customer: {\n      name: 'Adam Denisov'\n    },\n    createdAt: 1554670800000,\n    status: 'delivered'\n  }\n];\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Tooltip,\n  TableSortLabel\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nimport mockData from './data';\nimport { StatusBullet } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 800\n  },\n  statusContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  status: {\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst statusColors = {\n  delivered: 'success',\n  pending: 'info',\n  refunded: 'danger'\n};\n\nconst LatestOrders = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [orders] = useState(mockData);\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={\n          <Button\n            color=\"primary\"\n            size=\"small\"\n            variant=\"outlined\"\n          >\n            New entry\n          </Button>\n        }\n        title=\"Latest Registered Users\"\n      />\n      <Divider />\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Order Ref</TableCell>\n                  <TableCell>Customer</TableCell>\n                  <TableCell sortDirection=\"desc\">\n                    <Tooltip\n                      enterDelay={300}\n                      title=\"Sort\"\n                    >\n                      <TableSortLabel\n                        active\n                        direction=\"desc\"\n                      >\n                        Date\n                      </TableSortLabel>\n                    </Tooltip>\n                  </TableCell>\n                  <TableCell>Status</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {orders.map(order => (\n                  <TableRow\n                    hover\n                    key={order.id}\n                  >\n                    <TableCell>{order.ref}</TableCell>\n                    <TableCell>{order.customer.name}</TableCell>\n                    <TableCell>\n                      {moment(order.createdAt).format('DD/MM/YYYY')}\n                    </TableCell>\n                    <TableCell>\n                      <div className={classes.statusContainer}>\n                        <StatusBullet\n                          className={classes.status}\n                          color={statusColors[order.status]}\n                          size=\"sm\"\n                        />\n                        {order.status}\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n      <Divider />\n      <CardActions className={classes.actions}>\n        <Button\n          color=\"primary\"\n          size=\"small\"\n          variant=\"text\"\n        >\n          View all <ArrowRightIcon />\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nLatestOrders.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestOrders;\n","import uuid from 'uuid/v1';\nimport moment from 'moment';\n\nexport default [\n  {\n    id: uuid(),\n    name: 'Dropbox',\n    imageUrl: '/images/products/product_1.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Medium Corporation',\n    imageUrl: '/images/products/product_2.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Slack',\n    imageUrl: '/images/products/product_3.png',\n    updatedAt: moment().subtract(3, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Lyft',\n    imageUrl: '/images/products/product_4.png',\n    updatedAt: moment().subtract(5, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'GitHub',\n    imageUrl: '/images/products/product_5.png',\n    updatedAt: moment().subtract(9, 'hours')\n  }\n];\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Button,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  IconButton\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nimport mockData from './data';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    padding: 0\n  },\n  image: {\n    height: 48,\n    width: 48\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst LatestProducts = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [products] = useState(mockData);\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        subtitle={`${products.length} in total`}\n        title=\"Latest facilities\"\n      />\n      <Divider />\n      <CardContent className={classes.content}>\n        <List>\n          {products.map((product, i) => (\n            <ListItem\n              divider={i < products.length - 1}\n              key={product.id}\n            >\n              <ListItemAvatar>\n                <img\n                  alt=\"Product\"\n                  className={classes.image}\n                  src={product.imageUrl}\n                />\n              </ListItemAvatar>\n              <ListItemText\n                primary={product.name}\n                secondary={`Updated ${product.updatedAt.fromNow()}`}\n              />\n              <IconButton\n                edge=\"end\"\n                size=\"small\"\n              >\n                <MoreVertIcon />\n              </IconButton>\n            </ListItem>\n          ))}\n        </List>\n      </CardContent>\n      <Divider />\n      <CardActions className={classes.actions}>\n        <Button\n          color=\"primary\"\n          size=\"small\"\n          variant=\"text\"\n        >\n          View all <ArrowRightIcon />\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nLatestProducts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestProducts;\n","import palette from 'theme/palette';\n\nexport const data = {\n  labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug'],\n  datasets: [\n    {\n      label: 'This year',\n      backgroundColor: palette.primary.main,\n      data: [18, 5, 19, 27, 29, 19, 20]\n    },\n    {\n      label: 'Last year',\n      backgroundColor: palette.neutral,\n      data: [11, 20, 12, 29, 30, 25, 13]\n    }\n  ]\n};\n\nexport const options = {\n  responsive: true,\n  maintainAspectRatio: false,\n  animation: false,\n  legend: { display: false },\n  cornerRadius: 20,\n  tooltips: {\n    enabled: true,\n    mode: 'index',\n    intersect: false,\n    borderWidth: 1,\n    borderColor: palette.divider,\n    backgroundColor: palette.white,\n    titleFontColor: palette.text.primary,\n    bodyFontColor: palette.text.secondary,\n    footerFontColor: palette.text.secondary\n  },\n  layout: { padding: 0 },\n  scales: {\n    xAxes: [\n      {\n        barThickness: 12,\n        maxBarThickness: 10,\n        barPercentage: 0.5,\n        categoryPercentage: 0.5,\n        ticks: {\n          fontColor: palette.text.secondary\n        },\n        gridLines: {\n          display: false,\n          drawBorder: false\n        }\n      }\n    ],\n    yAxes: [\n      {\n        ticks: {\n          fontColor: palette.text.secondary,\n          beginAtZero: true,\n          min: 0\n        },\n        gridLines: {\n          borderDash: [2],\n          borderDashOffset: [2],\n          color: palette.divider,\n          drawBorder: false,\n          zeroLineBorderDash: [2],\n          zeroLineBorderDashOffset: [2],\n          zeroLineColor: palette.divider\n        }\n      }\n    ]\n  }\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Bar } from 'react-chartjs-2';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Button\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nimport { data, options } from './chart';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  chartContainer: {\n    height: 400,\n    position: 'relative'\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst LatestSales = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={\n          <Button\n            size=\"small\"\n            variant=\"text\"\n          >\n            Last 7 days <ArrowDropDownIcon />\n          </Button>\n        }\n        title=\"Latest Assesment Taken\"\n      />\n      <Divider />\n      <CardContent>\n        <div className={classes.chartContainer}>\n          <Bar\n            data={data}\n            options={options}\n          />\n        </div>\n      </CardContent>\n      <Divider />\n      <CardActions className={classes.actions}>\n        <Button\n          color=\"primary\"\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview <ArrowRightIcon />\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nLatestSales.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestSales;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  Avatar,\n  LinearProgress\n} from '@material-ui/core';\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  },\n  progress: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst TasksProgress = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n        >\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\"\n            >\n              TOT. Q&A TAKEN\n            </Typography>\n            <Typography variant=\"h3\">75.5%</Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <InsertChartIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <LinearProgress\n          className={classes.progress}\n          value={75.5}\n          variant=\"determinate\"\n        />\n      </CardContent>\n    </Card>\n  );\n};\n\nTasksProgress.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TasksProgress;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.white,\n    color: theme.palette.primary.main,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  }\n}));\n\nconst TotalProfit = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n        >\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"inherit\"\n              gutterBottom\n              variant=\"body2\"\n            >\n              TOTAL FACILITIES\n            </Typography>\n            <Typography\n              color=\"inherit\"\n              variant=\"h3\"\n            >\n              23\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <AttachMoneyIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalProfit.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalProfit;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\n\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.success.main,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  },\n  difference: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  differenceIcon: {\n    color: theme.palette.success.dark\n  },\n  differenceValue: {\n    color: theme.palette.success.dark,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst TotalUsers = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n        >\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\"\n            >\n              TOTAL USERS\n            </Typography>\n            <Typography variant=\"h3\">1,600</Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <PeopleIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <div className={classes.difference}>\n         \n          <Typography\n            className={classes.caption}\n            variant=\"caption\"\n          >\n            Since last month\n          </Typography>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalUsers.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalUsers;\n","import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  IconButton,\n  Divider,\n  Typography\n} from '@material-ui/core';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  chartContainer: {\n    position: 'relative',\n    height: '300px'\n  },\n  stats: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  device: {\n    textAlign: 'center',\n    padding: theme.spacing(1)\n  },\n  deviceIcon: {\n    color: theme.palette.icon\n  }\n}));\n\nconst UsersByDevice = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        data: [63, 15, 22],\n        backgroundColor: [\n          theme.palette.primary.main,\n          theme.palette.error.main,\n          theme.palette.warning.main\n        ],\n        borderWidth: 8,\n        borderColor: theme.palette.white,\n        hoverBorderColor: theme.palette.white\n      }\n    ],\n    labels: ['Desktop', 'Tablet', 'Mobile']\n  };\n\n  const options = {\n    legend: {\n      display: false\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    layout: { padding: 0 },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.white,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary\n    }\n  };\n\n  const devices = [\n    {\n      title: 'Desktop',\n      value: '63',\n      icon: <LaptopMacIcon />,\n      color: theme.palette.primary.main\n    },\n    {\n      title: 'Tablet',\n      value: '15',\n      icon: <TabletMacIcon />,\n      color: theme.palette.error.main\n    },\n    {\n      title: 'Mobile',\n      value: '23',\n      icon: <PhoneIphoneIcon />,\n      color: theme.palette.warning.main\n    }\n  ];\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={\n          <IconButton size=\"small\">\n            <RefreshIcon />\n          </IconButton>\n        }\n        title=\"Users By Device\"\n      />\n      <Divider />\n      <CardContent>\n        <div className={classes.chartContainer}>\n          <Doughnut\n            data={data}\n            options={options}\n          />\n        </div>\n        <div className={classes.stats}>\n          {devices.map(device => (\n            <div\n              className={classes.device}\n              key={device.title}\n            >\n              <span className={classes.deviceIcon}>{device.icon}</span>\n              <Typography variant=\"body1\">{device.title}</Typography>\n              <Typography\n                style={{ color: device.color }}\n                variant=\"h2\"\n              >\n                {device.value}%\n              </Typography>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nUsersByDevice.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UsersByDevice;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\n\nimport {\n  Budget,\n  TotalUsers,\n  TasksProgress,\n  TotalProfit,\n  LatestSales,\n  UsersByDevice,\n  LatestProducts,\n  LatestOrders\n} from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  }\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        spacing={4}\n      >\n        <Grid\n          item\n          lg={3}\n          sm={6}\n          xl={3}\n          xs={12}\n        >\n          <Budget />\n        </Grid>\n        <Grid\n          item\n          lg={3}\n          sm={6}\n          xl={3}\n          xs={12}\n        >\n          <TotalUsers />\n        </Grid>\n        <Grid\n          item\n          lg={3}\n          sm={6}\n          xl={3}\n          xs={12}\n        >\n          <TasksProgress />\n        </Grid>\n        <Grid\n          item\n          lg={3}\n          sm={6}\n          xl={3}\n          xs={12}\n        >\n          <TotalProfit />\n        </Grid>\n        <Grid\n          item\n          lg={8}\n          md={12}\n          xl={9}\n          xs={12}\n        >\n          <LatestSales />\n        </Grid>\n        <Grid\n          item\n          lg={4}\n          md={6}\n          xl={3}\n          xs={12}\n        >\n          <UsersByDevice />\n        </Grid>\n        <Grid\n          item\n          lg={4}\n          md={6}\n          xl={3}\n          xs={12}\n        >\n          <LatestProducts />\n        </Grid>\n        <Grid\n          item\n          lg={8}\n          md={12}\n          xl={9}\n          xs={12}\n        >\n          <LatestOrders />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  },\n  content: {\n    paddingTop: 150,\n    textAlign: 'center'\n  },\n  image: {\n    marginTop: 50,\n    display: 'inline-block',\n    maxWidth: '100%',\n    width: 560\n  }\n}));\n\nconst NotFound = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        justify=\"center\"\n        spacing={4}\n      >\n        <Grid\n          item\n          lg={6}\n          xs={12}\n        >\n          <div className={classes.content}>\n            <Typography variant=\"h1\">\n              404: The page you are looking for isn’t here\n            </Typography>\n            <Typography variant=\"subtitle2\">\n              You either tried some shady route or you came here by mistake.\n              Whichever it is, try using the navigation\n            </Typography>\n            <img\n              alt=\"Under development\"\n              className={classes.image}\n              src=\"/images/undraw_page_not_found_su7k.svg\"\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default NotFound;\n","export const url = 'https://covid19africa.herokuapp.com/api/';\n\n","import React, {useEffect, useState} from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport { fetchAllRegisterUsers } from '../../actions/users'\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link } from 'react-router-dom'\nimport {url} from './../../api'\nimport axios from 'axios';\n\nconst UsersListTable = () => {\n  const ListUsers = useSelector(state => state.listOfUsers.regusers);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false)\n  //console.log(ListUsers)\n\n  useEffect(() => {\n      setLoading('true');\n      const onSuccess = () => {\n        setLoading(false)\n      }\n      const onError = () => {\n        setLoading(false)     \n      }\n    dispatch(fetchAllRegisterUsers(onSuccess,onError))\n  }, [dispatch])\n\n  function reslutpost (getCountryId){\n     axios.get(url+\"country/\"+getCountryId)\n    .then(res => {\n      console.log(res.data.name);\n      return res.data.name;\n    })\n}\n\n  return (\n\n        <PerfectScrollbar>\n          <div >\n          <MaterialTable\n        title=\"List of Register Users\"\n        columns={[\n          { title: \" ID\", field: \"id\" },\n          {\n            title: \"Country\",\n            field: \"country\",\n          },\n          \n          {\n            title: \"IMEI \",\n            field: \"imei\",\n            filtering: false\n          },\n          {\n            title: \"Created\",\n            field: \"created\",\n            filtering: false\n          },\n          {\n            title: \"Address(Lat. & Long)\",\n            field: \"address\",\n            filtering: false\n          },\n          {\n            title: \"Others\",\n            field: \"others\",\n            filtering: false\n          },\n          {\n            title: \"Action\",\n            field: \"actions\",\n            filtering: false,\n          },\n        ]}\n        isLoading={loading}\n        data={ListUsers.map((row) => ({\n          id: row.id,\n          country: reslutpost(row.country),          \n          imei: row.imei,\n          created: row.created,\n          address: row.lng + row.lad,\n          others: '--',\n         \n          actions: <Link to ={{ \n                        pathname: \"/\",  \n                        state: { getpatientlists:{row}}\n                        }} \n                        style={{ cursor: \"pointer\", color: \"blue\", \n                        fontStyle: \"bold\" }}>\n                          <Tooltip title=\"Enter Result\">\n                            <IconButton aria-label=\"Enter Result\" >\n                            <VisibilityIcon color=\"primary\"/>\n                          </IconButton>\n                          </Tooltip>\n                        </Link>\n\n            }))}\n        options={{\n        \n          headerStyle: {\n            backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n            margin: \"auto\"\n          },\n          filtering: true,          \n          exportButton: true,\n          \n        }}\n\n      />\n          </div>\n        </PerfectScrollbar>\n     \n  );\n};\n\n\n\nexport default UsersListTable;\n","import axios from \"axios\";\nimport { url as baseUrl } from \"../api\";\nimport * as ACTION_TYPES from \"./types\";\n\n\n/**\n * @Actions\n * CheckIn CRUD OPERATIONS\n * returns API response from server\n * =================================\n * fetchAll()\n * fetchById()\n * create()\n * update()\n * Delete()\n */\n\nexport const fetchAllRegisterUsers = (onSuccess, onError) => dispatch => {\n\n  axios\n    .get(`${baseUrl}regtracking`)\n    .then(response => {\n      dispatch({\n        type: ACTION_TYPES.FETCH_ALL_REGISTER_USERS,\n        payload: response.data\n      })\n      console.log(response.data)\n      onSuccess();\n    })\n    .catch(error => {\n      onError();\n      console.log(error)\n    });\n};\n","/**\n * @TYPES\n * ==============================================\n * \n */\n\n\n\n\n/**\n * @TYPES\n * ===============================================\n * QUESTIONS\n */\nexport const FETCH_ALL_QUESTIONS = 'FETCH_ALL_QUESTIONS'\nexport const FETCH_ALL_FACILITIES = 'FETCH_ALL_FACILITIES'\nexport const FETCH_ALL_REGISTER_USERS = 'FETCH_ALL_REGISTER_USERS'\nexport const FETCH_ALL_DOCTORS = 'FETCH_ALL_DOCTORS'\nexport const FETCH_ALL_HEALTHTIPS = 'FETCH_ALL_HEALTHTIPS'\nexport const CREATE_HEALTH_TYPE = 'CREATE_HEALTH_TYPE'\nexport const CREATE_HEALTH_TIPS = 'CREATE_HEALTH_TIPS'\nexport const DELETE_HEALTH_TIPS = 'DELETE_HEALTH_TIPS'\nexport const FETCH_ALL_HEALTHTIPSTYPE = 'FETCH_ALL_HEALTHTIPSTYPE'\nexport const UPDATE_HEALTH_TIPS_TYPE = 'UPDATE_HEALTH_TIPS_TYPE'\n\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst UsersToolbar = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.row}>\n        <span className={classes.spacer} />\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Add Facilities\n        </Button>\n      </div>\n      <div className={classes.row}>\n        \n      </div>\n    </div>\n  );\n};\n\n\n\nexport default UsersToolbar;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport UsersListTable  from './UsersListTable';\nimport UserToolBar from './UserToolBar';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst Users = () => {\n  const classes = useStyles();\n\n\n  return (\n    <div className={classes.root}>\n      <UserToolBar />\n      <div className={classes.content}>\n        <UsersListTable  />\n      </div>\n    </div>\n  );\n};\n\nexport default Users;\n","import React, {useEffect, useState} from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport { fetchAllQuestions } from './../../actions/questions'\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link } from 'react-router-dom'\n\nconst QuestionsListTable = () => {\n  const questionsList = useSelector(state => state.questions.list);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState('')\n  // useEffect(() => {\n  //   setLoading('true');\n  //   const onSuccess = () => {\n  //     setLoading(false)\n  //   }\n  //   const onError = () => {\n  //     setLoading(false)     \n  //   }\n  //   dispatch(fetchAllQuestions(onSuccess,onError));\n  // }, [fetchAllQuestions]); //componentDidMount\n  useEffect(() => {\n      setLoading('true');\n      const onSuccess = () => {\n        setLoading(false)\n      }\n      const onError = () => {\n        setLoading(false)     \n      }\n    dispatch(fetchAllQuestions(onSuccess,onError))\n  }, [dispatch])\n  //const questList = questionsList\n\n\n  return (\n\n        <PerfectScrollbar>\n          <div >\n          <MaterialTable\n        title=\"Questions List Table\"\n        columns={[\n          { title: \" ID\", field: \"Id\" },\n          {\n            title: \"Question\",\n            field: \"question\",\n          },\n          \n          {\n            title: \"Question Type \",\n            field: \"type\",\n            filtering: false\n          },\n          {\n            title: \"Option\",\n            field: \"option\",\n            filtering: false\n          },\n          {\n            title: \"Action\",\n            field: \"actions\",\n            filtering: false,\n          },\n        ]}\n        isLoading={loading}\n        data={questionsList.map((row) => ({\n          Id: row.id,\n          question: row.question,          \n          type: row.checkstatusanswermode,\n          option: row.options.length,\n         \n          actions: <Link to ={{ \n                        pathname: \"/collect-result\",  \n                        state: { getpatientlists:{row}}\n                        }} \n                        style={{ cursor: \"pointer\", color: \"blue\", \n                        fontStyle: \"bold\" }}>\n                          <Tooltip title=\"Enter Result\">\n                            <IconButton aria-label=\"Enter Result\" >\n                            <VisibilityIcon color=\"primary\"/>\n                          </IconButton>\n                          </Tooltip>\n                        </Link>\n\n            }))}\n        options={{\n        \n          headerStyle: {\n            backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n            margin: \"auto\"\n          },\n          filtering: true,          \n          exportButton: true,\n          \n        }}\n\n      />\n          </div>\n        </PerfectScrollbar>\n     \n  );\n};\n\n\n\nexport default QuestionsListTable;\n","import axios from \"axios\";\nimport { url as baseUrl } from \"../api\";\nimport * as ACTION_TYPES from \"./types\";\n\n\n/**\n * @Actions\n * CheckIn CRUD OPERATIONS\n * returns API response from server\n * =================================\n * fetchAll()\n * fetchById()\n * create()\n * update()\n * Delete()\n */\n\nexport const fetchAllQuestions = (onSuccess, onError) => dispatch => {\n\n  axios\n    .get(`${baseUrl}questions`)\n    .then(response => {\n      dispatch({\n        type: ACTION_TYPES.FETCH_ALL_QUESTIONS,\n        payload: response.data\n      })\n      console.log(response)\n      onSuccess();\n    })\n    .catch(error => {\n      onError();\n      console.log(error)\n    });\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\n\nimport { SearchInput } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst UsersToolbar = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.row}>\n        <span className={classes.spacer} />\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Add Question\n        </Button>\n      </div>\n      <div className={classes.row}>\n        <SearchInput\n          className={classes.searchInput}\n          placeholder=\"Search user\"\n        />\n      </div>\n    </div>\n  );\n};\n\n\n\nexport default UsersToolbar;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport QuestionsListTable  from './QuestionsListTable';\nimport QuestionsToolBar from './QuestionsToolBar';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst Questions = () => {\n  const classes = useStyles();\n\n\n  return (\n    <div className={classes.root}>\n      <QuestionsToolBar />\n      <div className={classes.content}>\n        <QuestionsListTable  />\n      </div>\n    </div>\n  );\n};\n\nexport default Questions;\n","import React, {useEffect, useState} from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport { fetchAllFacilities } from '../../actions/facilities'\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link } from 'react-router-dom'\n\nconst FacilitiesListTable = () => {\n  const facilitiesList = useSelector(state => state.facilities.list);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false)\n console.log(facilitiesList)\n  useEffect(() => {\n      setLoading('true');\n      const onSuccess = () => {\n        setLoading(false)\n      }\n      const onError = () => {\n        setLoading(false)     \n      }\n    dispatch(fetchAllFacilities(onSuccess,onError))\n  }, [dispatch])\n  //const questList = questionsList\n\n\n  return (\n\n        <PerfectScrollbar>\n          <div >\n          <MaterialTable\n        title=\"Facilities by Country\"\n        columns={[\n          { title: \" ID\", field: \"Id\" },\n          {\n            title: \"Country\",\n            field: \"country\",\n          },\n          \n          {\n            title: \"Contact Number\",\n            field: \"contact\",\n            filtering: false\n          },\n          {\n            title: \"Email\",\n            field: \"email\",\n            filtering: false\n          },\n          {\n            title: \"Address\",\n            field: \"address\",\n            filtering: false\n          },\n          {\n            title: \"Others\",\n            field: \"others\",\n            filtering: false\n          },\n          {\n            title: \"Action\",\n            field: \"actions\",\n            filtering: false,\n          },\n        ]}\n        isLoading={loading}\n        data={facilitiesList.map((row) => ({\n          Id: row.id,\n          country: row.name,          \n          contact: row.contact,\n          email: '--',\n          address: '--',\n          others: '--',\n         \n          actions: <Link to ={{ \n                        pathname: \"/\",  \n                        state: { getpatientlists:{row}}\n                        }} \n                        style={{ cursor: \"pointer\", color: \"blue\", \n                        fontStyle: \"bold\" }}>\n                          <Tooltip title=\"Enter Result\">\n                            <IconButton aria-label=\"Enter Result\" >\n                            <VisibilityIcon color=\"primary\"/>\n                          </IconButton>\n                          </Tooltip>\n                        </Link>\n\n            }))}\n        options={{\n        \n          headerStyle: {\n            backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n            margin: \"auto\"\n          },\n          filtering: true,          \n          exportButton: true,\n          \n        }}\n\n      />\n          </div>\n        </PerfectScrollbar>\n     \n  );\n};\n\n\n\nexport default FacilitiesListTable;\n","import axios from \"axios\";\nimport { url as baseUrl } from \"../api\";\nimport * as ACTION_TYPES from \"./types\";\n\n\n/**\n * @Actions\n * CheckIn CRUD OPERATIONS\n * returns API response from server\n * =================================\n * fetchAll()\n * fetchById()\n * create()\n * update()\n * Delete()\n */\n\nexport const fetchAllFacilities = (onSuccess, onError) => dispatch => {\n\n  axios\n    .get(`${baseUrl}countries`)\n    .then(response => {\n      dispatch({\n        type: ACTION_TYPES.FETCH_ALL_FACILITIES,\n        payload: response.data\n      })\n      console.log(response)\n      onSuccess();\n    })\n    .catch(error => {\n      onError();\n      console.log(error)\n    });\n};\n","import React, {useState, useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport {\n    Card,\n    CardContent,\n    CardActions,\n    Divider,\n    Grid,\n    TextField\n  } from '@material-ui/core';\n  import axios from 'axios';\n  import {url} from './../../api'\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  \n});\n\nconst useStyles = makeStyles(theme => ({\n    root: {},\n    row: {\n      height: '42px',\n      display: 'flex',\n      alignItems: 'center',\n      marginTop: theme.spacing(1)\n    },\n    spacer: {\n      flexGrow: 1\n    },\n    \n    input: {\n        display: 'none',\n      },\n  }));\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\n\nexport default function AddFacility(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [data, setData] = useState([]);\n \n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        url+'countries',\n      );\n      setData(result.data);\n    };\n \n    fetchData();\n  });\n \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const [values, setValues] = useState({});\n\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n\n\n  return (\n    <div>\n\n      <div className={classes.row}>\n        <span className={classes.spacer} />\n        \n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={handleClickOpen}\n        >\n          Add Facility\n        </Button>\n      </div>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}\n            fullWidth='false'\n            maxWidth='sm'\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        Add Facility\n        </DialogTitle>\n        <DialogContent dividers>\n        <Card>\n            <form\n                autoComplete=\"off\"\n                noValidate\n            >\n               \n                <CardContent>\n                <Grid\n                    container\n                    spacing={3}\n                >\n                    <Grid\n                item\n                md={6}\n                xs={12}\n                >\n                <TextField\n                    fullWidth\n                    label=\"Select Country\"\n                    margin=\"dense\"\n                    name=\"country\"\n                    onChange={handleChange}\n                    required\n                    select\n                    // eslint-disable-next-line react/jsx-sort-props\n                    SelectProps={{ native: true }}\n                    value={values.state}\n                    variant=\"outlined\"\n                >\n                    <option ></option>\n                    {data.map(option => (\n                    <option\n                        key={option.id}\n                        value={option.id}\n                    >\n                        {option.name}\n                    </option>\n                    ))}\n                </TextField>\n                </Grid>\n                <Grid\n                    item\n                    md={6}\n                    xs={12}\n                >\n                <TextField\n                    fullWidth\n                    helperText=\"Please enter contact phone number\"\n                    label=\"Contact Number\"\n                    margin=\"dense\"\n                    name=\"contact\"\n                    onChange={handleChange}\n                    required\n                    value={values.contact}\n                    variant=\"outlined\"\n                />\n                </Grid>\n                <Grid\n                item\n                md={6}\n                xs={12}\n                >\n                <TextField\n                    fullWidth\n                    label=\"Address\"\n                    helperText=\"Optional\"\n                    margin=\"dense\"\n                    name=\"address\"\n                    onChange={handleChange}\n                    required\n                    value={values.address}\n                    variant=\"outlined\"\n                />\n                </Grid>\n                <Grid\n                item\n                md={6}\n                xs={12}\n                >\n                <TextField\n                    fullWidth\n                    label=\"Email Address\"\n                    helperText=\"optional\"\n                    margin=\"dense\"\n                    name=\"email\"\n                    onChange={handleChange}\n                    required\n                    value={values.email}\n                    variant=\"outlined\"\n                />\n                </Grid>\n\n                </Grid>\n                </CardContent>\n                <Divider />\n                <CardActions>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                    >\n                        Save\n                    </Button>\n                </CardActions>\n            </form>\n         </Card>\n        </DialogContent>\n\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport FacilitiesListTable  from './FacilitiesListTable';\nimport AddFacility from './AddFacility'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst Facilities = () => {\n  const classes = useStyles();\n\n\n  return (\n    <div className={classes.root}>\n      <AddFacility />\n      <div className={classes.content}>\n        <FacilitiesListTable  />\n      </div>\n    </div>\n  );\n};\n\nexport default Facilities;\n","import React, {useEffect, useState} from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport { fetchAllDoctors } from '../../actions/doctors'\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link } from 'react-router-dom'\n\nconst DoctorsListTable = () => {\n  const doctorsList = useSelector(state => state.doctors.list);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false)\n console.log(doctorsList)\n  useEffect(() => {\n      setLoading('true');\n      const onSuccess = () => {\n        setLoading(false)\n      }\n      const onError = () => {\n        setLoading(false)     \n      }\n    dispatch(fetchAllDoctors(onSuccess,onError))\n  }, [dispatch])\n  //const questList = questionsList\n\n\n  return (\n\n        <PerfectScrollbar>\n          <div >\n          <MaterialTable\n        title=\"List of Doctors\"\n        columns={[\n          { title: \" ID\", field: \"Id\" },\n          {\n            title: \"Name\",\n            field: \"name\",\n          },\n          \n          {\n            title: \"Contact \",\n            field: \"contact\",\n            filtering: false\n          },\n          {\n            title: \"Second Contact\",\n            field: \"contact2\",\n            filtering: false\n          },\n          \n        ]}\n        isLoading={loading}\n        data={doctorsList.map((row) => ({\n          Id: row.id,\n          name: row.surname + row.firstname,          \n          conatct1: row.contact1,\n          contact2: row.contact2,\n\n          actions: <Link to ={{ \n                        pathname: \"/\",  \n                        state: { getpatientlists:{row}}\n                        }} \n                        style={{ cursor: \"pointer\", color: \"blue\", \n                        fontStyle: \"bold\" }}>\n                          <Tooltip title=\"Enter Result\">\n                            <IconButton aria-label=\"Enter Result\" >\n                            <VisibilityIcon color=\"primary\"/>\n                          </IconButton>\n                          </Tooltip>\n                        </Link>\n\n            }))}\n        options={{\n        \n          headerStyle: {\n            backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n            margin: \"auto\"\n          },\n          filtering: true,          \n          exportButton: true,\n          \n        }}\n\n      />\n          </div>\n        </PerfectScrollbar>\n     \n  );\n};\n\n\n\nexport default DoctorsListTable;\n","import axios from \"axios\";\nimport { url as baseUrl } from \"../api\";\nimport * as ACTION_TYPES from \"./types\";\n\n\n/**\n * @Actions\n * CheckIn CRUD OPERATIONS\n * returns API response from server\n * =================================\n * fetchAll()\n * fetchById()\n * create()\n * update()\n * Delete()\n */\n\nexport const fetchAllDoctors = (onSuccess, onError) => dispatch => {\n\n  axios\n    .get(`${baseUrl}doctors`)\n    .then(response => {\n      dispatch({\n        type: ACTION_TYPES.FETCH_ALL_DOCTORS,\n        payload: response.data\n      })\n      console.log(response)\n      onSuccess();\n    })\n    .catch(error => {\n      onError();\n      console.log(error)\n    });\n};\n","import React, {useState, useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport {\n    Card,\n    CardContent,\n    CardActions,\n    Divider,\n    Grid,\n    TextField\n  } from '@material-ui/core';\n  import axios from 'axios';\n  import {url} from './../../api'\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  \n});\n\nconst useStyles = makeStyles(theme => ({\n    root: {},\n    row: {\n      height: '42px',\n      display: 'flex',\n      alignItems: 'center',\n      marginTop: theme.spacing(1)\n    },\n    spacer: {\n      flexGrow: 1\n    },\n    \n    input: {\n        display: 'none',\n      },\n  }));\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\n\nexport default function AddFacility(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [data, setData] = useState([]);\n \n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        url+'countries',\n      );\n      setData(result.data);\n    };\n \n    fetchData();\n  });\n \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const [values, setValues] = useState({});\n\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n\n\n  return (\n    <div>\n\n      <div className={classes.row}>\n        <span className={classes.spacer} />\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={handleClickOpen}\n        >\n          Add Doctor\n        </Button>\n      </div>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}\n            fullWidth='false'\n            maxWidth='sm'\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        Add Doctor\n        </DialogTitle>\n        <DialogContent dividers>\n        <Card>\n            <form\n                autoComplete=\"off\"\n                noValidate\n            >\n               \n                <CardContent>\n                <Grid\n                    container\n                    spacing={3}\n                >\n                <Grid\n                    item\n                    md={6}\n                    xs={12}\n                >\n                <TextField\n                    fullWidth\n                    helperText=\"First name\"\n                    label=\"First Name\"\n                    margin=\"dense\"\n                    name=\"firstname\"\n                    onChange={handleChange}\n                    required\n                    value={values.firstname}\n                    variant=\"outlined\"\n                />\n                </Grid>\n                <Grid\n                    item\n                    md={6}\n                    xs={12}\n                >\n                <TextField\n                    fullWidth\n                    helperText=\"Last Name\"\n                    label=\"Last name\"\n                    margin=\"dense\"\n                    name=\"lastname\"\n                    onChange={handleChange}\n                    required\n                    value={values.lastname}\n                    variant=\"outlined\"\n                />\n                </Grid>\n                <Grid\n                item\n                md={6}\n                xs={12}\n                >\n                <TextField\n                    fullWidth\n                    label=\"Select Country\"\n                    margin=\"dense\"\n                    name=\"country\"\n                    onChange={handleChange}\n                    required\n                    select\n                    // eslint-disable-next-line react/jsx-sort-props\n                    SelectProps={{ native: true }}\n                    value={values.state}\n                    variant=\"outlined\"\n                >\n                    <option ></option>\n                    {data.map(option => (\n                    <option\n                        key={option.id}\n                        value={option.id}\n                    >\n                        {option.name}\n                    </option>\n                    ))}\n                </TextField>\n                </Grid>\n                <Grid\n                    item\n                    md={6}\n                    xs={12}\n                >\n                <TextField\n                    fullWidth\n                    helperText=\"Please enter contact phone number\"\n                    label=\"Contact Number\"\n                    margin=\"dense\"\n                    name=\"contact\"\n                    onChange={handleChange}\n                    required\n                    value={values.contact}\n                    variant=\"outlined\"\n                />\n                </Grid>\n                <Grid\n                item\n                md={6}\n                xs={12}\n                >\n                <TextField\n                    fullWidth\n                    label=\"Address\"\n                    helperText=\"Optional\"\n                    margin=\"dense\"\n                    name=\"address\"\n                    onChange={handleChange}\n                    required\n                    value={values.address}\n                    variant=\"outlined\"\n                />\n                </Grid>\n                <Grid\n                item\n                md={6}\n                xs={12}\n                >\n                <TextField\n                    fullWidth\n                    label=\"Email Address\"\n                    helperText=\"optional\"\n                    margin=\"dense\"\n                    name=\"email\"\n                    onChange={handleChange}\n                    required\n                    value={values.email}\n                    variant=\"outlined\"\n                />\n                </Grid>\n                <Grid\n                    item\n                    md={6}\n                    xs={12}\n                >\n                <TextField\n                    fullWidth\n                    helperText=\"Skype ID\"\n                    label=\"Skype ID\"\n                    margin=\"dense\"\n                    name=\"skpy\"\n                    onChange={handleChange}\n                    required\n                    value={values.lastname}\n                    variant=\"outlined\"\n                />\n                </Grid>\n                <Grid\n                    item\n                    md={6}\n                    xs={12}\n                >\n                <TextField\n                    fullWidth\n                    helperText=\"WhatsApp\"\n                    label=\"WhatsApp\"\n                    margin=\"dense\"\n                    name=\"whatsapp\"\n                    onChange={handleChange}\n                    required\n                    value={values.whatsapp}\n                    variant=\"outlined\"\n                />\n                </Grid>\n                </Grid>\n                </CardContent>\n                <Divider />\n                <CardActions>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                    >\n                        Save\n                    </Button>\n                </CardActions>\n            </form>\n         </Card>\n        </DialogContent>\n\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport DoctorsListTable  from './DoctorsListTable';\nimport AddDoctor from './AddDoctor';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst Doctors = () => {\n  const classes = useStyles();\n\n\n  return (\n    <div className={classes.root}>\n      <AddDoctor />\n      <div className={classes.content}>\n        <DoctorsListTable  />\n      </div>\n    </div>\n  );\n};\n\nexport default Doctors;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useDispatch } from 'react-redux';\nimport { deleteHealthTips } from './../../../actions/healthtips';\nimport { useHistory } from \"react-router-dom\";\n\n\nexport default function AlertDialog(props) {\n    let history = useHistory(); //history.push(\"/healthtips\");\nconst dispatch = useDispatch()\nconst  msg = () => {\n        props.handleClose()\n        history.push(\"/healthtips\");\n    } \n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={props.handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to delete this Health Tips?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.tips.title}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={()=>{\n              dispatch(deleteHealthTips(props.tips.id, msg))\n              \n              }} color=\"secondary\">\n            Yes\n          </Button>\n          <Button onClick={props.handleClose} color=\"primary\" autoFocus>\n            No\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport { url as baseUrl } from \"../api\";\nimport * as ACTION_TYPES from \"./types\";\nimport { toast } from \"react-toastify\";\n\n\n/**\n * @Actions\n * CheckIn CRUD OPERATIONS\n * returns API response from server\n * =================================\n * fetchAll()\n * fetchById()\n * create()\n * update()\n * Delete()\n */\n\nexport const fetchAllFHealthTips = (onSuccess, onError) => dispatch => {\n\n  axios\n    .get(`${baseUrl}healthtips`)\n    .then(response => {\n      dispatch({\n        type: ACTION_TYPES.FETCH_ALL_HEALTHTIPS,\n        payload: response.data\n      })\n      console.log(response)\n      onSuccess();\n    })\n    .catch(error => {\n      onError();\n      console.log(error)\n    });\n};\nexport const fetchAllHealthTipsType = (onSuccess, onError) => dispatch => {\n\n    axios\n      .get(`${baseUrl}healthtiptypes`)\n      .then(response => {\n        dispatch({\n          type: ACTION_TYPES.FETCH_ALL_HEALTHTIPSTYPE,\n          payload: response.data\n        })\n        console.log(response)\n        onSuccess();\n      })\n      .catch(error => {\n        onError();\n        console.log(error)\n      });\n  };\nexport const createHealthType = (data,onSuccess, onError ) => dispatch => {\n      \n    axios\n      .post(`${baseUrl}healthtiptypes`, data)\n      .then(response => {\n        dispatch({\n          type: ACTION_TYPES.CREATE_HEALTH_TYPE,\n          payload: response.data\n        });\n        onSuccess()\n        toast.success(\"Health Tip Type is added successfully!\");\n      })\n      .catch(error =>{       \n        onError()\n        toast.error(\"Something went wrong, please try again\");\n        \n      });\n    \n  };\n  export const createHealthTips = (data,onSuccess, onError ) => dispatch => {\n      console.log(data)\n    axios\n      .post(`${baseUrl}healthtips`, data)\n      .then(response => {\n        dispatch({\n          type: ACTION_TYPES.CREATE_HEALTH_TIPS,\n          payload: response.data\n        });\n        onSuccess()\n        toast.success(\"Health Tip Type is added successfully!\");\n      })\n      .catch(error =>{       \n        onError()\n        toast.error(\"Something went wrong, please try again\");\n        console.log(error)\n      });\n    \n  };\n  export const updateHealthTipsType = (data,id,onSuccess, onError ) => dispatch => {\n    console.log(data)\n  axios\n    .put(`${baseUrl}healthtiptype/${id}`, data)\n    .then(response => {\n      dispatch({\n        type: ACTION_TYPES.UPDATE_HEALTH_TIPS_TYPE,\n        payload: response.data\n      });\n      onSuccess()\n      toast.success(\"Health Tip Type is added successfully!\");\n    })\n    .catch(error =>{       \n      onError()\n      toast.error(\"Something went wrong, please try again\");\n      console.log(error)\n    });\n  \n};\nexport const updateHealthTips = (data,id,onSuccess, onError ) => dispatch => {\n    console.log(data)\n  axios\n    .put(`${baseUrl}healthtip/${id}`, data)\n    .then(response => {\n      dispatch({\n        type: ACTION_TYPES.UPDATE_HEALTH_TIPS_TYPE,\n        payload: response.data\n      });\n      onSuccess()\n      toast.success(\"Health Tip Type is added successfully!\");\n    })\n    .catch(error =>{       \n      onError()\n      toast.error(\"Something went wrong, please try again\");\n      console.log(error)\n    });\n  \n};\n  export const deleteHealthTips = (id, msg) => dispatch => {\n    console.log(id)\n  axios\n    .delete(`${baseUrl}healthtip/${id}`)\n    .then(response => {\n      dispatch({\n        type: ACTION_TYPES.DELETE_HEALTH_TIPS,\n        payload: response.data\n      });\n      toast.success(\"Health Tip deleted successfully!\");\n      msg()\n    })\n    .catch(error =>{       \n      toast.error(\"Something went wrong, please try again\");\n      console.log(error)\n      msg();\n    });\n  \n};\nexport const deleteHealthTipsType = (id, msg) => dispatch => {\n    console.log(id)\n  axios\n    .delete(`${baseUrl}healthtiptype/${id}`)\n    .then(response => {\n      dispatch({\n        type: ACTION_TYPES.DELETE_HEALTH_TIPS,\n        payload: response.data\n      });\n      toast.success(\"Health Tip Type deleted successfully!\");\n      msg()\n    })\n    .catch(error =>{       \n      toast.error(\"Something went wrong, please try again\");\n      console.log(error)\n      msg();\n    });\n  \n};","import React, {useState, useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport {\n    Card,\n    CardContent,\n    CardActions,\n    Divider,\n    Grid,\n    TextField\n  } from '@material-ui/core';\nimport axios from 'axios';\nimport {url} from './../../../api'\nimport { Spinner } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { updateHealthTips } from './../../../actions/healthtips'\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  \n});\n\nconst useStyles = makeStyles(theme => ({\n    root: {},\n    row: {\n      height: '42px',\n      display: 'flex',\n      alignItems: 'center',\n      marginTop: theme.spacing(1)\n    },\n    spacer: {\n      flexGrow: 1\n    },\n    \n    input: {\n        display: 'none',\n      },\n  }));\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\n\nconst AddHealthTips = (props) =>{\n  const classes = useStyles();\n  const [values, setValues] = useState({ \"title\": \"\",\n                                        \"content\": \"\",\n                                        \"imagepath\": \"\",\n                                        \"healthtiptype\":1,\n                                        \"language\": 1\n                                        });\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false)\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        url+'healthtiptypes',\n      );\n      setData(result.data);\n    };\n \n    fetchData();\n  }, []);\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const savehealthtip = e => {\n    e.preventDefault()\n    const onSuccess = () => {\n        setLoading(false);\n        props.handleClose()       \n      }\n      const onError = () => {\n        setLoading(false); \n        props.handleClose()       \n      }\n      props.tips.title = values.title !== props.tips.title ? values.title : props.tips.title ;\n      props.tips.content = values.content !== props.tips.content ? values.title : props.tips.content ;\n      props.tips.healthtiptype = values.healthtiptype !== props.tips.healthtiptype ? values.healthtiptype : props.tips.healthtiptype ;\n      props.tips.imagepath = values.imagepath !== props.tips.imagepath ? values.imagepath :props.tips.imagepath ;\n      props.tips.language = values.language !== props.tips.language ? values.language :props.tips.language ;\n      props.updateHealthTips(props.tips,props.tips.id, onSuccess,onError)\n  }\n\n\n\n  return (\n    <div>\n\n      <Dialog onClose={props.handleClose} aria-labelledby=\"customized-dialog-title\" open={props.open}\n            fullWidth='false'\n            maxWidth='sm'\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={props.handleClose}>\n          Update Health Tips\n        </DialogTitle>\n        <DialogContent dividers>\n        <Card>\n            <form\n                autoComplete=\"off\"\n                noValidate\n                onSubmit={savehealthtip}\n            >\n               \n                <CardContent>\n\n                <Grid\n                    container\n                    spacing={3}\n                >\n                <Grid\n                    item\n                    md={12}\n                    xs={12}\n                    >\n                    <TextField\n                        fullWidth\n                    \n                        label=\"Title\"\n                        margin=\"dense\"\n                        name=\"title\"\n                        onChange={handleChange}\n                        required\n                        defaultValue={props.tips.title}\n                        variant=\"outlined\"\n                    />\n                     \n                    </Grid>\n                    <Grid\n                    item\n                    md={12}\n                    xs={12}\n                    >\n                    <TextField\n                        fullWidth\n                        label=\"Select Type\"\n                        margin=\"dense\"\n                        name=\"healthtiptype\"\n                        onChange={handleChange}\n                        required\n                        select\n                       \n                        SelectProps={{ native: true }}\n                        defaultValue={props.tips.healthtiptype}\n                        variant=\"outlined\"\n                    >\n                        <option > </option>\n                        {data.map(option => (\n                            <option\n                                key={option.id}\n                                value={option.id}\n                            >\n                                {option.name}\n                            </option>\n                            ))}\n                    </TextField>\n                    </Grid>\n                    <Grid\n                    item\n                    md={12}\n                    xs={12}\n                    >\n                    <TextField\n                        fullWidth\n                        helperText=\"Please enter the health tips here \"\n                        margin=\"dense\"\n                        name=\"content\"\n                        onChange={handleChange}\n                        required\n                        id=\"filled-textarea\"\n                        label=\"Health Tip Content \"\n                        placeholder=\"Please enter content here \"\n                        multiline\n                        variant=\"filled\"\n                        defaultValue={props.tips.content}\n                    />\n                    </Grid>\n                    <Grid\n                    item\n                    md={6}\n                    xs={12}\n                    >\n                     <input\n                            accept=\"image/*\"\n                            className={classes.input}\n                            id=\"imagepath\"\n                            multiple\n                            type=\"file\"\n                            onChange={handleChange}\n                            defaultValue={props.tips.imagepath}\n                        />\n                        <label htmlFor=\"contained-button-file\">\n                            <Button variant=\"contained\" color=\"default\" component=\"span\">\n                                Upload image\n                            </Button>\n                        </label>\n                    </Grid>\n                 \n                </Grid>\n                </CardContent>\n                <Divider />\n                <CardActions>\n                {loading ? <Spinner /> : \"\"} <br/>\n                    <Button\n                        type=\"submit\"\n                        color=\"primary\"\n                        variant=\"contained\"\n                    >\n                        Update\n                    </Button>\n                </CardActions>\n            </form>\n         </Card>\n        </DialogContent>\n\n      </Dialog>\n    </div>\n  );\n}\n\nexport default connect(null, { updateHealthTips })(AddHealthTips);","import React, {useEffect, useState} from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport { fetchAllFHealthTips } from '../../actions/healthtips'\nimport { FaPencilAlt, FaTrashAlt } from 'react-icons/fa';\nimport {\n  Menu,\n  MenuList,\n  MenuButton,\n  MenuItem,\n} from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\nimport ModalDelete from './ActionModal/ModalDelete';\nimport ModalEdit from './ActionModal/ModalEdit';\n\n\nconst FacilitiesListTable = (props) => {\n  console.log(props)\n  const healthtipsList = useSelector(state => state.healthtips.list);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false)\n  const [collectmodal, setcollectmodal] = useState([])\n  const [open, setOpen] = useState(false);\n  const handleClose = () => {setOpen(false)};\n  const [open2, setOpen2] = useState(false);\n  const handleClose2 = () => {setOpen2(false)};\n  console.log(healthtipsList)\n  useEffect(() => {\n      setLoading('true');\n      const onSuccess = () => {\n        setLoading(false)\n      }\n      const onError = () => {\n        setLoading(false)     \n      }\n    dispatch(fetchAllFHealthTips(onSuccess,onError))\n  }, [dispatch])\n  //const questList = questionsList\n\nconst editDetail = (detail) =>{\n  console.log(detail)\n  setOpen2(true);\n  setcollectmodal({...collectmodal, ...detail});\n}\nconst deleteDetail = (detail) =>{\n  setOpen(true);\n  setcollectmodal({...collectmodal, ...detail});\n}\n\n\nconst actionButtons = (e) =>{\n\n  return (\n\n      <Menu>\n          <MenuButton style={{ backgroundColor:\"#3F51B5\", fontSize:\"16px\", color:\"#fff\", border:\"2px solid #3F51B5\", borderRadius:\"4px\", width:\"80px\", heigth:\"80px\"}}>\n            Actions <span aria-hidden>▾</span>\n          </MenuButton>\n          <MenuList style={{hover:\"#eee\"}}>\n            <MenuItem onSelect={() => editDetail(e)}><FaPencilAlt color=\"primary\" size=\"15px\"/>{\" \"} Edit</MenuItem>                         \n            <MenuItem onSelect={() => deleteDetail(e)}><FaTrashAlt color=\"primary\" size=\"15px\"/>{\" \"}Delete</MenuItem>\n             \n          </MenuList>\n      </Menu>\n      )\n\n}\n  return (\n\n        <PerfectScrollbar>\n          <div >\n          <MaterialTable\n        title=\"List of Health Tips\"\n        columns={[\n          { title: \" ID\", field: \"Id\",filtering: false },\n          {\n            title: \"Title\",\n            field: \"title\",\n            filtering: false\n          },\n          \n          {\n            title: \"Content\",\n            field: \"content\",\n            filtering: false\n          },\n          {\n            title: \"Type\",\n            field: \"type\",\n            filtering: false\n          },\n          {\n            title: \"Action\",\n            field: \"actions\",\n            filtering: false,\n          },\n        ]}\n        isLoading={loading}\n        data={healthtipsList.map((row) => ({\n          Id: row.id,\n          title: row.title,          \n          content: row.content,\n          type: row.healthtiptype===1 ? \"General Health Tips\" : \"Covid 19 \",\n          actions: actionButtons(row)\n\n            }))}\n        options={{\n        \n          headerStyle: {\n            backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n            margin: \"auto\"\n          },\n          filtering: true,          \n          exportButton: true,\n          \n        }}\n\n      />\n      <ModalDelete open={open} handleClose={handleClose} tips={collectmodal} />\n      <ModalEdit open={open2} handleClose={handleClose2} tips={collectmodal} />\n      </div>\n    </PerfectScrollbar>\n     \n  );\n  \n};\n\n\n\n\nexport default FacilitiesListTable;\n","import React, {useState, useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport {\n    Card,\n    CardContent,\n    CardActions,\n    Divider,\n    Grid,\n    TextField\n  } from '@material-ui/core';\nimport axios from 'axios';\nimport {url} from './../../api'\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Spinner } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport {createHealthTips} from './../../actions/healthtips'\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  \n});\n\nconst useStyles = makeStyles(theme => ({\n    root: {},\n    row: {\n      height: '42px',\n      display: 'flex',\n      alignItems: 'center',\n      marginTop: theme.spacing(1)\n    },\n    spacer: {\n      flexGrow: 1\n    },\n    \n    input: {\n        display: 'none',\n      },\n  }));\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\n\nconst AddHealthTips = (props) =>{\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [values, setValues] = useState({ \"title\": \"\",\n                                        \"content\": \"\",\n                                        \"imagepath\": \"\",\n                                        \"healthtiptype\": \"\",\n                                        \"language\": 1\n                                        });\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false)\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        url+'healthtiptypes',\n      );\n      setData(result.data);\n    };\n \n    fetchData();\n  });\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n    console.log(values)\n  };\n\n  const savehealthtip = e => {\n    e.preventDefault()\n    console.log(values)\n    const onSuccess = () => {\n        setLoading(false);\n        handleClose()       \n      }\n      const onError = () => {\n        setLoading(false); \n        handleClose()       \n      }\n      props.createHealthTips(values, onSuccess,onError)\n  }\n\n\n\n  return (\n    <div>\n        <ToastContainer autoClose={3000} hideProgressBar />\n      <div className={classes.row}>\n      <span className={classes.spacer} />\n      <Button color=\"default\"\n          variant=\"contained\" styel={{ margin: \"10px \", paddingRight: \"5px\", }}>\n              <Link to ='/healthtipstype'>Health Tips Type</Link>\n        </Button>\n        <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={handleClickOpen}\n            >\n          Add Health Tips\n        </Button>\n      </div>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}\n            fullWidth='false'\n            maxWidth='sm'\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Add Health Tips\n        </DialogTitle>\n        <DialogContent dividers>\n        <Card>\n            <form\n                autoComplete=\"off\"\n                noValidate\n                onSubmit={savehealthtip}\n            >\n               \n                <CardContent>\n\n                <Grid\n                    container\n                    spacing={3}\n                >\n                <Grid\n                    item\n                    md={12}\n                    xs={12}\n                    >\n                    <TextField\n                        fullWidth\n                    \n                        label=\"Title\"\n                        margin=\"dense\"\n                        name=\"title\"\n                        onChange={handleChange}\n                        required\n                        value={values.title}\n                        variant=\"outlined\"\n                    />\n                     \n                    </Grid>\n                    <Grid\n                    item\n                    md={12}\n                    xs={12}\n                    >\n                    <TextField\n                        fullWidth\n                        label=\"Select Type\"\n                        margin=\"dense\"\n                        name=\"healthtiptype\"\n                        onChange={handleChange}\n                        required\n                        select\n                       \n                        SelectProps={{ native: true }}\n                        value={values.healthtiptype}\n                        variant=\"outlined\"\n                    >\n                        <option > </option>\n                        {data.map(option => (\n                            <option\n                                key={option.id}\n                                value={option.id}\n                            >\n                                {option.name}\n                            </option>\n                            ))}\n                    </TextField>\n                    </Grid>\n                    <Grid\n                    item\n                    md={12}\n                    xs={12}\n                    >\n                    <TextField\n                        fullWidth\n                        helperText=\"Please enter the health tips here \"\n                        margin=\"dense\"\n                        name=\"content\"\n                        onChange={handleChange}\n                        required\n                        id=\"filled-textarea\"\n                        label=\"Health Tip Content \"\n                        placeholder=\"Please enter content here \"\n                        multiline\n                        variant=\"filled\"\n                        value={values.content}\n                    />\n                    </Grid>\n                    <Grid\n                    item\n                    md={6}\n                    xs={12}\n                    >\n                     <input\n                            accept=\"image/*\"\n                            className={classes.input}\n                            id=\"imagepath\"\n                            multiple\n                            type=\"file\"\n                            onChange={handleChange}\n                            value={values.imagepath}\n                        />\n                        <label htmlFor=\"contained-button-file\">\n                            <Button variant=\"contained\" color=\"secondary\" component=\"span\">\n                            Upload\n                            </Button>\n                        </label>\n                    </Grid>\n                 \n                </Grid>\n                </CardContent>\n                <Divider />\n                <CardActions>\n                {loading ? <Spinner /> : \"\"} <br/>\n                    <Button\n                        type=\"submit\"\n                        color=\"primary\"\n                        variant=\"contained\"\n                    >\n                        Save\n                    </Button>\n                </CardActions>\n            </form>\n         </Card>\n        </DialogContent>\n\n      </Dialog>\n    </div>\n  );\n}\n\nexport default connect(null, { createHealthTips })(AddHealthTips);","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport HealthTipsListTable  from './HealthTipsListTable';\nimport AddHealthTips from './AddHealthTips'\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst HealthTipsList = () => {\n  const classes = useStyles();\n\n\n  return (\n    <div className={classes.root}>\n       <AddHealthTips />   \n      <div className={classes.content}>\n        <HealthTipsListTable  />\n      </div>\n    </div>\n  );\n};\n\nexport default HealthTipsList;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useDispatch } from 'react-redux';\nimport { deleteHealthTipsType } from './../../../actions/healthtips';\nimport { useHistory } from \"react-router-dom\";\n\n\nexport default function AlertDialog(props) {\n    let history = useHistory();\nconst dispatch = useDispatch()\nconst  msg = () => {       \n       props.handleClose()\n       history.push(\"/healthtipstype\");      \n    } \n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={props.handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to delete this Health Tips?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.tips.name}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={()=>{\n              dispatch(deleteHealthTipsType(props.tips.id, msg))\n              \n              }} color=\"secondary\">\n            Yes\n          </Button>\n          <Button onClick={props.handleClose} color=\"primary\" autoFocus>\n            No\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, {useState} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport {\n    Card,\n    CardContent,\n    CardActions,\n    Divider,\n    Grid,\n    TextField\n  } from '@material-ui/core';\n\nimport { Spinner } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { updateHealthTipsType } from './../../../actions/healthtips'\nimport { useHistory } from \"react-router-dom\"; \n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  \n});\n\nconst useStyles = makeStyles(theme => ({\n    root: {},\n    row: {\n      height: '42px',\n      display: 'flex',\n      alignItems: 'center',\n      marginTop: theme.spacing(1)\n    },\n    spacer: {\n      flexGrow: 1\n    },\n    \n    input: {\n        display: 'none',\n      },\n  }));\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\n\n const  AddHealthType = (props) => {\n     \n  const typename= props.tips ? props.tips : {} ;\n  const typeid= props.tips ? props.tips.id : null ;\n  let history = useHistory(); \n  const classes = useStyles();\n  const [loading, setLoading] = useState(false)\n\n  const [values, setValues] = useState({typename});\n  console.log(values)\n  const edithealthtype = e => {\n    e.preventDefault()\n    console.log(values)\n    const onSuccess = () => {\n        setLoading(false);\n        history.push(\"/healthtips\");\n        props.handleClose() \n      }\n      const onError = () => {\n        setLoading(false); \n        props.handleClose()       \n      }\n      props.updateHealthTipsType(values, typeid, onSuccess,onError)\n  }\n\n\n  return (\n    <div>\n     \n      <Dialog onClose={props.handleClose} aria-labelledby=\"customized-dialog-title\" open={props.open}\n            fullWidth='false'\n            maxWidth='sm'\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={props.handleClose}>\n          Edit Health Tips Type \n        </DialogTitle>\n        <DialogContent dividers>\n        <Card>\n            <form\n                autoComplete=\"off\"\n                noValidate\n                onSubmit={edithealthtype}\n            >\n               \n                <CardContent>\n\n                <Grid\n                    container\n                    spacing={3}\n                >\n                   \n                    <Grid\n                    item\n                    md={12}\n                    xs={12}\n                    >\n                    \n                     <TextField\n                        fullWidth                       \n                        id=\"name\"\n                        className={classes.textField}\n                        defaultValue={props.tips.name}\n                        \n                        onChange={e =>\n                            setValues({\n                              ...values,\n                              name: e.target.value\n                            })\n                          }\n                        variant=\"outlined\"\n                       \n                    />\n                    \n                    </Grid>\n                   \n                 \n                </Grid>\n                </CardContent>\n                <Divider />\n                <CardActions>\n                {loading ? <Spinner /> : \"\"}\n\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        type='submit'\n                    >\n                        Update\n                    </Button>\n                 \n                </CardActions>\n            </form>\n         </Card>\n        </DialogContent>\n\n      </Dialog>\n    </div>\n  );\n}\n\n\nexport default connect(null, { updateHealthTipsType })(AddHealthType);\n\n\n","import React, {useEffect, useState} from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport { fetchAllHealthTipsType } from '../../actions/healthtips'\nimport {  FaPencilAlt, FaTrashAlt } from 'react-icons/fa';\nimport {\n  Menu,\n  MenuList,\n  MenuButton,\n  MenuItem,\n} from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\nimport ModalDelete from './ActionModal/ModalDelete';\nimport ModalEdit from './ActionModal/ModalEdit';\n\nconst FacilitiesListTable = (props) => {\n\n  const healthtipstype = useSelector(state => state.healthtips.types);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false)\n  const [collectmodal, setcollectmodal] = useState([])\n  const [open, setOpen] = useState(false);\n  const handleClose = () => {setOpen(false)};\n  const [open2, setOpen2] = useState(false);\n  const handleClose2 = () => {setOpen2(false)};\n  console.log(healthtipstype)\n  useEffect(() => {\n      setLoading('true');\n      const onSuccess = () => {\n        setLoading(false)\n      }\n      const onError = () => {\n        setLoading(false)     \n      }\n    dispatch(fetchAllHealthTipsType(onSuccess,onError))\n  }, [dispatch])\n  //const questList = questionsList\n\nconst editDetail = (detail) =>{\n  console.log(detail)\n  setOpen2(true);\n  setcollectmodal({...collectmodal, ...detail});\n}\nconst deleteDetail = (detail) =>{\n  console.log(detail)\n  setOpen(true);\n  setcollectmodal({...collectmodal, ...detail});\n}\n\n\nconst actionButtons = (e) =>{\n\n  return (\n\n      <Menu>\n          <MenuButton style={{ backgroundColor:\"#3F51B5\", fontSize:\"16px\", color:\"#fff\", border:\"2px solid #3F51B5\", borderRadius:\"4px\", width:\"80px\", heigth:\"80px\"}}>\n            Actions <span aria-hidden>▾</span>\n          </MenuButton>\n          <MenuList style={{hover:\"#eee\"}}>\n            <MenuItem onSelect={() => editDetail(e)}><FaPencilAlt color=\"primary\" size=\"15px\"/>{\" \"} Edit</MenuItem>             \n            \n            <MenuItem onSelect={() => deleteDetail(e)}><FaTrashAlt color=\"primary\" size=\"15px\"/>{\" \"}Delete</MenuItem>\n             \n          </MenuList>\n      </Menu>\n      )\n\n}\n  return (\n\n        <PerfectScrollbar>\n          <div >\n          <MaterialTable\n        title=\"List of Health Tips Types\"\n        columns={[\n          { title: \" ID\", field: \"Id\",filtering: false },\n          {\n            title: \"Title\",\n            field: \"title\",\n            filtering: false\n          },\n          \n          {\n            title: \"Action\",\n            field: \"actions\",\n            filtering: false,\n          },\n        ]}\n        isLoading={loading}\n        data={healthtipstype.map((row) => ({\n          Id: row.id,\n          title: row.name,          \n          actions: actionButtons(row)\n\n            }))}\n        options={{\n        \n          headerStyle: {\n            backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n            margin: \"auto\"\n          },\n          filtering: true,          \n          exportButton: true,\n          \n        }}\n\n      />\n      <ModalDelete open={open} handleClose={handleClose} tips={collectmodal} />\n      <ModalEdit open={open2} handleClose={handleClose2} tips={collectmodal} />\n      </div>\n    </PerfectScrollbar>\n     \n  );\n  \n};\n\n\n\n\nexport default FacilitiesListTable;\n","import React, {useState} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport {\n    Card,\n    CardContent,\n    CardActions,\n    Divider,\n    Grid,\n    TextField\n  } from '@material-ui/core';\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Spinner } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport {createHealthType} from './../../actions/healthtips'\nimport { useHistory } from \"react-router-dom\"; \n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  \n});\n\nconst useStyles = makeStyles(theme => ({\n    root: {},\n    row: {\n      height: '42px',\n      display: 'flex',\n      alignItems: 'center',\n      marginTop: theme.spacing(1)\n    },\n    spacer: {\n      flexGrow: 1\n    },\n    \n    input: {\n        display: 'none',\n      },\n  }));\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\n\n const  AddHealthType = (props) => {\n  \n  let history = useHistory(); \n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [loading, setLoading] = useState(false)\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [values, setValues] = useState({name:\"\"});\n\n  const savehealthtype = e => {\n    e.preventDefault()\n    console.log(values)\n    const onSuccess = () => {\n        setLoading(false);\n        history.push(\"/healthtips\");\n        handleClose() \n\n\n      }\n      const onError = () => {\n        setLoading(false); \n        handleClose()       \n      }\n      props.createHealthType(values, onSuccess,onError)\n  }\n\n\n  return (\n    <div>\n    <ToastContainer autoClose={3000} hideProgressBar />\n      <div className={classes.row}>\n      <span className={classes.spacer} />\n      <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={handleClickOpen}\n        >\n         Add Tips Type\n        </Button>\n        \n      </div>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}\n            fullWidth='false'\n            maxWidth='sm'\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Add Health Tips Type\n        </DialogTitle>\n        <DialogContent dividers>\n        <Card>\n            <form\n                autoComplete=\"off\"\n                noValidate\n                onSubmit={savehealthtype}\n            >\n               \n                <CardContent>\n\n                <Grid\n                    container\n                    spacing={3}\n                >\n                   \n                    <Grid\n                    item\n                    md={12}\n                    xs={12}\n                    >\n                    \n                     <TextField\n                        fullWidth\n                        label=\"Health Type\"\n                        id=\"name\"\n                        className={classes.textField}\n                        helperText=\"Health Type\"\n                        onChange={e =>\n                            setValues({\n                              ...values,\n                              name: e.target.value\n                            })\n                          }\n                        variant=\"outlined\"\n                        type=\"text\"\n                       \n                    />\n                    </Grid>\n                   \n                 \n                </Grid>\n                </CardContent>\n                <Divider />\n                <CardActions>\n                {loading ? <Spinner /> : \"\"}\n\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        type='submit'\n                    >\n                        Save\n                    </Button>\n                 \n                </CardActions>\n            </form>\n         </Card>\n        </DialogContent>\n\n      </Dialog>\n    </div>\n  );\n}\n\n\nexport default connect(null, { createHealthType })(AddHealthType);\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport HealthTipsListTable  from './HealthTipsTypeListTable';\nimport AddHealthType from './AddHealthType'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst HealthTipsList = () => {\n  const classes = useStyles();\n\n\n  return (\n    <div className={classes.root}>\n       <AddHealthType />\n     \n      <div className={classes.content}>\n        <HealthTipsListTable  />\n      </div>\n    </div>\n  );\n};\n\nexport default HealthTipsList;\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\nexport default createBrowserHistory();","import React from 'react';\nimport { BrowserRouter, Switch, Redirect } from 'react-router-dom';\n\nimport { RouteWithLayout } from './components';\nimport { Main as MainLayout, Minimal as MinimalLayout } from './layouts';\n\nimport {\n  Dashboard as DashboardView,\n  \n  FacilitiesList as facilitiesView,\n  QuestionList as questionsView,\n  DoctorsList as doctorsView,\n  UsersList as userView,\n  HealthTipsList as healthtipsView,\n  HealthTipsTypeList as healthtipstypeView,\n  NotFound as NotFoundView\n} from './views';\nimport history  from './history'\n\nconst Routes = () => {\n  \n  return (\n    <BrowserRouter history={history}>\n    <Switch>\n      <Redirect\n        exact\n        from=\"/\"\n        to=\"/dashboard\"\n      />\n      <RouteWithLayout\n        component={DashboardView}\n        exact\n        layout={MainLayout}\n        path=\"/dashboard\"\n      />\n      <RouteWithLayout\n        component={userView}\n        exact\n        layout={MainLayout}\n        path=\"/user\"\n      />\n      <RouteWithLayout\n        component={facilitiesView}\n        exact\n        layout={MainLayout}\n        path=\"/facilities\"\n      />\n      <RouteWithLayout\n        component={questionsView}\n        exact\n        layout={MainLayout}\n        path=\"/questions\"\n      />\n      <RouteWithLayout\n        component={doctorsView}\n        exact\n        layout={MainLayout}\n        path=\"/doctors\"\n      />\n      <RouteWithLayout\n        component={healthtipsView}\n        exact\n        layout={MainLayout}\n        path=\"/healthtips\"\n      />\n      <RouteWithLayout\n        component={healthtipstypeView}\n        exact\n        layout={MainLayout}\n        path=\"/healthtipstype\"\n      />\n      <RouteWithLayout\n        component={NotFoundView}\n        exact\n        layout={MinimalLayout}\n        path=\"/not-found\"\n      />\n      <Redirect to=\"/not-found\" />\n    </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n","import * as ACTION_TYPES from '../actions/types'\n\nconst initialState = {\n  list: []\n\n}\n\nconst questionsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.FETCH_ALL_QUESTIONS:\n      return { ...state, list: action.payload }\n\n\n\n    default:\n      return state\n  }\n}\n\nexport default questionsReducer\n\n\n","import * as ACTION_TYPES from '../actions/types'\n\nconst initialState = {\n  list: []\n\n}\n\nconst facilitiesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.FETCH_ALL_FACILITIES:\n      return { ...state, list: action.payload }\n\n\n\n    default:\n      return state\n  }\n}\n\nexport default facilitiesReducer\n\n\n","import * as ACTION_TYPES from '../actions/types'\n\nconst initialState = {\n  regusers: []\n\n}\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.FETCH_ALL_REGISTER_USERS:\n      return { ...state, regusers: [...action.payload] }\n    default:\n      return state\n  }\n}\n\nexport default usersReducer\n\n\n","import * as ACTION_TYPES from '../actions/types'\n\nconst initialState = {\n  list: []\n\n}\n\nconst doctorsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.FETCH_ALL_DOCTORS:\n      return { ...state, list: action.payload }\n\n\n\n    default:\n      return state\n  }\n}\n\nexport default doctorsReducer\n\n\n","import * as ACTION_TYPES from '../actions/types'\n\nconst initialState = {\n  list: [],\n  types:[]\n\n}\n\nconst healthtipsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.FETCH_ALL_HEALTHTIPS:\n      return { ...state, list: action.payload }\n      case ACTION_TYPES.FETCH_ALL_HEALTHTIPSTYPE:\n        return { ...state, types: action.payload }\n        case ACTION_TYPES.UPDATE_HEALTH_TIPS_TYPE:\n            return { ...state,  ...action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default healthtipsReducer\n\n\n","import { combineReducers } from 'redux'\nimport questionsReducer from './questionsReducer'\nimport facilitiesReducer from './facilitiesReducer'\nimport usersReducer from './usersReducer'\nimport doctorsReducer from './doctorReducer'\nimport healthtipsReducer from './healthtipsReducer'\n\n\n\nexport default combineReducers({\n  questions: questionsReducer,\n  facilities: facilitiesReducer,\n  listOfUsers:usersReducer,\n  doctors:doctorsReducer,\n  healthtips:healthtipsReducer,\n\n})\n\n","import { createStore, compose, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst middleware = [thunk]\n\nconst initialState = {}\n\nconst store = window.__REDUX_DEVTOOLS_EXTENSION__\n  ? createStore(\n      rootReducer,\n      initialState,\n      compose(\n        applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n      )\n    )\n  : createStore(\n      rootReducer,\n      initialState,\n      compose(applyMiddleware(...middleware))\n    )\n\nexport default store\n","import React, { Component } from 'react';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { Chart } from 'react-chartjs-2';\nimport { ThemeProvider } from '@material-ui/styles';\nimport validate from 'validate.js';\n\nimport { chartjs } from './helpers';\nimport theme from './theme';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport './assets/scss/index.scss';\nimport validators from './common/validators';\nimport Routes from './Routes';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\n\nconst browserHistory = createBrowserHistory();\n\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\n  draw: chartjs.draw\n});\n\nvalidate.validators = {\n  ...validate.validators,\n  ...validators\n};\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}> \n      <ThemeProvider theme={theme}>\n        <Router history={browserHistory}>\n          <Routes />\n        </Router>\n      </ThemeProvider>\n      </Provider>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}