{"ast":null,"code":"import _objectSpread from \"/Users/matosky/pomade-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/matosky/pomade-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/matosky/pomade-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/matosky/pomade-covid/src/views/HealthTips/AddHealthType.js\";\nimport React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport { Card, CardContent, CardActions, Divider, Grid, TextField } from '@material-ui/core';\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Spinner } from 'reactstrap';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  input: {\n    display: 'none'\n  }\n}));\nconst DialogTitle = withStyles(styles)(props => {\n  const children = props.children,\n        classes = props.classes,\n        onClose = props.onClose,\n        other = _objectWithoutProperties(props, [\"children\", \"classes\", \"onClose\"]);\n\n  return React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, children), onClose ? React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })) : null);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nexport default function HealthTipType(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        values = _useState4[0],\n        setValues = _useState4[1];\n\n  const handleChange = event => {\n    setValues(_objectSpread({}, values, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const savehealthtype = e => {\n    e.preventDefault();\n    console.log(values);\n\n    const onSuccess = () => {\n      setLoading(false);\n      props.handleClose();\n    };\n\n    const onError = () => {\n      setLoading(false);\n      props.handleClose();\n    };\n\n    props.createHealthType(values, onSuccess, onError);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(ToastContainer, {\n    autoClose: 3000,\n    hideProgressBar: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"secondary\",\n    variant: \"contained\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Add Health Tips Types\")), React.createElement(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: open,\n    fullWidth: \"false\",\n    maxWidth: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"customized-dialog-title\",\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Add Health Tips Type\"), React.createElement(DialogContent, {\n    dividers: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    onSubmit: savehealthtype,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    md: 12,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Health Type\",\n    id: \"name-margin-dense\",\n    className: classes.textField,\n    helperText: \"Health Type\",\n    margin: \"dense\",\n    onChange: handleChange,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  })))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }) : \"\", React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Save\"), \"export default connect(null, \", (createCollectedSample, fetchFormById), \")(ModalSample);\"))))));\n}","map":{"version":3,"sources":["/Users/matosky/pomade-covid/src/views/HealthTips/AddHealthType.js"],"names":["React","useState","withStyles","Dialog","MuiDialogTitle","MuiDialogContent","IconButton","CloseIcon","Typography","makeStyles","Button","Card","CardContent","CardActions","Divider","Grid","TextField","ToastContainer","Spinner","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","useStyles","row","height","display","alignItems","marginTop","spacer","flexGrow","input","DialogTitle","props","children","classes","onClose","other","DialogContent","HealthTipType","open","setOpen","loading","setLoading","handleClickOpen","handleClose","values","setValues","handleChange","event","target","name","value","savehealthtype","e","preventDefault","console","log","onSuccess","onError","createHealthType","textField","createCollectedSample","fetchFormById"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport {\n    Card,\n    CardContent,\n    CardActions,\n    Divider,\n    Grid,\n    TextField\n  } from '@material-ui/core';\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Spinner } from 'reactstrap';\n  \n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  \n});\n\nconst useStyles = makeStyles(theme => ({\n    root: {},\n    row: {\n      height: '42px',\n      display: 'flex',\n      alignItems: 'center',\n      marginTop: theme.spacing(1)\n    },\n    spacer: {\n      flexGrow: 1\n    },\n    \n    input: {\n        display: 'none',\n      },\n  }));\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\n\nexport default function HealthTipType(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [loading, setLoading] = useState(false)\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [values, setValues] = useState({});\n\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n  const savehealthtype = e => {\n    e.preventDefault()\n    console.log(values)\n    const onSuccess = () => {\n        setLoading(false);\n        props.handleClose()       \n      }\n      const onError = () => {\n        setLoading(false); \n        props.handleClose()       \n      }\n      props.createHealthType(values, onSuccess,onError)\n  }\n\n\n  return (\n    <div>\n    <ToastContainer autoClose={3000} hideProgressBar />\n      <div className={classes.row}>\n      <span className={classes.spacer} />\n      <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={handleClickOpen}\n        >\n          Add Health Tips Types\n        </Button>\n        \n      </div>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}\n            fullWidth='false'\n            maxWidth='sm'\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Add Health Tips Type\n        </DialogTitle>\n        <DialogContent dividers>\n        <Card>\n            <form\n                autoComplete=\"off\"\n                noValidate\n                onSubmit={savehealthtype}\n            >\n               \n                <CardContent>\n\n                <Grid\n                    container\n                    spacing={3}\n                >\n                   \n                    <Grid\n                    item\n                    md={12}\n                    xs={12}\n                    >\n                    \n                     <TextField\n                        fullWidth\n                        label=\"Health Type\"\n                        id=\"name-margin-dense\"\n                        className={classes.textField}\n                        helperText=\"Health Type\"\n                        margin=\"dense\"\n                        onChange={handleChange}\n                        variant=\"outlined\"\n                       \n                    />\n                    </Grid>\n                   \n                 \n                </Grid>\n                </CardContent>\n                <Divider />\n                <CardActions>\n                {loading ? <Spinner /> : \"\"}\n\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                    >\n                        Save\n                    </Button>\n\n\n\n\n\nexport default connect(null, { createCollectedSample, fetchFormById })(ModalSample);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                </CardActions>\n            </form>\n         </Card>\n        </DialogContent>\n\n      </Dialog>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}