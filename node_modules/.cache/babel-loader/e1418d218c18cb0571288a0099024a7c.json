{"ast":null,"code":"import _slicedToArray from \"/Users/matosky/pomade-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/matosky/pomade-covid/src/views/Doctors/DoctorsListTable.js\";\nimport React, { useEffect, useState } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport { fetchAllDoctors } from '../../actions/doctors';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link } from 'react-router-dom';\n\nconst DoctorsListTable = () => {\n  const doctorsList = useSelector(state => state.doctors.list);\n  const dispatch = useDispatch();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  console.log(doctorsList);\n  useEffect(() => {\n    setLoading('true');\n\n    const onSuccess = () => {\n      setLoading(false);\n    };\n\n    const onError = () => {\n      setLoading(false);\n    };\n\n    dispatch(fetchAllDoctors(onSuccess, onError));\n  }, [dispatch]); //const questList = questionsList\n\n  return React.createElement(PerfectScrollbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(MaterialTable, {\n    title: \"List of Doctors\",\n    columns: [{\n      title: \" ID\",\n      field: \"Id\"\n    }, {\n      title: \"name\",\n      field: \"name\"\n    }, {\n      title: \"Contact \",\n      field: \"contact\",\n      filtering: false\n    }, {\n      title: \"Second Contact\",\n      field: \"contact2\",\n      filtering: false\n    }],\n    isLoading: loading,\n    data: doctorsList.map(row => ({\n      Id: row.id,\n      name: row.surname + row.firstname,\n      conatct1: row.contact,\n      contact2: row.contact,\n      actions: React.createElement(Link, {\n        to: {\n          pathname: \"/\",\n          state: {\n            getpatientlists: {\n              row\n            }\n          }\n        },\n        style: {\n          cursor: \"pointer\",\n          color: \"blue\",\n          fontStyle: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Enter Result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        \"aria-label\": \"Enter Result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(VisibilityIcon, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))))\n    })),\n    options: {\n      headerStyle: {\n        backgroundColor: \"#9F9FA5\",\n        color: \"#000\",\n        margin: \"auto\"\n      },\n      filtering: true,\n      exportButton: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })));\n};\n\nexport default DoctorsListTable;","map":{"version":3,"sources":["/Users/matosky/pomade-covid/src/views/Doctors/DoctorsListTable.js"],"names":["React","useEffect","useState","PerfectScrollbar","useSelector","useDispatch","MaterialTable","fetchAllDoctors","VisibilityIcon","Tooltip","IconButton","Link","DoctorsListTable","doctorsList","state","doctors","list","dispatch","loading","setLoading","console","log","onSuccess","onError","title","field","filtering","map","row","Id","id","name","surname","firstname","conatct1","contact","contact2","actions","pathname","getpatientlists","cursor","color","fontStyle","headerStyle","backgroundColor","margin","exportButton"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport { fetchAllDoctors } from '../../actions/doctors'\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link } from 'react-router-dom'\n\nconst DoctorsListTable = () => {\n  const doctorsList = useSelector(state => state.doctors.list);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false)\n console.log(doctorsList)\n  useEffect(() => {\n      setLoading('true');\n      const onSuccess = () => {\n        setLoading(false)\n      }\n      const onError = () => {\n        setLoading(false)     \n      }\n    dispatch(fetchAllDoctors(onSuccess,onError))\n  }, [dispatch])\n  //const questList = questionsList\n\n\n  return (\n\n        <PerfectScrollbar>\n          <div >\n          <MaterialTable\n        title=\"List of Doctors\"\n        columns={[\n          { title: \" ID\", field: \"Id\" },\n          {\n            title: \"name\",\n            field: \"name\",\n          },\n          \n          {\n            title: \"Contact \",\n            field: \"contact\",\n            filtering: false\n          },\n          {\n            title: \"Second Contact\",\n            field: \"contact2\",\n            filtering: false\n          },\n          \n        ]}\n        isLoading={loading}\n        data={doctorsList.map((row) => ({\n          Id: row.id,\n          name: row.surname + row.firstname,          \n          conatct1: row.contact,\n          contact2: row.contact,\n\n          actions: <Link to ={{ \n                        pathname: \"/\",  \n                        state: { getpatientlists:{row}}\n                        }} \n                        style={{ cursor: \"pointer\", color: \"blue\", \n                        fontStyle: \"bold\" }}>\n                          <Tooltip title=\"Enter Result\">\n                            <IconButton aria-label=\"Enter Result\" >\n                            <VisibilityIcon color=\"primary\"/>\n                          </IconButton>\n                          </Tooltip>\n                        </Link>\n\n            }))}\n        options={{\n        \n          headerStyle: {\n            backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n            margin: \"auto\"\n          },\n          filtering: true,          \n          exportButton: true,\n          \n        }}\n\n      />\n          </div>\n        </PerfectScrollbar>\n     \n  );\n};\n\n\n\nexport default DoctorsListTable;\n"]},"metadata":{},"sourceType":"module"}