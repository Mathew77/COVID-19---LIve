{"ast":null,"code":"var _jsxFileName = \"/Users/matosky/pomade-covid/src/views/HealthTipsTypes/HealthTipsTypeListTable.js\";\nimport React, { useEffect, useState } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport { fetchAllHealthTipsType } from '../../actions/healthtips';\nimport { FaPencilAlt, FaTrashAlt } from 'react-icons/fa';\nimport { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\nimport ModalDelete from './ActionModal/ModalDelete';\nimport ModalEdit from './ActionModal/ModalEdit';\n\nconst FacilitiesListTable = props => {\n  const healthtipstype = useSelector(state => state.healthtips.types);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [collectmodal, setcollectmodal] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [open2, setOpen2] = useState(false);\n\n  const handleClose2 = () => {\n    setOpen2(false);\n  };\n\n  console.log(healthtipstype);\n  useEffect(() => {\n    setLoading('true');\n\n    const onSuccess = () => {\n      setLoading(false);\n    };\n\n    const onError = () => {\n      setLoading(false);\n    };\n\n    dispatch(fetchAllHealthTipsType(onSuccess, onError));\n  }, [dispatch]); //const questList = questionsList\n\n  const editDetail = detail => {\n    console.log(detail);\n    setOpen2(true);\n    setcollectmodal({ ...collectmodal,\n      ...detail\n    });\n  };\n\n  const deleteDetail = detail => {\n    console.log(detail);\n    setOpen(true);\n    setcollectmodal({ ...collectmodal,\n      ...detail\n    });\n  };\n\n  const actionButtons = e => {\n    return /*#__PURE__*/React.createElement(Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MenuButton, {\n      style: {\n        backgroundColor: \"#3F51B5\",\n        fontSize: \"16px\",\n        color: \"#fff\",\n        border: \"2px solid #3F51B5\",\n        borderRadius: \"4px\",\n        width: \"80px\",\n        heigth: \"80px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \"Actions \", /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, \"\\u25BE\")), /*#__PURE__*/React.createElement(MenuList, {\n      style: {\n        hover: \"#eee\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      onSelect: () => editDetail(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FaPencilAlt, {\n      color: \"primary\",\n      size: \"15px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 54\n      }\n    }), \" \", \" Edit\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onSelect: () => deleteDetail(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FaTrashAlt, {\n      color: \"primary\",\n      size: \"15px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 56\n      }\n    }), \" \", \"Delete\")));\n  };\n\n  return /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"List of Health Tips Types\",\n    columns: [{\n      title: \" ID\",\n      field: \"Id\",\n      filtering: false\n    }, {\n      title: \"Title\",\n      field: \"title\",\n      filtering: false\n    }, {\n      title: \"Action\",\n      field: \"actions\",\n      filtering: false\n    }],\n    isLoading: loading,\n    data: healthtipstype.map(row => ({\n      Id: row.id,\n      title: row.name,\n      actions: actionButtons(row)\n    })),\n    options: {\n      headerStyle: {\n        backgroundColor: \"#9F9FA5\",\n        color: \"#000\",\n        margin: \"auto\"\n      },\n      filtering: true,\n      exportButton: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ModalDelete, {\n    open: open,\n    handleClose: handleClose,\n    tips: collectmodal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ModalEdit, {\n    open: open2,\n    handleClose: handleClose2,\n    tips: collectmodal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default FacilitiesListTable;","map":{"version":3,"sources":["/Users/matosky/pomade-covid/src/views/HealthTipsTypes/HealthTipsTypeListTable.js"],"names":["React","useEffect","useState","PerfectScrollbar","useSelector","useDispatch","MaterialTable","fetchAllHealthTipsType","FaPencilAlt","FaTrashAlt","Menu","MenuList","MenuButton","MenuItem","ModalDelete","ModalEdit","FacilitiesListTable","props","healthtipstype","state","healthtips","types","dispatch","loading","setLoading","collectmodal","setcollectmodal","open","setOpen","handleClose","open2","setOpen2","handleClose2","console","log","onSuccess","onError","editDetail","detail","deleteDetail","actionButtons","e","backgroundColor","fontSize","color","border","borderRadius","width","heigth","hover","title","field","filtering","map","row","Id","id","name","actions","headerStyle","margin","exportButton"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport { fetchAllHealthTipsType } from '../../actions/healthtips'\nimport {  FaPencilAlt, FaTrashAlt } from 'react-icons/fa';\nimport {\n  Menu,\n  MenuList,\n  MenuButton,\n  MenuItem,\n} from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\nimport ModalDelete from './ActionModal/ModalDelete';\nimport ModalEdit from './ActionModal/ModalEdit';\n\nconst FacilitiesListTable = (props) => {\n\n  const healthtipstype = useSelector(state => state.healthtips.types);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false)\n  const [collectmodal, setcollectmodal] = useState([])\n  const [open, setOpen] = useState(false);\n  const handleClose = () => {setOpen(false)};\n  const [open2, setOpen2] = useState(false);\n  const handleClose2 = () => {setOpen2(false)};\n  console.log(healthtipstype)\n  useEffect(() => {\n      setLoading('true');\n      const onSuccess = () => {\n        setLoading(false)\n      }\n      const onError = () => {\n        setLoading(false)     \n      }\n    dispatch(fetchAllHealthTipsType(onSuccess,onError))\n  }, [dispatch])\n  //const questList = questionsList\n\nconst editDetail = (detail) =>{\n  console.log(detail)\n  setOpen2(true);\n  setcollectmodal({...collectmodal, ...detail});\n}\nconst deleteDetail = (detail) =>{\n  console.log(detail)\n  setOpen(true);\n  setcollectmodal({...collectmodal, ...detail});\n}\n\n\nconst actionButtons = (e) =>{\n\n  return (\n\n      <Menu>\n          <MenuButton style={{ backgroundColor:\"#3F51B5\", fontSize:\"16px\", color:\"#fff\", border:\"2px solid #3F51B5\", borderRadius:\"4px\", width:\"80px\", heigth:\"80px\"}}>\n            Actions <span aria-hidden>▾</span>\n          </MenuButton>\n          <MenuList style={{hover:\"#eee\"}}>\n            <MenuItem onSelect={() => editDetail(e)}><FaPencilAlt color=\"primary\" size=\"15px\"/>{\" \"} Edit</MenuItem>             \n            \n            <MenuItem onSelect={() => deleteDetail(e)}><FaTrashAlt color=\"primary\" size=\"15px\"/>{\" \"}Delete</MenuItem>\n             \n          </MenuList>\n      </Menu>\n      )\n\n}\n  return (\n\n        <PerfectScrollbar>\n          <div >\n          <MaterialTable\n        title=\"List of Health Tips Types\"\n        columns={[\n          { title: \" ID\", field: \"Id\",filtering: false },\n          {\n            title: \"Title\",\n            field: \"title\",\n            filtering: false\n          },\n          \n          {\n            title: \"Action\",\n            field: \"actions\",\n            filtering: false,\n          },\n        ]}\n        isLoading={loading}\n        data={healthtipstype.map((row) => ({\n          Id: row.id,\n          title: row.name,          \n          actions: actionButtons(row)\n\n            }))}\n        options={{\n        \n          headerStyle: {\n            backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n            margin: \"auto\"\n          },\n          filtering: true,          \n          exportButton: true,\n          \n        }}\n\n      />\n      <ModalDelete open={open} handleClose={handleClose} tips={collectmodal} />\n      <ModalEdit open={open2} handleClose={handleClose2} tips={collectmodal} />\n      </div>\n    </PerfectScrollbar>\n     \n  );\n  \n};\n\n\n\n\nexport default FacilitiesListTable;\n"]},"metadata":{},"sourceType":"module"}