{"ast":null,"code":"import _objectSpread from \"/Users/matosky/pomade-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/matosky/pomade-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/matosky/pomade-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/matosky/pomade-covid/src/views/HealthTips/ActionModal/ModalEdit.js\";\nimport React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport { Card, CardContent, CardActions, Divider, Grid, TextField } from '@material-ui/core';\nimport axios from 'axios';\nimport { url } from './../../../api';\nimport { Spinner } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { updateHealthTips } from './../../../actions/healthtips';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  input: {\n    display: 'none'\n  }\n}));\nconst DialogTitle = withStyles(styles)(props => {\n  const children = props.children,\n        classes = props.classes,\n        onClose = props.onClose,\n        other = _objectWithoutProperties(props, [\"children\", \"classes\", \"onClose\"]);\n\n  return React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, children), onClose ? React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })) : null);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\n\nconst AddHealthTips = props => {\n  const classes = useStyles();\n\n  const _useState = useState({\n    \"title\": \"\",\n    \"content\": \"\",\n    \"imagepath\": \"\",\n    \"healthtiptype\": \"\",\n    \"language\": 1\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        data = _useState4[0],\n        setData = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loading = _useState6[0],\n        setLoading = _useState6[1];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(url + 'healthtiptypes');\n      setData(result.data);\n    };\n\n    fetchData();\n  });\n\n  const handleChange = event => {\n    setValues(_objectSpread({}, values, {\n      [event.target.name]: event.target.value\n    }));\n    console.log(values);\n  };\n\n  const savehealthtip = e => {\n    e.preventDefault();\n    console.log(values);\n\n    const onSuccess = () => {\n      setLoading(false);\n      props.handleClose();\n    };\n\n    const onError = () => {\n      setLoading(false);\n      props.handleClose();\n    };\n\n    props.updateHealthTips(values, onSuccess, onError);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    onClose: props.handleClose,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: open,\n    fullWidth: \"false\",\n    maxWidth: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"customized-dialog-title\",\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Add Health Tips\"), React.createElement(DialogContent, {\n    dividers: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    onSubmit: savehealthtip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    md: 12,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Title\",\n    margin: \"dense\",\n    name: \"title\",\n    onChange: handleChange,\n    required: true,\n    value: values.title,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 12,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Select Type\",\n    margin: \"dense\",\n    name: \"healthtiptype\",\n    onChange: handleChange,\n    required: true,\n    select: true,\n    SelectProps: {\n      native: true\n    },\n    value: values.healthtiptype,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \" \"), data.map(option => React.createElement(\"option\", {\n    key: option.id,\n    value: option.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, option.name)))), React.createElement(Grid, {\n    item: true,\n    md: 12,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    helperText: \"Please enter the health tips here \",\n    margin: \"dense\",\n    name: \"content\",\n    onChange: handleChange,\n    required: true,\n    id: \"filled-textarea\",\n    label: \"Health Tip Content \",\n    placeholder: \"Please enter content here \",\n    multiline: true,\n    variant: \"filled\",\n    value: values.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    accept: \"image/*\",\n    className: classes.input,\n    id: \"imagepath\",\n    multiple: true,\n    type: \"file\",\n    onChange: handleChange,\n    value: values.imagepath,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"contained-button-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    component: \"span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, \"Upload\"))))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }) : \"\", \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, \"Save\")))))));\n};\n\nexport default connect(null, {\n  updateHealthTips\n})(AddHealthTips);","map":{"version":3,"sources":["/Users/matosky/pomade-covid/src/views/HealthTips/ActionModal/ModalEdit.js"],"names":["React","useState","useEffect","withStyles","Dialog","MuiDialogTitle","MuiDialogContent","IconButton","CloseIcon","Typography","makeStyles","Button","Card","CardContent","CardActions","Divider","Grid","TextField","axios","url","Spinner","connect","updateHealthTips","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","useStyles","row","height","display","alignItems","marginTop","spacer","flexGrow","input","DialogTitle","props","children","classes","onClose","other","DialogContent","AddHealthTips","values","setValues","data","setData","loading","setLoading","fetchData","result","handleChange","event","target","name","value","console","log","savehealthtip","e","preventDefault","onSuccess","handleClose","onError","open","title","native","healthtiptype","map","option","id","content","imagepath"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport {\n    Card,\n    CardContent,\n    CardActions,\n    Divider,\n    Grid,\n    TextField\n  } from '@material-ui/core';\nimport axios from 'axios';\nimport {url} from './../../../api'\nimport { Spinner } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { updateHealthTips } from './../../../actions/healthtips'\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  \n});\n\nconst useStyles = makeStyles(theme => ({\n    root: {},\n    row: {\n      height: '42px',\n      display: 'flex',\n      alignItems: 'center',\n      marginTop: theme.spacing(1)\n    },\n    spacer: {\n      flexGrow: 1\n    },\n    \n    input: {\n        display: 'none',\n      },\n  }));\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\n\nconst AddHealthTips = (props) =>{\n  const classes = useStyles();\n  \n  const [values, setValues] = useState({ \"title\": \"\",\n                                        \"content\": \"\",\n                                        \"imagepath\": \"\",\n                                        \"healthtiptype\": \"\",\n                                        \"language\": 1\n                                        });\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false)\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        url+'healthtiptypes',\n      );\n      setData(result.data);\n    };\n \n    fetchData();\n  });\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n    console.log(values)\n  };\n\n  const savehealthtip = e => {\n    e.preventDefault()\n    console.log(values)\n    const onSuccess = () => {\n        setLoading(false);\n        props.handleClose()       \n      }\n      const onError = () => {\n        setLoading(false); \n        props.handleClose()       \n      }\n      props.updateHealthTips(values, onSuccess,onError)\n  }\n\n\n\n  return (\n    <div>\n\n      <Dialog onClose={props.handleClose} aria-labelledby=\"customized-dialog-title\" open={open}\n            fullWidth='false'\n            maxWidth='sm'\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Add Health Tips\n        </DialogTitle>\n        <DialogContent dividers>\n        <Card>\n            <form\n                autoComplete=\"off\"\n                noValidate\n                onSubmit={savehealthtip}\n            >\n               \n                <CardContent>\n\n                <Grid\n                    container\n                    spacing={3}\n                >\n                <Grid\n                    item\n                    md={12}\n                    xs={12}\n                    >\n                    <TextField\n                        fullWidth\n                    \n                        label=\"Title\"\n                        margin=\"dense\"\n                        name=\"title\"\n                        onChange={handleChange}\n                        required\n                        value={values.title}\n                        variant=\"outlined\"\n                    />\n                     \n                    </Grid>\n                    <Grid\n                    item\n                    md={12}\n                    xs={12}\n                    >\n                    <TextField\n                        fullWidth\n                        label=\"Select Type\"\n                        margin=\"dense\"\n                        name=\"healthtiptype\"\n                        onChange={handleChange}\n                        required\n                        select\n                       \n                        SelectProps={{ native: true }}\n                        value={values.healthtiptype}\n                        variant=\"outlined\"\n                    >\n                        <option > </option>\n                        {data.map(option => (\n                            <option\n                                key={option.id}\n                                value={option.id}\n                            >\n                                {option.name}\n                            </option>\n                            ))}\n                    </TextField>\n                    </Grid>\n                    <Grid\n                    item\n                    md={12}\n                    xs={12}\n                    >\n                    <TextField\n                        fullWidth\n                        helperText=\"Please enter the health tips here \"\n                        margin=\"dense\"\n                        name=\"content\"\n                        onChange={handleChange}\n                        required\n                        id=\"filled-textarea\"\n                        label=\"Health Tip Content \"\n                        placeholder=\"Please enter content here \"\n                        multiline\n                        variant=\"filled\"\n                        value={values.content}\n                    />\n                    </Grid>\n                    <Grid\n                    item\n                    md={6}\n                    xs={12}\n                    >\n                     <input\n                            accept=\"image/*\"\n                            className={classes.input}\n                            id=\"imagepath\"\n                            multiple\n                            type=\"file\"\n                            onChange={handleChange}\n                            value={values.imagepath}\n                        />\n                        <label htmlFor=\"contained-button-file\">\n                            <Button variant=\"contained\" color=\"secondary\" component=\"span\">\n                            Upload\n                            </Button>\n                        </label>\n                    </Grid>\n                 \n                </Grid>\n                </CardContent>\n                <Divider />\n                <CardActions>\n                {loading ? <Spinner /> : \"\"} <br/>\n                    <Button\n                        type=\"submit\"\n                        color=\"primary\"\n                        variant=\"contained\"\n                    >\n                        Save\n                    </Button>\n                </CardActions>\n            </form>\n         </Card>\n        </DialogContent>\n\n      </Dialog>\n    </div>\n  );\n}\n\nexport default connect(null, { updateHealthTips })(AddHealthTips);"]},"metadata":{},"sourceType":"module"}