{"ast":null,"code":"import _defineProperty from\"/Users/matosky/pomade-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/matosky/pomade-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/matosky/pomade-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/matosky/pomade-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/matosky/pomade-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/matosky/pomade-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useState,useEffect}from'react';import{withStyles}from'@material-ui/core/styles';import Dialog from'@material-ui/core/Dialog';import MuiDialogTitle from'@material-ui/core/DialogTitle';import MuiDialogContent from'@material-ui/core/DialogContent';import IconButton from'@material-ui/core/IconButton';import CloseIcon from'@material-ui/icons/Close';import Typography from'@material-ui/core/Typography';import{makeStyles}from'@material-ui/styles';import{Button}from'@material-ui/core';import{Card,CardContent,CardActions,Divider,Grid,TextField}from'@material-ui/core';import axios from'axios';import{url}from'./../../../api';import{Spinner}from'reactstrap';import{connect}from'react-redux';import{updateHealthTips}from'./../../../actions/healthtips';var styles=function styles(theme){return{root:{margin:0,padding:theme.spacing(2)},closeButton:{position:'absolute',right:theme.spacing(1),top:theme.spacing(1),color:theme.palette.grey[500]}};};var useStyles=makeStyles(function(theme){return{root:{},row:{height:'42px',display:'flex',alignItems:'center',marginTop:theme.spacing(1)},spacer:{flexGrow:1},input:{display:'none'}};});var DialogTitle=withStyles(styles)(function(props){var children=props.children,classes=props.classes,onClose=props.onClose,other=_objectWithoutProperties(props,[\"children\",\"classes\",\"onClose\"]);return/*#__PURE__*/React.createElement(MuiDialogTitle,Object.assign({disableTypography:true,className:classes.root},other),/*#__PURE__*/React.createElement(Typography,{variant:\"h6\"},children),onClose?/*#__PURE__*/React.createElement(IconButton,{\"aria-label\":\"close\",className:classes.closeButton,onClick:onClose},/*#__PURE__*/React.createElement(CloseIcon,null)):null);});var DialogContent=withStyles(function(theme){return{root:{padding:theme.spacing(2)}};})(MuiDialogContent);var AddHealthTips=function AddHealthTips(props){var classes=useStyles();var _useState=useState({\"title\":\"\",\"content\":\"\",\"imagepath\":\"\",\"healthtiptype\":1,\"language\":1}),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),data=_useState4[0],setData=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios(url+'healthtiptypes');case 2:result=_context.sent;setData(result.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();},[]);var handleChange=function handleChange(event){setValues(_objectSpread(_objectSpread({},values),{},_defineProperty({},event.target.name,event.target.value)));};var savehealthtip=function savehealthtip(e){e.preventDefault();var onSuccess=function onSuccess(){setLoading(false);props.handleClose();};var onError=function onError(){setLoading(false);props.handleClose();};props.tips.title=values.title!==props.tips.title?values.title:props.tips.title;props.tips.content=values.content!==props.tips.content?values.title:props.tips.content;props.tips.healthtiptype=values.healthtiptype!==props.tips.healthtiptype?values.healthtiptype:props.tips.healthtiptype;props.tips.imagepath=values.imagepath!==props.tips.imagepath?values.imagepath:props.tips.imagepath;props.tips.language=values.language!==props.tips.language?values.language:props.tips.language;props.updateHealthTips(props.tips,props.tips.id,onSuccess,onError);};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Dialog,{onClose:props.handleClose,\"aria-labelledby\":\"customized-dialog-title\",open:props.open,fullWidth:\"false\",maxWidth:\"sm\"},/*#__PURE__*/React.createElement(DialogTitle,{id:\"customized-dialog-title\",onClose:props.handleClose},\"Update Health Tips\"),/*#__PURE__*/React.createElement(DialogContent,{dividers:true},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(\"form\",{autoComplete:\"off\",noValidate:true,onSubmit:savehealthtip},/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(Grid,{container:true,spacing:3},/*#__PURE__*/React.createElement(Grid,{item:true,md:12,xs:12},/*#__PURE__*/React.createElement(TextField,{fullWidth:true,label:\"Title\",margin:\"dense\",name:\"title\",onChange:handleChange,required:true,defaultValue:props.tips.title,variant:\"outlined\"})),/*#__PURE__*/React.createElement(Grid,{item:true,md:12,xs:12},/*#__PURE__*/React.createElement(TextField,{fullWidth:true,label:\"Select Type\",margin:\"dense\",name:\"healthtiptype\",onChange:handleChange,required:true,select:true,SelectProps:{native:true},defaultValue:props.tips.healthtiptype,variant:\"outlined\"},/*#__PURE__*/React.createElement(\"option\",null,\" \"),data.map(function(option){return/*#__PURE__*/React.createElement(\"option\",{key:option.id,value:option.id},option.name);}))),/*#__PURE__*/React.createElement(Grid,{item:true,md:12,xs:12},/*#__PURE__*/React.createElement(TextField,{fullWidth:true,helperText:\"Please enter the health tips here \",margin:\"dense\",name:\"content\",onChange:handleChange,required:true,id:\"filled-textarea\",label:\"Health Tip Content \",placeholder:\"Please enter content here \",multiline:true,variant:\"filled\",defaultValue:props.tips.content})),/*#__PURE__*/React.createElement(Grid,{item:true,md:6,xs:12},/*#__PURE__*/React.createElement(\"input\",{accept:\"image/*\",className:classes.input,id:\"imagepath\",multiple:true,type:\"file\",onChange:handleChange,defaultValue:props.tips.imagepath}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"contained-button-file\"},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"default\",component:\"span\"},\"Upload image\"))))),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(CardActions,null,loading?/*#__PURE__*/React.createElement(Spinner,null):\"\",\" \",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Button,{type:\"submit\",color:\"primary\",variant:\"contained\"},\"Update\")))))));};export default connect(null,{updateHealthTips:updateHealthTips})(AddHealthTips);","map":{"version":3,"sources":["/Users/matosky/pomade-covid/src/views/HealthTips/ActionModal/ModalEdit.js"],"names":["React","useState","useEffect","withStyles","Dialog","MuiDialogTitle","MuiDialogContent","IconButton","CloseIcon","Typography","makeStyles","Button","Card","CardContent","CardActions","Divider","Grid","TextField","axios","url","Spinner","connect","updateHealthTips","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","useStyles","row","height","display","alignItems","marginTop","spacer","flexGrow","input","DialogTitle","props","children","classes","onClose","other","DialogContent","AddHealthTips","values","setValues","data","setData","loading","setLoading","fetchData","result","handleChange","event","target","name","value","savehealthtip","e","preventDefault","onSuccess","handleClose","onError","tips","title","content","healthtiptype","imagepath","language","id","open","native","map","option"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport {\n    Card,\n    CardContent,\n    CardActions,\n    Divider,\n    Grid,\n    TextField\n  } from '@material-ui/core';\nimport axios from 'axios';\nimport {url} from './../../../api'\nimport { Spinner } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { updateHealthTips } from './../../../actions/healthtips'\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  \n});\n\nconst useStyles = makeStyles(theme => ({\n    root: {},\n    row: {\n      height: '42px',\n      display: 'flex',\n      alignItems: 'center',\n      marginTop: theme.spacing(1)\n    },\n    spacer: {\n      flexGrow: 1\n    },\n    \n    input: {\n        display: 'none',\n      },\n  }));\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\n\nconst AddHealthTips = (props) =>{\n  const classes = useStyles();\n  const [values, setValues] = useState({ \"title\": \"\",\n                                        \"content\": \"\",\n                                        \"imagepath\": \"\",\n                                        \"healthtiptype\":1,\n                                        \"language\": 1\n                                        });\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false)\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        url+'healthtiptypes',\n      );\n      setData(result.data);\n    };\n \n    fetchData();\n  }, []);\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const savehealthtip = e => {\n    e.preventDefault()\n    const onSuccess = () => {\n        setLoading(false);\n        props.handleClose()       \n      }\n      const onError = () => {\n        setLoading(false); \n        props.handleClose()       \n      }\n      props.tips.title = values.title !== props.tips.title ? values.title : props.tips.title ;\n      props.tips.content = values.content !== props.tips.content ? values.title : props.tips.content ;\n      props.tips.healthtiptype = values.healthtiptype !== props.tips.healthtiptype ? values.healthtiptype : props.tips.healthtiptype ;\n      props.tips.imagepath = values.imagepath !== props.tips.imagepath ? values.imagepath :props.tips.imagepath ;\n      props.tips.language = values.language !== props.tips.language ? values.language :props.tips.language ;\n      props.updateHealthTips(props.tips,props.tips.id, onSuccess,onError)\n  }\n\n\n\n  return (\n    <div>\n\n      <Dialog onClose={props.handleClose} aria-labelledby=\"customized-dialog-title\" open={props.open}\n            fullWidth='false'\n            maxWidth='sm'\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={props.handleClose}>\n          Update Health Tips\n        </DialogTitle>\n        <DialogContent dividers>\n        <Card>\n            <form\n                autoComplete=\"off\"\n                noValidate\n                onSubmit={savehealthtip}\n            >\n               \n                <CardContent>\n\n                <Grid\n                    container\n                    spacing={3}\n                >\n                <Grid\n                    item\n                    md={12}\n                    xs={12}\n                    >\n                    <TextField\n                        fullWidth\n                    \n                        label=\"Title\"\n                        margin=\"dense\"\n                        name=\"title\"\n                        onChange={handleChange}\n                        required\n                        defaultValue={props.tips.title}\n                        variant=\"outlined\"\n                    />\n                     \n                    </Grid>\n                    <Grid\n                    item\n                    md={12}\n                    xs={12}\n                    >\n                    <TextField\n                        fullWidth\n                        label=\"Select Type\"\n                        margin=\"dense\"\n                        name=\"healthtiptype\"\n                        onChange={handleChange}\n                        required\n                        select\n                       \n                        SelectProps={{ native: true }}\n                        defaultValue={props.tips.healthtiptype}\n                        variant=\"outlined\"\n                    >\n                        <option > </option>\n                        {data.map(option => (\n                            <option\n                                key={option.id}\n                                value={option.id}\n                            >\n                                {option.name}\n                            </option>\n                            ))}\n                    </TextField>\n                    </Grid>\n                    <Grid\n                    item\n                    md={12}\n                    xs={12}\n                    >\n                    <TextField\n                        fullWidth\n                        helperText=\"Please enter the health tips here \"\n                        margin=\"dense\"\n                        name=\"content\"\n                        onChange={handleChange}\n                        required\n                        id=\"filled-textarea\"\n                        label=\"Health Tip Content \"\n                        placeholder=\"Please enter content here \"\n                        multiline\n                        variant=\"filled\"\n                        defaultValue={props.tips.content}\n                    />\n                    </Grid>\n                    <Grid\n                    item\n                    md={6}\n                    xs={12}\n                    >\n                     <input\n                            accept=\"image/*\"\n                            className={classes.input}\n                            id=\"imagepath\"\n                            multiple\n                            type=\"file\"\n                            onChange={handleChange}\n                            defaultValue={props.tips.imagepath}\n                        />\n                        <label htmlFor=\"contained-button-file\">\n                            <Button variant=\"contained\" color=\"default\" component=\"span\">\n                                Upload image\n                            </Button>\n                        </label>\n                    </Grid>\n                 \n                </Grid>\n                </CardContent>\n                <Divider />\n                <CardActions>\n                {loading ? <Spinner /> : \"\"} <br/>\n                    <Button\n                        type=\"submit\"\n                        color=\"primary\"\n                        variant=\"contained\"\n                    >\n                        Update\n                    </Button>\n                </CardActions>\n            </form>\n         </Card>\n        </DialogContent>\n\n      </Dialog>\n    </div>\n  );\n}\n\nexport default connect(null, { updateHealthTips })(AddHealthTips);"]},"metadata":{},"sourceType":"module"}