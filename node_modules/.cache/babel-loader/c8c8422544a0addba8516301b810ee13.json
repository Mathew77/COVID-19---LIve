{"ast":null,"code":"import _slicedToArray from\"/Users/matosky/pomade-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import PerfectScrollbar from'react-perfect-scrollbar';import{useSelector,useDispatch}from'react-redux';import MaterialTable from'material-table';import{fetchAllRegisterUsers}from'../../actions/users';import VisibilityIcon from'@material-ui/icons/Visibility';import Tooltip from'@material-ui/core/Tooltip';import IconButton from'@material-ui/core/IconButton';import{Link}from'react-router-dom';import{url}from'./../../api';import axios from'axios';var UsersListTable=function UsersListTable(){var ListUsers=useSelector(function(state){return state.listOfUsers.regusers;});var dispatch=useDispatch();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];//console.log(ListUsers)\nuseEffect(function(){setLoading('true');var onSuccess=function onSuccess(){setLoading(false);};var onError=function onError(){setLoading(false);};dispatch(fetchAllRegisterUsers(onSuccess,onError));},[dispatch]);function reslutpost(getCountryId){axios.get(url+\"country/\"+getCountryId).then(function(res){console.log(res.data.name);return res.data.name;});}return/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(MaterialTable,{title:\"List of Register Users\",columns:[{title:\" ID\",field:\"id\"},{title:\"Country\",field:\"country\"},{title:\"IMEI \",field:\"imei\",filtering:false},{title:\"Created\",field:\"created\",filtering:false},{title:\"Address(Lat. & Long)\",field:\"address\",filtering:false},{title:\"Others\",field:\"others\",filtering:false},{title:\"Action\",field:\"actions\",filtering:false}],isLoading:loading,data:ListUsers.map(function(row){return{id:row.id,country:reslutpost(row.country),imei:row.imei,created:row.created,address:row.lng+row.lad,others:'--',actions:/*#__PURE__*/React.createElement(Link,{to:{pathname:\"/\",state:{getpatientlists:{row:row}}},style:{cursor:\"pointer\",color:\"blue\",fontStyle:\"bold\"}},/*#__PURE__*/React.createElement(Tooltip,{title:\"Enter Result\"},/*#__PURE__*/React.createElement(IconButton,{\"aria-label\":\"Enter Result\"},/*#__PURE__*/React.createElement(VisibilityIcon,{color:\"primary\"}))))};}),options:{headerStyle:{backgroundColor:\"#9F9FA5\",color:\"#000\",margin:\"auto\"},filtering:true,exportButton:true}})));};export default UsersListTable;","map":{"version":3,"sources":["/Users/matosky/pomade-covid/src/views/UsersList/UsersListTable.js"],"names":["React","useEffect","useState","PerfectScrollbar","useSelector","useDispatch","MaterialTable","fetchAllRegisterUsers","VisibilityIcon","Tooltip","IconButton","Link","url","axios","UsersListTable","ListUsers","state","listOfUsers","regusers","dispatch","loading","setLoading","onSuccess","onError","reslutpost","getCountryId","get","then","res","console","log","data","name","title","field","filtering","map","row","id","country","imei","created","address","lng","lad","others","actions","pathname","getpatientlists","cursor","color","fontStyle","headerStyle","backgroundColor","margin","exportButton"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport { fetchAllRegisterUsers } from '../../actions/users'\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link } from 'react-router-dom'\nimport {url} from './../../api'\nimport axios from 'axios';\n\nconst UsersListTable = () => {\n  const ListUsers = useSelector(state => state.listOfUsers.regusers);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false)\n  //console.log(ListUsers)\n\n  useEffect(() => {\n      setLoading('true');\n      const onSuccess = () => {\n        setLoading(false)\n      }\n      const onError = () => {\n        setLoading(false)     \n      }\n    dispatch(fetchAllRegisterUsers(onSuccess,onError))\n  }, [dispatch])\n\n  function reslutpost (getCountryId){\n     axios.get(url+\"country/\"+getCountryId)\n    .then(res => {\n      console.log(res.data.name);\n      return res.data.name;\n    })\n}\n\n  return (\n\n        <PerfectScrollbar>\n          <div >\n          <MaterialTable\n        title=\"List of Register Users\"\n        columns={[\n          { title: \" ID\", field: \"id\" },\n          {\n            title: \"Country\",\n            field: \"country\",\n          },\n          \n          {\n            title: \"IMEI \",\n            field: \"imei\",\n            filtering: false\n          },\n          {\n            title: \"Created\",\n            field: \"created\",\n            filtering: false\n          },\n          {\n            title: \"Address(Lat. & Long)\",\n            field: \"address\",\n            filtering: false\n          },\n          {\n            title: \"Others\",\n            field: \"others\",\n            filtering: false\n          },\n          {\n            title: \"Action\",\n            field: \"actions\",\n            filtering: false,\n          },\n        ]}\n        isLoading={loading}\n        data={ListUsers.map((row) => ({\n          id: row.id,\n          country: reslutpost(row.country),          \n          imei: row.imei,\n          created: row.created,\n          address: row.lng + row.lad,\n          others: '--',\n         \n          actions: <Link to ={{ \n                        pathname: \"/\",  \n                        state: { getpatientlists:{row}}\n                        }} \n                        style={{ cursor: \"pointer\", color: \"blue\", \n                        fontStyle: \"bold\" }}>\n                          <Tooltip title=\"Enter Result\">\n                            <IconButton aria-label=\"Enter Result\" >\n                            <VisibilityIcon color=\"primary\"/>\n                          </IconButton>\n                          </Tooltip>\n                        </Link>\n\n            }))}\n        options={{\n        \n          headerStyle: {\n            backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n            margin: \"auto\"\n          },\n          filtering: true,          \n          exportButton: true,\n          \n        }}\n\n      />\n          </div>\n        </PerfectScrollbar>\n     \n  );\n};\n\n\n\nexport default UsersListTable;\n"]},"metadata":{},"sourceType":"module"}