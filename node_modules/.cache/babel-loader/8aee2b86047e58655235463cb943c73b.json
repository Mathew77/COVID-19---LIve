{"ast":null,"code":"import _slicedToArray from \"/Users/matosky/pomade-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/matosky/pomade-covid/src/views/HealthTips/HealthTipsListTable.js\";\nimport React, { useEffect, useState } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport { fetchAllFHealthTips } from '../../actions/healthtips';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst FacilitiesListTable = () => {\n  const healthtipsList = useSelector(state => state.healthtips.list);\n  const dispatch = useDispatch();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  console.log(healthtipsList);\n  useEffect(() => {\n    setLoading('true');\n\n    const onSuccess = () => {\n      setLoading(false);\n    };\n\n    const onError = () => {\n      setLoading(false);\n    };\n\n    dispatch(fetchAllFHealthTips(onSuccess, onError));\n  }, [dispatch]); //const questList = questionsList\n\n  return React.createElement(PerfectScrollbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(MaterialTable, {\n    title: \"List of Health Tips\",\n    columns: [{\n      title: \" ID\",\n      field: \"Id\",\n      filtering: false\n    }, {\n      title: \"Title\",\n      field: \"title\"\n    }, {\n      title: \"Content\",\n      field: \"content\",\n      filtering: false\n    }, {\n      title: \"Type\",\n      field: \"type\",\n      filtering: false\n    }, {\n      title: \"Action\",\n      field: \"actions\",\n      filtering: false\n    }],\n    isLoading: loading,\n    data: healthtipsList.map(row => ({\n      Id: row.id,\n      title: row.title,\n      content: row.content,\n      type: row.healthtiptype === 1 ? \"General Health Tips\" : \"Covid 19 \",\n      actions: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Enter Result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        \"aria-label\": \"Enter Result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(VisibilityIcon, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }))), React.createElement(Tooltip, {\n        title: \"Delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        \"aria-label\": \"Enter Result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(VisibilityIcon, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }))))\n    })),\n    options: {\n      headerStyle: {\n        backgroundColor: \"#9F9FA5\",\n        color: \"#000\",\n        margin: \"auto\"\n      },\n      filtering: true,\n      exportButton: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })));\n};\n\nexport default FacilitiesListTable;","map":{"version":3,"sources":["/Users/matosky/pomade-covid/src/views/HealthTips/HealthTipsListTable.js"],"names":["React","useEffect","useState","PerfectScrollbar","useSelector","useDispatch","MaterialTable","fetchAllFHealthTips","VisibilityIcon","Tooltip","IconButton","FacilitiesListTable","healthtipsList","state","healthtips","list","dispatch","loading","setLoading","console","log","onSuccess","onError","title","field","filtering","map","row","Id","id","content","type","healthtiptype","actions","headerStyle","backgroundColor","color","margin","exportButton"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport { fetchAllFHealthTips } from '../../actions/healthtips'\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nconst FacilitiesListTable = () => {\n  const healthtipsList = useSelector(state => state.healthtips.list);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false)\n console.log(healthtipsList)\n  useEffect(() => {\n      setLoading('true');\n      const onSuccess = () => {\n        setLoading(false)\n      }\n      const onError = () => {\n        setLoading(false)     \n      }\n    dispatch(fetchAllFHealthTips(onSuccess,onError))\n  }, [dispatch])\n  //const questList = questionsList\n\n\n  return (\n\n        <PerfectScrollbar>\n          <div >\n          <MaterialTable\n        title=\"List of Health Tips\"\n        columns={[\n          { title: \" ID\", field: \"Id\",filtering: false },\n          {\n            title: \"Title\",\n            field: \"title\",\n          },\n          \n          {\n            title: \"Content\",\n            field: \"content\",\n            filtering: false\n          },\n          {\n            title: \"Type\",\n            field: \"type\",\n            filtering: false\n          },\n          {\n            title: \"Action\",\n            field: \"actions\",\n            filtering: false,\n          },\n        ]}\n        isLoading={loading}\n        data={healthtipsList.map((row) => ({\n          Id: row.id,\n          title: row.title,          \n          content: row.content,\n          type: row.healthtiptype===1 ? \"General Health Tips\" : \"Covid 19 \",\n          actions: <div> \n                  <Tooltip title=\"Enter Result\">\n                      <IconButton aria-label=\"Enter Result\" >\n                      <VisibilityIcon color=\"primary\"/>\n                    </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Delete\">\n                    <IconButton aria-label=\"Enter Result\" >\n                    <VisibilityIcon color=\"primary\"/>\n                  </IconButton>\n                  </Tooltip>\n                  </div> \n\n            }))}\n        options={{\n        \n          headerStyle: {\n            backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n            margin: \"auto\"\n          },\n          filtering: true,          \n          exportButton: true,\n          \n        }}\n\n      />\n          </div>\n        </PerfectScrollbar>\n     \n  );\n};\n\n\n\nexport default FacilitiesListTable;\n"]},"metadata":{},"sourceType":"module"}