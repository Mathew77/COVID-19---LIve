{"ast":null,"code":"var _jsxFileName = \"/Users/matosky/pomade-covid/src/views/HealthTipsTypes/AddHealthType.js\";\nimport React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport { Card, CardContent, CardActions, Divider, Grid, TextField } from '@material-ui/core';\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Spinner } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { createHealthType } from './../../actions/healthtips';\nimport { useHistory } from \"react-router-dom\";\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  input: {\n    display: 'none'\n  }\n}));\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, children), onClose ? /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })) : null);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\n\nconst AddHealthType = props => {\n  let history = useHistory();\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [values, setValues] = useState({\n    name: \"\"\n  });\n\n  const savehealthtype = e => {\n    e.preventDefault();\n    console.log(values);\n\n    const onSuccess = () => {\n      setLoading(false);\n      history.push(\"/healthtips\");\n      handleClose();\n    };\n\n    const onError = () => {\n      setLoading(false);\n      handleClose();\n    };\n\n    props.createHealthType(values, onSuccess, onError);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ToastContainer, {\n    autoClose: 3000,\n    hideProgressBar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.spacer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, \"Add Tips Type\")), /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: open,\n    fullWidth: \"false\",\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"customized-dialog-title\",\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, \"Add Health Tips Type\"), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    onSubmit: savehealthtype,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Health Type\",\n    id: \"name\",\n    className: classes.textField,\n    helperText: \"Health Type\",\n    onChange: e => setValues({ ...values,\n      name: e.target.value\n    }),\n    variant: \"outlined\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 22\n    }\n  })))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 28\n    }\n  }) : \"\", /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, \"Save\")))))));\n};\n\nexport default connect(null, {\n  createHealthType\n})(AddHealthType);","map":{"version":3,"sources":["/Users/matosky/pomade-covid/src/views/HealthTipsTypes/AddHealthType.js"],"names":["React","useState","withStyles","Dialog","MuiDialogTitle","MuiDialogContent","IconButton","CloseIcon","Typography","makeStyles","Button","Card","CardContent","CardActions","Divider","Grid","TextField","ToastContainer","Spinner","connect","createHealthType","useHistory","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","useStyles","row","height","display","alignItems","marginTop","spacer","flexGrow","input","DialogTitle","props","children","classes","onClose","other","DialogContent","AddHealthType","history","open","setOpen","loading","setLoading","handleClickOpen","handleClose","values","setValues","name","savehealthtype","e","preventDefault","console","log","onSuccess","push","onError","textField","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport {\n    Card,\n    CardContent,\n    CardActions,\n    Divider,\n    Grid,\n    TextField\n  } from '@material-ui/core';\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Spinner } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport {createHealthType} from './../../actions/healthtips'\nimport { useHistory } from \"react-router-dom\"; \n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  \n});\n\nconst useStyles = makeStyles(theme => ({\n    root: {},\n    row: {\n      height: '42px',\n      display: 'flex',\n      alignItems: 'center',\n      marginTop: theme.spacing(1)\n    },\n    spacer: {\n      flexGrow: 1\n    },\n    \n    input: {\n        display: 'none',\n      },\n  }));\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\n\n const  AddHealthType = (props) => {\n  \n  let history = useHistory(); \n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [loading, setLoading] = useState(false)\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [values, setValues] = useState({name:\"\"});\n\n  const savehealthtype = e => {\n    e.preventDefault()\n    console.log(values)\n    const onSuccess = () => {\n        setLoading(false);\n        history.push(\"/healthtips\");\n        handleClose() \n\n\n      }\n      const onError = () => {\n        setLoading(false); \n        handleClose()       \n      }\n      props.createHealthType(values, onSuccess,onError)\n  }\n\n\n  return (\n    <div>\n    <ToastContainer autoClose={3000} hideProgressBar />\n      <div className={classes.row}>\n      <span className={classes.spacer} />\n      <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={handleClickOpen}\n        >\n         Add Tips Type\n        </Button>\n        \n      </div>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}\n            fullWidth='false'\n            maxWidth='sm'\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Add Health Tips Type\n        </DialogTitle>\n        <DialogContent dividers>\n        <Card>\n            <form\n                autoComplete=\"off\"\n                noValidate\n                onSubmit={savehealthtype}\n            >\n               \n                <CardContent>\n\n                <Grid\n                    container\n                    spacing={3}\n                >\n                   \n                    <Grid\n                    item\n                    md={12}\n                    xs={12}\n                    >\n                    \n                     <TextField\n                        fullWidth\n                        label=\"Health Type\"\n                        id=\"name\"\n                        className={classes.textField}\n                        helperText=\"Health Type\"\n                        onChange={e =>\n                            setValues({\n                              ...values,\n                              name: e.target.value\n                            })\n                          }\n                        variant=\"outlined\"\n                        type=\"text\"\n                       \n                    />\n                    </Grid>\n                   \n                 \n                </Grid>\n                </CardContent>\n                <Divider />\n                <CardActions>\n                {loading ? <Spinner /> : \"\"}\n\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        type='submit'\n                    >\n                        Save\n                    </Button>\n                 \n                </CardActions>\n            </form>\n         </Card>\n        </DialogContent>\n\n      </Dialog>\n    </div>\n  );\n}\n\n\nexport default connect(null, { createHealthType })(AddHealthType);\n\n\n"]},"metadata":{},"sourceType":"module"}