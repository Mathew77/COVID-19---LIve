{"ast":null,"code":"import _objectSpread from\"/Users/matosky/pomade-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/matosky/pomade-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import PerfectScrollbar from'react-perfect-scrollbar';import{useSelector,useDispatch}from'react-redux';import MaterialTable from'material-table';import{fetchAllFHealthTips}from'../../actions/healthtips';import{FaPencilAlt,FaTrashAlt}from'react-icons/fa';import{Menu,MenuList,MenuButton,MenuItem}from\"@reach/menu-button\";import\"@reach/menu-button/styles.css\";import ModalDelete from'./ActionModal/ModalDelete';import ModalEdit from'./ActionModal/ModalEdit';var FacilitiesListTable=function FacilitiesListTable(props){console.log(props);var healthtipsList=useSelector(function(state){return state.healthtips.list;});var dispatch=useDispatch();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),collectmodal=_useState4[0],setcollectmodal=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),open=_useState6[0],setOpen=_useState6[1];var handleClose=function handleClose(){setOpen(false);};var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),open2=_useState8[0],setOpen2=_useState8[1];var handleClose2=function handleClose2(){setOpen2(false);};console.log(healthtipsList);useEffect(function(){setLoading('true');var onSuccess=function onSuccess(){setLoading(false);};var onError=function onError(){setLoading(false);};dispatch(fetchAllFHealthTips(onSuccess,onError));},[dispatch]);//const questList = questionsList\nvar editDetail=function editDetail(detail){console.log(detail);setOpen2(true);setcollectmodal(_objectSpread(_objectSpread({},collectmodal),detail));};var deleteDetail=function deleteDetail(detail){setOpen(true);setcollectmodal(_objectSpread(_objectSpread({},collectmodal),detail));};var actionButtons=function actionButtons(e){return/*#__PURE__*/React.createElement(Menu,null,/*#__PURE__*/React.createElement(MenuButton,{style:{backgroundColor:\"#3F51B5\",fontSize:\"16px\",color:\"#fff\",border:\"2px solid #3F51B5\",borderRadius:\"4px\",width:\"80px\",heigth:\"80px\"}},\"Actions \",/*#__PURE__*/React.createElement(\"span\",{\"aria-hidden\":true},\"\\u25BE\")),/*#__PURE__*/React.createElement(MenuList,{style:{hover:\"#eee\"}},/*#__PURE__*/React.createElement(MenuItem,{onSelect:function onSelect(){return editDetail(e);}},/*#__PURE__*/React.createElement(FaPencilAlt,{color:\"primary\",size:\"15px\"}),\" \",\" Edit\"),/*#__PURE__*/React.createElement(MenuItem,{onSelect:function onSelect(){return deleteDetail(e);}},/*#__PURE__*/React.createElement(FaTrashAlt,{color:\"primary\",size:\"15px\"}),\" \",\"Delete\")));};return/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(MaterialTable,{title:\"List of Health Tips\",columns:[{title:\" ID\",field:\"Id\",filtering:false},{title:\"Title\",field:\"title\",filtering:false},{title:\"Content\",field:\"content\",filtering:false},{title:\"Type\",field:\"type\",filtering:false},{title:\"Action\",field:\"actions\",filtering:false}],isLoading:loading,data:healthtipsList.map(function(row){return{Id:row.id,title:row.title,content:row.content,type:row.healthtiptype===1?\"General Health Tips\":\"Covid 19 \",actions:actionButtons(row)};}),options:{headerStyle:{backgroundColor:\"#9F9FA5\",color:\"#000\",margin:\"auto\"},filtering:true,exportButton:true}}),/*#__PURE__*/React.createElement(ModalDelete,{open:open,handleClose:handleClose,tips:collectmodal}),/*#__PURE__*/React.createElement(ModalEdit,{open:open2,handleClose:handleClose2,tips:collectmodal})));};export default FacilitiesListTable;","map":{"version":3,"sources":["/Users/matosky/pomade-covid/src/views/HealthTips/HealthTipsListTable.js"],"names":["React","useEffect","useState","PerfectScrollbar","useSelector","useDispatch","MaterialTable","fetchAllFHealthTips","FaPencilAlt","FaTrashAlt","Menu","MenuList","MenuButton","MenuItem","ModalDelete","ModalEdit","FacilitiesListTable","props","console","log","healthtipsList","state","healthtips","list","dispatch","loading","setLoading","collectmodal","setcollectmodal","open","setOpen","handleClose","open2","setOpen2","handleClose2","onSuccess","onError","editDetail","detail","deleteDetail","actionButtons","e","backgroundColor","fontSize","color","border","borderRadius","width","heigth","hover","title","field","filtering","map","row","Id","id","content","type","healthtiptype","actions","headerStyle","margin","exportButton"],"mappings":"mSAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,yBAA7B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,aAAP,KAA0B,gBAA1B,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,OAASC,WAAT,CAAsBC,UAAtB,KAAwC,gBAAxC,CACA,OACEC,IADF,CAEEC,QAFF,CAGEC,UAHF,CAIEC,QAJF,KAKO,oBALP,CAMA,MAAO,+BAAP,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAGA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,KAAD,CAAW,CACrCC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,GAAMG,CAAAA,cAAc,CAAGhB,WAAW,CAAC,SAAAiB,KAAK,QAAIA,CAAAA,KAAK,CAACC,UAAN,CAAiBC,IAArB,EAAN,CAAlC,CACA,GAAMC,CAAAA,QAAQ,CAAGnB,WAAW,EAA5B,CAHqC,cAIPH,QAAQ,CAAC,KAAD,CAJD,wCAI9BuB,OAJ8B,eAIrBC,UAJqB,8BAKGxB,QAAQ,CAAC,EAAD,CALX,yCAK9ByB,YAL8B,eAKhBC,eALgB,8BAMb1B,QAAQ,CAAC,KAAD,CANK,yCAM9B2B,IAN8B,eAMxBC,OANwB,eAOrC,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CAACD,OAAO,CAAC,KAAD,CAAP,CAAe,CAA1C,CAPqC,eAQX5B,QAAQ,CAAC,KAAD,CARG,yCAQ9B8B,KAR8B,eAQvBC,QARuB,eASrC,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CAACD,QAAQ,CAAC,KAAD,CAAR,CAAgB,CAA5C,CACAf,OAAO,CAACC,GAAR,CAAYC,cAAZ,EACAnB,SAAS,CAAC,UAAM,CACZyB,UAAU,CAAC,MAAD,CAAV,CACA,GAAMS,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBT,UAAU,CAAC,KAAD,CAAV,CACD,CAFD,CAGA,GAAMU,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpBV,UAAU,CAAC,KAAD,CAAV,CACD,CAFD,CAGFF,QAAQ,CAACjB,mBAAmB,CAAC4B,SAAD,CAAWC,OAAX,CAApB,CAAR,CACD,CATQ,CASN,CAACZ,QAAD,CATM,CAAT,CAUA;AAEF,GAAMa,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,MAAD,CAAW,CAC5BpB,OAAO,CAACC,GAAR,CAAYmB,MAAZ,EACAL,QAAQ,CAAC,IAAD,CAAR,CACAL,eAAe,gCAAKD,YAAL,EAAsBW,MAAtB,EAAf,CACD,CAJD,CAKA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACD,MAAD,CAAW,CAC9BR,OAAO,CAAC,IAAD,CAAP,CACAF,eAAe,gCAAKD,YAAL,EAAsBW,MAAtB,EAAf,CACD,CAHD,CAMA,GAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAM,CAE1B,mBAEI,oBAAC,IAAD,mBACI,oBAAC,UAAD,EAAY,KAAK,CAAE,CAAEC,eAAe,CAAC,SAAlB,CAA6BC,QAAQ,CAAC,MAAtC,CAA8CC,KAAK,CAAC,MAApD,CAA4DC,MAAM,CAAC,mBAAnE,CAAwFC,YAAY,CAAC,KAArG,CAA4GC,KAAK,CAAC,MAAlH,CAA0HC,MAAM,CAAC,MAAjI,CAAnB,0BACU,4BAAM,kBAAN,WADV,CADJ,cAII,oBAAC,QAAD,EAAU,KAAK,CAAE,CAACC,KAAK,CAAC,MAAP,CAAjB,eACE,oBAAC,QAAD,EAAU,QAAQ,CAAE,0BAAMZ,CAAAA,UAAU,CAACI,CAAD,CAAhB,EAApB,eAAyC,oBAAC,WAAD,EAAa,KAAK,CAAC,SAAnB,CAA6B,IAAI,CAAC,MAAlC,EAAzC,CAAoF,GAApF,SADF,cAEE,oBAAC,QAAD,EAAU,QAAQ,CAAE,0BAAMF,CAAAA,YAAY,CAACE,CAAD,CAAlB,EAApB,eAA2C,oBAAC,UAAD,EAAY,KAAK,CAAC,SAAlB,CAA4B,IAAI,CAAC,MAAjC,EAA3C,CAAqF,GAArF,UAFF,CAJJ,CAFJ,CAcD,CAhBD,CAiBE,mBAEM,oBAAC,gBAAD,mBACE,4CACA,oBAAC,aAAD,EACF,KAAK,CAAC,qBADJ,CAEF,OAAO,CAAE,CACP,CAAES,KAAK,CAAE,KAAT,CAAgBC,KAAK,CAAE,IAAvB,CAA4BC,SAAS,CAAE,KAAvC,CADO,CAEP,CACEF,KAAK,CAAE,OADT,CAEEC,KAAK,CAAE,OAFT,CAGEC,SAAS,CAAE,KAHb,CAFO,CAQP,CACEF,KAAK,CAAE,SADT,CAEEC,KAAK,CAAE,SAFT,CAGEC,SAAS,CAAE,KAHb,CARO,CAaP,CACEF,KAAK,CAAE,MADT,CAEEC,KAAK,CAAE,MAFT,CAGEC,SAAS,CAAE,KAHb,CAbO,CAkBP,CACEF,KAAK,CAAE,QADT,CAEEC,KAAK,CAAE,SAFT,CAGEC,SAAS,CAAE,KAHb,CAlBO,CAFP,CA0BF,SAAS,CAAE3B,OA1BT,CA2BF,IAAI,CAAEL,cAAc,CAACiC,GAAf,CAAmB,SAACC,GAAD,QAAU,CACjCC,EAAE,CAAED,GAAG,CAACE,EADyB,CAEjCN,KAAK,CAAEI,GAAG,CAACJ,KAFsB,CAGjCO,OAAO,CAAEH,GAAG,CAACG,OAHoB,CAIjCC,IAAI,CAAEJ,GAAG,CAACK,aAAJ,GAAoB,CAApB,CAAwB,qBAAxB,CAAgD,WAJrB,CAKjCC,OAAO,CAAEpB,aAAa,CAACc,GAAD,CALW,CAAV,EAAnB,CA3BJ,CAmCF,OAAO,CAAE,CAEPO,WAAW,CAAE,CACXnB,eAAe,CAAE,SADN,CAEXE,KAAK,CAAE,MAFI,CAGXkB,MAAM,CAAE,MAHG,CAFN,CAOPV,SAAS,CAAE,IAPJ,CAQPW,YAAY,CAAE,IARP,CAnCP,EADA,cAiDJ,oBAAC,WAAD,EAAa,IAAI,CAAElC,IAAnB,CAAyB,WAAW,CAAEE,WAAtC,CAAmD,IAAI,CAAEJ,YAAzD,EAjDI,cAkDJ,oBAAC,SAAD,EAAW,IAAI,CAAEK,KAAjB,CAAwB,WAAW,CAAEE,YAArC,CAAmD,IAAI,CAAEP,YAAzD,EAlDI,CADF,CAFN,CA2DD,CA9GD,CAmHA,cAAeX,CAAAA,mBAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport { fetchAllFHealthTips } from '../../actions/healthtips'\nimport { FaPencilAlt, FaTrashAlt } from 'react-icons/fa';\nimport {\n  Menu,\n  MenuList,\n  MenuButton,\n  MenuItem,\n} from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\nimport ModalDelete from './ActionModal/ModalDelete';\nimport ModalEdit from './ActionModal/ModalEdit';\n\n\nconst FacilitiesListTable = (props) => {\n  console.log(props)\n  const healthtipsList = useSelector(state => state.healthtips.list);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false)\n  const [collectmodal, setcollectmodal] = useState([])\n  const [open, setOpen] = useState(false);\n  const handleClose = () => {setOpen(false)};\n  const [open2, setOpen2] = useState(false);\n  const handleClose2 = () => {setOpen2(false)};\n  console.log(healthtipsList)\n  useEffect(() => {\n      setLoading('true');\n      const onSuccess = () => {\n        setLoading(false)\n      }\n      const onError = () => {\n        setLoading(false)     \n      }\n    dispatch(fetchAllFHealthTips(onSuccess,onError))\n  }, [dispatch])\n  //const questList = questionsList\n\nconst editDetail = (detail) =>{\n  console.log(detail)\n  setOpen2(true);\n  setcollectmodal({...collectmodal, ...detail});\n}\nconst deleteDetail = (detail) =>{\n  setOpen(true);\n  setcollectmodal({...collectmodal, ...detail});\n}\n\n\nconst actionButtons = (e) =>{\n\n  return (\n\n      <Menu>\n          <MenuButton style={{ backgroundColor:\"#3F51B5\", fontSize:\"16px\", color:\"#fff\", border:\"2px solid #3F51B5\", borderRadius:\"4px\", width:\"80px\", heigth:\"80px\"}}>\n            Actions <span aria-hidden>▾</span>\n          </MenuButton>\n          <MenuList style={{hover:\"#eee\"}}>\n            <MenuItem onSelect={() => editDetail(e)}><FaPencilAlt color=\"primary\" size=\"15px\"/>{\" \"} Edit</MenuItem>                         \n            <MenuItem onSelect={() => deleteDetail(e)}><FaTrashAlt color=\"primary\" size=\"15px\"/>{\" \"}Delete</MenuItem>\n             \n          </MenuList>\n      </Menu>\n      )\n\n}\n  return (\n\n        <PerfectScrollbar>\n          <div >\n          <MaterialTable\n        title=\"List of Health Tips\"\n        columns={[\n          { title: \" ID\", field: \"Id\",filtering: false },\n          {\n            title: \"Title\",\n            field: \"title\",\n            filtering: false\n          },\n          \n          {\n            title: \"Content\",\n            field: \"content\",\n            filtering: false\n          },\n          {\n            title: \"Type\",\n            field: \"type\",\n            filtering: false\n          },\n          {\n            title: \"Action\",\n            field: \"actions\",\n            filtering: false,\n          },\n        ]}\n        isLoading={loading}\n        data={healthtipsList.map((row) => ({\n          Id: row.id,\n          title: row.title,          \n          content: row.content,\n          type: row.healthtiptype===1 ? \"General Health Tips\" : \"Covid 19 \",\n          actions: actionButtons(row)\n\n            }))}\n        options={{\n        \n          headerStyle: {\n            backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n            margin: \"auto\"\n          },\n          filtering: true,          \n          exportButton: true,\n          \n        }}\n\n      />\n      <ModalDelete open={open} handleClose={handleClose} tips={collectmodal} />\n      <ModalEdit open={open2} handleClose={handleClose2} tips={collectmodal} />\n      </div>\n    </PerfectScrollbar>\n     \n  );\n  \n};\n\n\n\n\nexport default FacilitiesListTable;\n"]},"metadata":{},"sourceType":"module"}