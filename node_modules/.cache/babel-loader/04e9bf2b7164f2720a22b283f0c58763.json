{"ast":null,"code":"var _jsxFileName = \"/Users/matosky/pomade-covid/src/views/HealthTips/ActionModal/ModalEdit.js\";\nimport React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport { Card, CardContent, CardActions, Divider, Grid, TextField } from '@material-ui/core';\nimport axios from 'axios';\nimport { url } from './../../../api';\nimport { Spinner } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { updateHealthTips } from './../../../actions/healthtips';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  input: {\n    display: 'none'\n  }\n}));\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, children), onClose ? /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })) : null);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\n\nconst AddHealthTips = props => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    \"title\": \"\",\n    \"content\": \"\",\n    \"imagepath\": \"\",\n    \"healthtiptype\": 1,\n    \"language\": 1\n  });\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(url + 'healthtiptypes');\n      setData(result.data);\n    };\n\n    fetchData();\n  }, []);\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const savehealthtip = e => {\n    e.preventDefault();\n\n    const onSuccess = () => {\n      setLoading(false);\n      props.handleClose();\n    };\n\n    const onError = () => {\n      setLoading(false);\n      props.handleClose();\n    };\n\n    props.tips.title = values.title !== props.tips.title ? values.title : props.tips.title;\n    props.tips.content = values.content !== props.tips.content ? values.title : props.tips.content;\n    props.tips.healthtiptype = values.healthtiptype !== props.tips.healthtiptype ? values.healthtiptype : props.tips.healthtiptype;\n    props.tips.imagepath = values.imagepath !== props.tips.imagepath ? values.imagepath : props.tips.imagepath;\n    props.tips.language = values.language !== props.tips.language ? values.language : props.tips.language;\n    props.updateHealthTips(props.tips, props.tips.id, onSuccess, onError);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    onClose: props.handleClose,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: props.open,\n    fullWidth: \"false\",\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"customized-dialog-title\",\n    onClose: props.handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \"Update Health Tips\"), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    onSubmit: savehealthtip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Title\",\n    margin: \"dense\",\n    name: \"title\",\n    onChange: handleChange,\n    required: true,\n    defaultValue: props.tips.title,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Select Type\",\n    margin: \"dense\",\n    name: \"healthtiptype\",\n    onChange: handleChange,\n    required: true,\n    select: true,\n    SelectProps: {\n      native: true\n    },\n    defaultValue: props.tips.healthtiptype,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }, \" \"), data.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option.id,\n    value: option.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 29\n    }\n  }, option.name)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    helperText: \"Please enter the health tips here \",\n    margin: \"dense\",\n    name: \"content\",\n    onChange: handleChange,\n    required: true,\n    id: \"filled-textarea\",\n    label: \"Health Tip Content \",\n    placeholder: \"Please enter content here \",\n    multiline: true,\n    variant: \"filled\",\n    defaultValue: props.tips.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    accept: \"image/*\",\n    className: classes.input,\n    id: \"imagepath\",\n    multiple: true,\n    type: \"file\",\n    onChange: handleChange,\n    defaultValue: props.tips.imagepath,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"contained-button-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"default\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 29\n    }\n  }, \"Upload image\"))))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 28\n    }\n  }) : \"\", \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 46\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 21\n    }\n  }, \"Update\")))))));\n};\n\nexport default connect(null, {\n  updateHealthTips\n})(AddHealthTips);","map":{"version":3,"sources":["/Users/matosky/pomade-covid/src/views/HealthTips/ActionModal/ModalEdit.js"],"names":["React","useState","useEffect","withStyles","Dialog","MuiDialogTitle","MuiDialogContent","IconButton","CloseIcon","Typography","makeStyles","Button","Card","CardContent","CardActions","Divider","Grid","TextField","axios","url","Spinner","connect","updateHealthTips","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","useStyles","row","height","display","alignItems","marginTop","spacer","flexGrow","input","DialogTitle","props","children","classes","onClose","other","DialogContent","AddHealthTips","values","setValues","data","setData","loading","setLoading","fetchData","result","handleChange","event","target","name","value","savehealthtip","e","preventDefault","onSuccess","handleClose","onError","tips","title","content","healthtiptype","imagepath","language","id","open","native","map","option"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport {\n    Card,\n    CardContent,\n    CardActions,\n    Divider,\n    Grid,\n    TextField\n  } from '@material-ui/core';\nimport axios from 'axios';\nimport {url} from './../../../api'\nimport { Spinner } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { updateHealthTips } from './../../../actions/healthtips'\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  \n});\n\nconst useStyles = makeStyles(theme => ({\n    root: {},\n    row: {\n      height: '42px',\n      display: 'flex',\n      alignItems: 'center',\n      marginTop: theme.spacing(1)\n    },\n    spacer: {\n      flexGrow: 1\n    },\n    \n    input: {\n        display: 'none',\n      },\n  }));\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\n\nconst AddHealthTips = (props) =>{\n  const classes = useStyles();\n  const [values, setValues] = useState({ \"title\": \"\",\n                                        \"content\": \"\",\n                                        \"imagepath\": \"\",\n                                        \"healthtiptype\":1,\n                                        \"language\": 1\n                                        });\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false)\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        url+'healthtiptypes',\n      );\n      setData(result.data);\n    };\n \n    fetchData();\n  }, []);\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const savehealthtip = e => {\n    e.preventDefault()\n    const onSuccess = () => {\n        setLoading(false);\n        props.handleClose()       \n      }\n      const onError = () => {\n        setLoading(false); \n        props.handleClose()       \n      }\n      props.tips.title = values.title !== props.tips.title ? values.title : props.tips.title ;\n      props.tips.content = values.content !== props.tips.content ? values.title : props.tips.content ;\n      props.tips.healthtiptype = values.healthtiptype !== props.tips.healthtiptype ? values.healthtiptype : props.tips.healthtiptype ;\n      props.tips.imagepath = values.imagepath !== props.tips.imagepath ? values.imagepath :props.tips.imagepath ;\n      props.tips.language = values.language !== props.tips.language ? values.language :props.tips.language ;\n      props.updateHealthTips(props.tips,props.tips.id, onSuccess,onError)\n  }\n\n\n\n  return (\n    <div>\n\n      <Dialog onClose={props.handleClose} aria-labelledby=\"customized-dialog-title\" open={props.open}\n            fullWidth='false'\n            maxWidth='sm'\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={props.handleClose}>\n          Update Health Tips\n        </DialogTitle>\n        <DialogContent dividers>\n        <Card>\n            <form\n                autoComplete=\"off\"\n                noValidate\n                onSubmit={savehealthtip}\n            >\n               \n                <CardContent>\n\n                <Grid\n                    container\n                    spacing={3}\n                >\n                <Grid\n                    item\n                    md={12}\n                    xs={12}\n                    >\n                    <TextField\n                        fullWidth\n                    \n                        label=\"Title\"\n                        margin=\"dense\"\n                        name=\"title\"\n                        onChange={handleChange}\n                        required\n                        defaultValue={props.tips.title}\n                        variant=\"outlined\"\n                    />\n                     \n                    </Grid>\n                    <Grid\n                    item\n                    md={12}\n                    xs={12}\n                    >\n                    <TextField\n                        fullWidth\n                        label=\"Select Type\"\n                        margin=\"dense\"\n                        name=\"healthtiptype\"\n                        onChange={handleChange}\n                        required\n                        select\n                       \n                        SelectProps={{ native: true }}\n                        defaultValue={props.tips.healthtiptype}\n                        variant=\"outlined\"\n                    >\n                        <option > </option>\n                        {data.map(option => (\n                            <option\n                                key={option.id}\n                                value={option.id}\n                            >\n                                {option.name}\n                            </option>\n                            ))}\n                    </TextField>\n                    </Grid>\n                    <Grid\n                    item\n                    md={12}\n                    xs={12}\n                    >\n                    <TextField\n                        fullWidth\n                        helperText=\"Please enter the health tips here \"\n                        margin=\"dense\"\n                        name=\"content\"\n                        onChange={handleChange}\n                        required\n                        id=\"filled-textarea\"\n                        label=\"Health Tip Content \"\n                        placeholder=\"Please enter content here \"\n                        multiline\n                        variant=\"filled\"\n                        defaultValue={props.tips.content}\n                    />\n                    </Grid>\n                    <Grid\n                    item\n                    md={6}\n                    xs={12}\n                    >\n                     <input\n                            accept=\"image/*\"\n                            className={classes.input}\n                            id=\"imagepath\"\n                            multiple\n                            type=\"file\"\n                            onChange={handleChange}\n                            defaultValue={props.tips.imagepath}\n                        />\n                        <label htmlFor=\"contained-button-file\">\n                            <Button variant=\"contained\" color=\"default\" component=\"span\">\n                                Upload image\n                            </Button>\n                        </label>\n                    </Grid>\n                 \n                </Grid>\n                </CardContent>\n                <Divider />\n                <CardActions>\n                {loading ? <Spinner /> : \"\"} <br/>\n                    <Button\n                        type=\"submit\"\n                        color=\"primary\"\n                        variant=\"contained\"\n                    >\n                        Update\n                    </Button>\n                </CardActions>\n            </form>\n         </Card>\n        </DialogContent>\n\n      </Dialog>\n    </div>\n  );\n}\n\nexport default connect(null, { updateHealthTips })(AddHealthTips);"]},"metadata":{},"sourceType":"module"}