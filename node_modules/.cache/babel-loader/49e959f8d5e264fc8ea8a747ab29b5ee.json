{"ast":null,"code":"import _slicedToArray from \"/Users/matosky/pomade-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/matosky/pomade-covid/src/views/HealthTips/HealthTipsListTable.js\";\nimport React, { useEffect, useState } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport { fetchAllFHealthTips } from '../../actions/healthtips';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\n\nconst FacilitiesListTable = () => {\n  const healthtipsList = useSelector(state => state.healthtips.list);\n  const dispatch = useDispatch();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  console.log(healthtipsList);\n  useEffect(() => {\n    setLoading('true');\n\n    const onSuccess = () => {\n      setLoading(false);\n    };\n\n    const onError = () => {\n      setLoading(false);\n    };\n\n    dispatch(fetchAllFHealthTips(onSuccess, onError));\n  }, [dispatch]); //const questList = questionsList\n\n  const viewDetail = detail => {\n    console.log(detail);\n  };\n\n  const editDetail = detail => {\n    console.log(detail);\n  };\n\n  const deleteDetail = detail => {\n    console.log(detail);\n  };\n\n  const actionButtons = e => {\n    return React.createElement(Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(MenuButton, {\n      style: {\n        backgroundColor: \"#3F51B5\",\n        color: \"#fff\",\n        border: \"2px solid #3F51B5\",\n        borderRadius: \"4px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Action \", React.createElement(\"span\", {\n      \"aria-hidden\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"\\u25BE\")), React.createElement(MenuList, {\n      style: {\n        hover: \"#eee\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      onSelect: () => viewDetail(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(VisibilityIcon, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), \" \", \"View Detaisl\"), React.createElement(MenuItem, {\n      onSelect: () => editDetail(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(BorderColorIcon, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), \" \", \" Transfer Sample\"), React.createElement(MenuItem, {\n      onSelect: () => deleteDetail(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(DeleteForeverIcon, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), \" \", \"View Result\")));\n  };\n\n  return React.createElement(PerfectScrollbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(MaterialTable, {\n    title: \"List of Health Tips\",\n    columns: [{\n      title: \" ID\",\n      field: \"Id\",\n      filtering: false\n    }, {\n      title: \"Title\",\n      field: \"title\",\n      filtering: false\n    }, {\n      title: \"Content\",\n      field: \"content\",\n      filtering: false\n    }, {\n      title: \"Type\",\n      field: \"type\",\n      filtering: false\n    }, {\n      title: \"Action\",\n      field: \"actions\",\n      filtering: false\n    }],\n    isLoading: loading,\n    data: healthtipsList.map(row => ({\n      Id: row.id,\n      title: row.title,\n      content: row.content,\n      type: row.healthtiptype === 1 ? \"General Health Tips\" : \"Covid 19 \",\n      actions: actionButtons(row)\n    })),\n    options: {\n      headerStyle: {\n        backgroundColor: \"#9F9FA5\",\n        color: \"#000\",\n        margin: \"auto\"\n      },\n      filtering: true,\n      exportButton: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })));\n};\n\nexport default FacilitiesListTable;","map":{"version":3,"sources":["/Users/matosky/pomade-covid/src/views/HealthTips/HealthTipsListTable.js"],"names":["React","useEffect","useState","PerfectScrollbar","useSelector","useDispatch","MaterialTable","fetchAllFHealthTips","VisibilityIcon","DeleteForeverIcon","BorderColorIcon","Menu","MenuList","MenuButton","MenuItem","FacilitiesListTable","healthtipsList","state","healthtips","list","dispatch","loading","setLoading","console","log","onSuccess","onError","viewDetail","detail","editDetail","deleteDetail","actionButtons","e","backgroundColor","color","border","borderRadius","hover","title","field","filtering","map","row","Id","id","content","type","healthtiptype","actions","headerStyle","margin","exportButton"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport { fetchAllFHealthTips } from '../../actions/healthtips'\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport {\n  Menu,\n  MenuList,\n  MenuButton,\n  MenuItem,\n} from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\n\nconst FacilitiesListTable = () => {\n  const healthtipsList = useSelector(state => state.healthtips.list);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false)\n console.log(healthtipsList)\n  useEffect(() => {\n      setLoading('true');\n      const onSuccess = () => {\n        setLoading(false)\n      }\n      const onError = () => {\n        setLoading(false)     \n      }\n    dispatch(fetchAllFHealthTips(onSuccess,onError))\n  }, [dispatch])\n  //const questList = questionsList\nconst viewDetail = (detail) =>{\n      console.log(detail)\n}\nconst editDetail = (detail) =>{\n  console.log(detail)\n}\nconst deleteDetail = (detail) =>{\n  console.log(detail)\n}\n\n\nconst actionButtons = (e) =>{\n\n  return (\n\n      <Menu>\n          <MenuButton style={{ backgroundColor:\"#3F51B5\", color:\"#fff\", border:\"2px solid #3F51B5\", borderRadius:\"4px\"}}>\n            Action <span aria-hidden>▾</span>\n          </MenuButton>\n          <MenuList style={{hover:\"#eee\"}}>\n            <MenuItem onSelect={() => viewDetail(e)}><VisibilityIcon color=\"primary\"/>{\" \"}View Detaisl</MenuItem>\n            <MenuItem onSelect={() => editDetail(e)}><BorderColorIcon color=\"primary\"/>{\" \"} Transfer Sample</MenuItem>             \n            \n            <MenuItem onSelect={() => deleteDetail(e)}><DeleteForeverIcon color=\"primary\"/>{\" \"}View Result</MenuItem>\n             \n          </MenuList>\n      </Menu>\n      )\n\n}\n  return (\n\n        <PerfectScrollbar>\n          <div >\n          <MaterialTable\n        title=\"List of Health Tips\"\n        columns={[\n          { title: \" ID\", field: \"Id\",filtering: false },\n          {\n            title: \"Title\",\n            field: \"title\",\n            filtering: false\n          },\n          \n          {\n            title: \"Content\",\n            field: \"content\",\n            filtering: false\n          },\n          {\n            title: \"Type\",\n            field: \"type\",\n            filtering: false\n          },\n          {\n            title: \"Action\",\n            field: \"actions\",\n            filtering: false,\n          },\n        ]}\n        isLoading={loading}\n        data={healthtipsList.map((row) => ({\n          Id: row.id,\n          title: row.title,          \n          content: row.content,\n          type: row.healthtiptype===1 ? \"General Health Tips\" : \"Covid 19 \",\n          actions: actionButtons(row)\n\n            }))}\n        options={{\n        \n          headerStyle: {\n            backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n            margin: \"auto\"\n          },\n          filtering: true,          \n          exportButton: true,\n          \n        }}\n\n      />\n          </div>\n        </PerfectScrollbar>\n     \n  );\n};\n\n\n\nexport default FacilitiesListTable;\n"]},"metadata":{},"sourceType":"module"}