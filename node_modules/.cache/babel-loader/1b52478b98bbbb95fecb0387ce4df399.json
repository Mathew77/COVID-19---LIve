{"ast":null,"code":"import axios from\"axios\";import{url as baseUrl}from\"../api\";import*as ACTION_TYPES from\"./types\";/**\n * @Actions\n * CheckIn CRUD OPERATIONS\n * returns API response from server\n * =================================\n * fetchAll()\n * fetchById()\n * create()\n * update()\n * Delete()\n */export var fetchAllQuestions=function fetchAllQuestions(onSuccess,onError){return function(dispatch){axios.get(\"\".concat(baseUrl,\"questions\")).then(function(response){dispatch({type:ACTION_TYPES.FETCH_ALL_QUESTIONS,payload:response.data});console.log(response);onSuccess();}).catch(function(error){onError();console.log(error);});};};","map":{"version":3,"sources":["/Users/matosky/pomade-covid/src/actions/questions.js"],"names":["axios","url","baseUrl","ACTION_TYPES","fetchAllQuestions","onSuccess","onError","dispatch","get","then","response","type","FETCH_ALL_QUESTIONS","payload","data","console","log","catch","error"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAG,GAAIC,CAAAA,OAAhB,KAA+B,QAA/B,CACA,MAAO,GAAKC,CAAAA,YAAZ,KAA8B,SAA9B,CAGA;;;;;;;;;;GAYA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,SAAD,CAAYC,OAAZ,QAAwB,UAAAC,QAAQ,CAAI,CAEnEP,KAAK,CACFQ,GADH,WACUN,OADV,eAEGO,IAFH,CAEQ,SAAAC,QAAQ,CAAI,CAChBH,QAAQ,CAAC,CACPI,IAAI,CAAER,YAAY,CAACS,mBADZ,CAEPC,OAAO,CAAEH,QAAQ,CAACI,IAFX,CAAD,CAAR,CAIAC,OAAO,CAACC,GAAR,CAAYN,QAAZ,EACAL,SAAS,GACV,CATH,EAUGY,KAVH,CAUS,SAAAC,KAAK,CAAI,CACdZ,OAAO,GACPS,OAAO,CAACC,GAAR,CAAYE,KAAZ,EACD,CAbH,EAcD,CAhBgC,EAA1B","sourcesContent":["import axios from \"axios\";\nimport { url as baseUrl } from \"../api\";\nimport * as ACTION_TYPES from \"./types\";\n\n\n/**\n * @Actions\n * CheckIn CRUD OPERATIONS\n * returns API response from server\n * =================================\n * fetchAll()\n * fetchById()\n * create()\n * update()\n * Delete()\n */\n\nexport const fetchAllQuestions = (onSuccess, onError) => dispatch => {\n\n  axios\n    .get(`${baseUrl}questions`)\n    .then(response => {\n      dispatch({\n        type: ACTION_TYPES.FETCH_ALL_QUESTIONS,\n        payload: response.data\n      })\n      console.log(response)\n      onSuccess();\n    })\n    .catch(error => {\n      onError();\n      console.log(error)\n    });\n};\n"]},"metadata":{},"sourceType":"module"}