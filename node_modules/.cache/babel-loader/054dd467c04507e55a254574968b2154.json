{"ast":null,"code":"import _slicedToArray from \"/Users/matosky/pomade-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/matosky/pomade-covid/src/views/HealthTips/HealthTipsListTable.js\";\nimport React, { useEffect, useState } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport { fetchAllFHealthTips } from '../../actions/healthtips';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\n\nconst FacilitiesListTable = () => {\n  const healthtipsList = useSelector(state => state.healthtips.list);\n  const dispatch = useDispatch();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  console.log(healthtipsList);\n  useEffect(() => {\n    setLoading('true');\n\n    const onSuccess = () => {\n      setLoading(false);\n    };\n\n    const onError = () => {\n      setLoading(false);\n    };\n\n    dispatch(fetchAllFHealthTips(onSuccess, onError));\n  }, [dispatch]); //const questList = questionsList\n\n  const viewDetail = detail => {\n    console.log(detail);\n  };\n\n  const editDetail = detail => {\n    console.log(detail);\n  };\n\n  const deleteDetail = detail => {\n    console.log(detail);\n  };\n\n  const Action = e => {\n    return React.createElement(Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(MenuButton, {\n      style: {\n        backgroundColor: \"#3F51B5\",\n        color: \"#fff\",\n        border: \"2px solid #3F51B5\",\n        borderRadius: \"4px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Action \", React.createElement(\"span\", {\n      \"aria-hidden\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"\\u25BE\")), React.createElement(MenuList, {\n      style: {\n        hover: \"#eee\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      onSelect: () => handlesample(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(FaPlusSquare, {\n      size: \"15\",\n      style: {\n        color: '#000'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), \" \", \"Collect Sample\"), React.createElement(MenuItem, {\n      onSelect: () => transfersample(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(TiArrowForward, {\n      size: \"15\",\n      style: {\n        color: '#000'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), \" \", \" Transfer Sample\"), e.data.lab_test_order_status === 5 ? React.createElement(MenuItem, {\n      onSelect: () => viewresult(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(FaRegEye, {\n      size: \"15\",\n      style: {\n        color: '#3F51B5'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), \" \", \"View Result\") : \"\"));\n  };\n\n  return React.createElement(PerfectScrollbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(MaterialTable, {\n    title: \"List of Health Tips\",\n    columns: [{\n      title: \" ID\",\n      field: \"Id\",\n      filtering: false\n    }, {\n      title: \"Title\",\n      field: \"title\",\n      filtering: false\n    }, {\n      title: \"Content\",\n      field: \"content\",\n      filtering: false\n    }, {\n      title: \"Type\",\n      field: \"type\",\n      filtering: false\n    }, {\n      title: \"Action\",\n      field: \"actions\",\n      filtering: false\n    }],\n    isLoading: loading,\n    data: healthtipsList.map(row => ({\n      Id: row.id,\n      title: row.title,\n      content: row.content,\n      type: row.healthtiptype === 1 ? \"General Health Tips\" : \"Covid 19 \",\n      actions: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"View Detail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        \"aria-label\": \"View Detail\",\n        onClick: () => viewDetail(row),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(VisibilityIcon, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }))), React.createElement(Tooltip, {\n        title: \"Edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        \"aria-label\": \"Edit\",\n        onClick: () => editDetail(row),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(BorderColorIcon, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }))), React.createElement(Tooltip, {\n        title: \"Delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        \"aria-label\": \"Delete\",\n        onClick: () => deleteDetail(row),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(DeleteForeverIcon, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }))))\n    })),\n    options: {\n      headerStyle: {\n        backgroundColor: \"#9F9FA5\",\n        color: \"#000\",\n        margin: \"auto\"\n      },\n      filtering: true,\n      exportButton: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })));\n};\n\nexport default FacilitiesListTable;","map":{"version":3,"sources":["/Users/matosky/pomade-covid/src/views/HealthTips/HealthTipsListTable.js"],"names":["React","useEffect","useState","PerfectScrollbar","useSelector","useDispatch","MaterialTable","fetchAllFHealthTips","VisibilityIcon","DeleteForeverIcon","Tooltip","IconButton","BorderColorIcon","Menu","MenuList","MenuButton","MenuItem","FacilitiesListTable","healthtipsList","state","healthtips","list","dispatch","loading","setLoading","console","log","onSuccess","onError","viewDetail","detail","editDetail","deleteDetail","Action","e","backgroundColor","color","border","borderRadius","hover","handlesample","transfersample","data","lab_test_order_status","viewresult","title","field","filtering","map","row","Id","id","content","type","healthtiptype","actions","headerStyle","margin","exportButton"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport { fetchAllFHealthTips } from '../../actions/healthtips'\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport {\n  Menu,\n  MenuList,\n  MenuButton,\n  MenuItem,\n} from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\n\nconst FacilitiesListTable = () => {\n  const healthtipsList = useSelector(state => state.healthtips.list);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false)\n console.log(healthtipsList)\n  useEffect(() => {\n      setLoading('true');\n      const onSuccess = () => {\n        setLoading(false)\n      }\n      const onError = () => {\n        setLoading(false)     \n      }\n    dispatch(fetchAllFHealthTips(onSuccess,onError))\n  }, [dispatch])\n  //const questList = questionsList\nconst viewDetail = (detail) =>{\n      console.log(detail)\n}\nconst editDetail = (detail) =>{\n  console.log(detail)\n}\nconst deleteDetail = (detail) =>{\n  console.log(detail)\n}\n\n\nconst Action = (e) =>{\n\n  return (\n\n      <Menu>\n          <MenuButton style={{ backgroundColor:\"#3F51B5\", color:\"#fff\", border:\"2px solid #3F51B5\", borderRadius:\"4px\"}}>\n            Action <span aria-hidden>▾</span>\n          </MenuButton>\n          <MenuList style={{hover:\"#eee\"}}>\n            <MenuItem onSelect={() => handlesample(e)}><FaPlusSquare size=\"15\" style={{color: '#000'}}/>{\" \"}Collect Sample</MenuItem>\n            <MenuItem onSelect={() => transfersample(e)}><TiArrowForward size=\"15\" style={{color: '#000'}}/>{\" \"} Transfer Sample</MenuItem>             \n            {e.data.lab_test_order_status===5 ?\n               <MenuItem onSelect={() => viewresult(e)}><FaRegEye size=\"15\" style={{color: '#3F51B5'}}/>{\" \"}View Result</MenuItem>\n               :\"\"}  \n          </MenuList>\n      </Menu>\n      )\n\n}\n  return (\n\n        <PerfectScrollbar>\n          <div >\n          <MaterialTable\n        title=\"List of Health Tips\"\n        columns={[\n          { title: \" ID\", field: \"Id\",filtering: false },\n          {\n            title: \"Title\",\n            field: \"title\",\n            filtering: false\n          },\n          \n          {\n            title: \"Content\",\n            field: \"content\",\n            filtering: false\n          },\n          {\n            title: \"Type\",\n            field: \"type\",\n            filtering: false\n          },\n          {\n            title: \"Action\",\n            field: \"actions\",\n            filtering: false,\n          },\n        ]}\n        isLoading={loading}\n        data={healthtipsList.map((row) => ({\n          Id: row.id,\n          title: row.title,          \n          content: row.content,\n          type: row.healthtiptype===1 ? \"General Health Tips\" : \"Covid 19 \",\n          actions: <div> \n                  <Tooltip title=\"View Detail\">\n                      <IconButton aria-label=\"View Detail\" onClick={() => viewDetail(row)} >\n                      <VisibilityIcon color=\"primary\"/>\n                    </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Edit\">\n                    <IconButton aria-label=\"Edit\" onClick={() => editDetail(row)}>\n                    <BorderColorIcon color=\"primary\"/>\n                  </IconButton>\n                  </Tooltip>\n                    <Tooltip title=\"Delete\">\n                    <IconButton aria-label=\"Delete\" onClick={() => deleteDetail(row)}>\n                    <DeleteForeverIcon color=\"primary\"/>\n                  </IconButton>\n                  </Tooltip>\n                  </div> \n\n            }))}\n        options={{\n        \n          headerStyle: {\n            backgroundColor: \"#9F9FA5\",\n            color: \"#000\",\n            margin: \"auto\"\n          },\n          filtering: true,          \n          exportButton: true,\n          \n        }}\n\n      />\n          </div>\n        </PerfectScrollbar>\n     \n  );\n};\n\n\n\nexport default FacilitiesListTable;\n"]},"metadata":{},"sourceType":"module"}